; ModuleID = 'find.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.options = type { i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, %struct.timespec, %struct.timespec, i8, i32, i64, i32, i32 (i8*, %struct.stat*)*, i8, i32, i16, i32 }
%struct.timespec = type { i64, i64 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.state = type { i32, i8, i8, i32, i8*, i32, i32, i8, i32, i8 }
%struct.predicate = type { i1 (i8*, %struct.stat*, %struct.predicate*)*, i8*, i32, i32, i8, i8, i8, i8, i32, float, i8, i8, i8*, %union.anon, %struct.predicate*, %struct.predicate*, %struct.predicate*, %struct.predicate_performance_info, %struct.parser_table* }
%union.anon = type { %struct.exec_val }
%struct.exec_val = type { i8, %struct.buildcmd_control, %struct.buildcmd_state, i8**, i32, i8, i8, i32 }
%struct.buildcmd_control = type { i32, i64, i64, i64, i64, i64, i8*, i32, i32 (%struct.buildcmd_control*, %struct.buildcmd_state*)*, i64, i64 }
%struct.buildcmd_state = type { i32, i8**, i32, i8*, i64, i64, i8*, i32, i32 }
%struct.predicate_performance_info = type { i64, i64 }
%struct.parser_table = type { i32, i8*, i1 (%struct.parser_table*, i8**, i32*)*, i1 (i8*, %struct.stat*, %struct.predicate*)* }
%struct.cost_assoc = type { i32, i8* }
%struct.prec_assoc = type { i16, i8* }
%struct.op_assoc = type { i16, i8* }
%struct.predlist = type { %struct.predicate*, %struct.predicate* }
%struct.debug_option_assoc = type { i8*, i32, i8* }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %union.anon.0, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i16, i16, i16, [1 x %struct.stat], [1 x i8] }
%union.anon.0 = type { %struct.hash_table* }
%struct.hash_table = type opaque
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.predicate.16 = type { {}*, i8*, i32, i32, i8, i8, i8, i8, i32, float, i8, i8, i8*, %union.anon, %struct.predicate.16*, %struct.predicate.16*, %struct.predicate.16*, %struct.predicate_performance_info, %struct.parser_table.15* }
%struct.parser_table.15 = type { i32, i8*, i1 (%struct.parser_table.15*, i8**, i32*)*, {}* }
%struct.time_val = type { i32, i32, %struct.timespec }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.format_val = type { %struct.segment*, %struct._IO_FILE*, i8*, i8, %struct.quoting_options* }
%struct.segment = type { i32, [2 x i8], i8*, i32, %struct.segment* }
%struct.quoting_options = type opaque
%struct.long_val = type { i32, i8, i64 }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.perm_val = type { i32, [2 x i32] }
%struct.re_pattern_buffer = type { i8*, i64, i64, i64, i8*, i8*, i64, i8 }
%struct.re_registers = type { i64, i64*, i64* }
%struct.size_val = type { i32, i32, i64 }
%struct.samefile_file_id = type { i64, i64, i32 }
%union.anon.0.17 = type { i32 }
%union.anon.1 = type { i32 }
%union.anon.2 = type { i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.access_check_args = type { i8*, i32, i32 }
%struct.pred_cost_lookup = type { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32 }
%union.anon.0.30 = type { i1 (i8*, %struct.stat*, %struct.predicate*)* }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%struct.mount_entry = type { i8*, i8*, i8*, i64, i8, %struct.mount_entry* }
%struct.mode_change = type opaque

@ftsoptions = internal global i32 264, align 4
@curr_fd = internal global i32 -1, align 4
@.str = private unnamed_addr constant [14 x i8] c"curr_fd != -1\00", align 1
@.str1 = private unnamed_addr constant [10 x i8] c"ftsfind.c\00", align 1
@__PRETTY_FUNCTION__.get_current_dirfd = private unnamed_addr constant [24 x i8] c"int get_current_dirfd()\00", align 1
@.str2 = private unnamed_addr constant [36 x i8] c"(-100 == curr_fd) || (curr_fd >= 0)\00", align 1
@.str3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str4 = private unnamed_addr constant [10 x i8] c"findutils\00", align 1
@.str5 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str6 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str7 = private unnamed_addr constant [29 x i8] c"cannot get current directory\00", align 1
@process_all_startpoints.defaultpath = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str8 = private unnamed_addr constant [17 x i8] c"cannot search %s\00", align 1
@stderr = external global %struct._IO_FILE*
@.str9 = private unnamed_addr constant [92 x i8] c"consider_visiting: fts_info=%-6s, fts_level=%2d, prev_depth=%d fts_path=%s, fts_accpath=%s\0A\00", align 1
@prev_depth = internal global i32 -2147483648, align 4
@.str10 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str11 = private unnamed_addr constant [17 x i8] c"!state.have_stat\00", align 1
@__PRETTY_FUNCTION__.consider_visiting = private unnamed_addr constant [40 x i8] c"void consider_visiting(FTS *, FTSENT *)\00", align 1
@.str12 = private unnamed_addr constant [16 x i8] c"state.type != 0\00", align 1
@.str13 = private unnamed_addr constant [43 x i8] c"Warning: file %s appears to have mode 0000\00", align 1
@.str14 = private unnamed_addr constant [22 x i8] c"Outstanding execdirs:\00", align 1
@.str15 = private unnamed_addr constant [9 x i8] c"-execdir\00", align 1
@.str16 = private unnamed_addr constant [7 x i8] c"-okdir\00", align 1
@.str17 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str18 = private unnamed_addr constant [10 x i8] c"multiple \00", align 1
@.str19 = private unnamed_addr constant [10 x i8] c"%d args: \00", align 1
@.str20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str21 = private unnamed_addr constant [7 x i8] c" none\0A\00", align 1
@.str22 = private unnamed_addr constant [121 x i8] c"Symbolic link %s is part of a loop in the directory hierarchy; we have already visited the directory to which it points.\00", align 1
@.str23 = private unnamed_addr constant [74 x i8] c"File system loop detected; %s is part of the same file system loop as %s.\00", align 1
@get_fts_info_name.buf = internal global [10 x i8] zeroinitializer, align 1
@.str24 = private unnamed_addr constant [6 x i8] c"FTS_D\00", align 1
@.str25 = private unnamed_addr constant [7 x i8] c"FTS_DC\00", align 1
@.str26 = private unnamed_addr constant [12 x i8] c"FTS_DEFAULT\00", align 1
@.str27 = private unnamed_addr constant [8 x i8] c"FTS_DNR\00", align 1
@.str28 = private unnamed_addr constant [8 x i8] c"FTS_DOT\00", align 1
@.str29 = private unnamed_addr constant [7 x i8] c"FTS_DP\00", align 1
@.str30 = private unnamed_addr constant [8 x i8] c"FTS_ERR\00", align 1
@.str31 = private unnamed_addr constant [6 x i8] c"FTS_F\00", align 1
@.str32 = private unnamed_addr constant [9 x i8] c"FTS_INIT\00", align 1
@.str33 = private unnamed_addr constant [7 x i8] c"FTS_NS\00", align 1
@.str34 = private unnamed_addr constant [9 x i8] c"FTS_NSOK\00", align 1
@.str35 = private unnamed_addr constant [7 x i8] c"FTS_SL\00", align 1
@.str36 = private unnamed_addr constant [11 x i8] c"FTS_SLNONE\00", align 1
@.str37 = private unnamed_addr constant [6 x i8] c"FTS_W\00", align 1
@.str38 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str39 = private unnamed_addr constant [30 x i8] c"dir_fd == -100 || dir_fd >= 0\00", align 1
@__PRETTY_FUNCTION__.inside_dir = private unnamed_addr constant [21 x i8] c"void inside_dir(int)\00", align 1
@.str40 = private unnamed_addr constant [28 x i8] c"curr_fd >= 0 || dir_fd >= 0\00", align 1
@.str41 = private unnamed_addr constant [2 x i8] c".\00", align 1
@starting_dir = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str41, i32 0, i32 0), align 8
@program_name = common global i8* null, align 8
@options = common global %struct.options zeroinitializer, align 8
@state = common global %struct.state zeroinitializer, align 8
@starting_desc = common global i32 0, align 4
@.str52 = private unnamed_addr constant [39 x i8] c"COMP_GT == pred_ptr->args.reftime.kind\00", align 1
@.str153 = private unnamed_addr constant [7 x i8] c"pred.c\00", align 1
@__PRETTY_FUNCTION__.pred_anewer = private unnamed_addr constant [69 x i8] c"boolean pred_anewer(const char *, struct stat *, struct predicate *)\00", align 1
@__PRETTY_FUNCTION__.pred_cnewer = private unnamed_addr constant [69 x i8] c"boolean pred_cnewer(const char *, struct stat *, struct predicate *)\00", align 1
@.str254 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str355 = private unnamed_addr constant [17 x i8] c"cannot delete %s\00", align 1
@.str456 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str557 = private unnamed_addr constant [3 x i8] c"./\00", align 1
@.str658 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str759 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__PRETTY_FUNCTION__.pred_fprintf = private unnamed_addr constant [70 x i8] c"boolean pred_fprintf(const char *, struct stat *, struct predicate *)\00", align 1
@.str860 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__PRETTY_FUNCTION__.pred_newer = private unnamed_addr constant [68 x i8] c"boolean pred_newer(const char *, struct stat *, struct predicate *)\00", align 1
@__PRETTY_FUNCTION__.pred_newerXY = private unnamed_addr constant [70 x i8] c"boolean pred_newerXY(const char *, struct stat *, struct predicate *)\00", align 1
@.str961 = private unnamed_addr constant [41 x i8] c"pred_ptr->args.reftime.xval != XVAL_TIME\00", align 1
@.str1062 = private unnamed_addr constant [48 x i8] c"Warning: cannot determine birth time of file %s\00", align 1
@.str1163 = private unnamed_addr constant [10 x i8] c"collected\00", align 1
@.str1264 = private unnamed_addr constant [16 x i8] c"state.have_type\00", align 1
@__PRETTY_FUNCTION__.pred_type = private unnamed_addr constant [67 x i8] c"boolean pred_type(const char *, struct stat *, struct predicate *)\00", align 1
@launch.first_time = internal global i32 1, align 4
@.str1365 = private unnamed_addr constant [19 x i8] c"starting_desc >= 0\00", align 1
@__PRETTY_FUNCTION__.launch = private unnamed_addr constant [69 x i8] c"int launch(const struct buildcmd_control *, struct buildcmd_state *)\00", align 1
@.str1466 = private unnamed_addr constant [31 x i8] c"execp->dir_fd == starting_desc\00", align 1
@stdout = external global %struct._IO_FILE*
@.str1567 = private unnamed_addr constant [12 x i8] c"cannot fork\00", align 1
@.str1668 = private unnamed_addr constant [21 x i8] c"error waiting for %s\00", align 1
@.str1769 = private unnamed_addr constant [27 x i8] c"%s terminated by signal %d\00", align 1
@.str1870 = private unnamed_addr constant [6 x i8] c"[%s] \00", align 1
@.str1971 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str2072 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str2173 = private unnamed_addr constant [13 x i8] c"[call stat] \00", align 1
@.str2274 = private unnamed_addr constant [13 x i8] c"[need type] \00", align 1
@.str2375 = private unnamed_addr constant [7 x i8] c" [%g] \00", align 1
@.str2476 = private unnamed_addr constant [9 x i8] c"[%ld/%ld\00", align 1
@.str2577 = private unnamed_addr constant [6 x i8] c"=%g] \00", align 1
@.str2678 = private unnamed_addr constant [5 x i8] c"=_] \00", align 1
@.str2779 = private unnamed_addr constant [43 x i8] c"Predicate success rates after completion:\0A\00", align 1
@.str2880 = private unnamed_addr constant [27 x i8] c"p->pred_func != ((void*)0)\00", align 1
@__PRETTY_FUNCTION__.pred_sanity_check = private unnamed_addr constant [49 x i8] c"void pred_sanity_check(const struct predicate *)\00", align 1
@.str2981 = private unnamed_addr constant [30 x i8] c"p->parser_entry != ((void*)0)\00", align 1
@.str3082 = private unnamed_addr constant [43 x i8] c"p->parser_entry->pred_func == p->pred_func\00", align 1
@.str3183 = private unnamed_addr constant [36 x i8] c"p->parser_entry->type != ARG_OPTION\00", align 1
@.str3284 = private unnamed_addr constant [47 x i8] c"p->parser_entry->type != ARG_POSITIONAL_OPTION\00", align 1
@.str3385 = private unnamed_addr constant [16 x i8] c"p->side_effects\00", align 1
@.str3486 = private unnamed_addr constant [20 x i8] c"p->no_default_print\00", align 1
@.str3587 = private unnamed_addr constant [21 x i8] c"!p->no_default_print\00", align 1
@.str3688 = private unnamed_addr constant [17 x i8] c"!p->side_effects\00", align 1
@.str3789 = private unnamed_addr constant [4 x i8] c" ( \00", align 1
@.str3890 = private unnamed_addr constant [4 x i8] c" ) \00", align 1
@format_date.buf = internal global [791 x i8] zeroinitializer, align 16
@.str3991 = private unnamed_addr constant [6 x i8] c"%F+%T\00", align 1
@.str4092 = private unnamed_addr constant [8 x i8] c".%09ld0\00", align 1
@.str4193 = private unnamed_addr constant [26 x i8] c"charsprinted < NS_BUF_LEN\00", align 1
@__PRETTY_FUNCTION__.format_date = private unnamed_addr constant [40 x i8] c"char *format_date(struct timespec, int)\00", align 1
@.str42 = private unnamed_addr constant [8 x i8] c"p > buf\00", align 1
@.str43 = private unnamed_addr constant [25 x i8] c"p < (buf + (sizeof buf))\00", align 1
@.str44 = private unnamed_addr constant [18 x i8] c"sizeof buf > used\00", align 1
@.str45 = private unnamed_addr constant [46 x i8] c"charsprinted=%ld but remaining=%lu: ns_buf=%s\00", align 1
@.str46 = private unnamed_addr constant [27 x i8] c"strlen(ns_buf) < remaining\00", align 1
@do_time_format.buf = internal global i8* null, align 8
@do_time_format.buf_size = internal global i64 0, align 8
@.str47 = private unnamed_addr constant [4 x i8] c"_%s\00", align 1
@.str48 = private unnamed_addr constant [51 x i8] c"end_of_seconds + ns_size + suffix_len == final_len\00", align 1
@__PRETTY_FUNCTION__.do_time_format = private unnamed_addr constant [76 x i8] c"char *do_time_format(const char *, const struct tm *, const char *, size_t)\00", align 1
@prep_child_for_exec.inputfile = internal constant [10 x i8] c"/dev/null\00", align 1
@.str49 = private unnamed_addr constant [28 x i8] c"Cannot close standard input\00", align 1
@.str50 = private unnamed_addr constant [12 x i8] c"dir_fd >= 0\00", align 1
@__PRETTY_FUNCTION__.prep_child_for_exec = private unnamed_addr constant [42 x i8] c"boolean prep_child_for_exec(boolean, int)\00", align 1
@.str51 = private unnamed_addr constant [27 x i8] c"Failed to change directory\00", align 1
@.str5294 = private unnamed_addr constant [17 x i8] c"< %s ... %s > ? \00", align 1
@.str53 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str54 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str55 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str56 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str57 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str58 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str59 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str60 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str61 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str62 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str63 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@ctime_format.resultbuf = internal global [1024 x i8] zeroinitializer, align 16
@.str64 = private unnamed_addr constant [18 x i8] c"ptm->tm_wday >= 0\00", align 1
@__PRETTY_FUNCTION__.ctime_format = private unnamed_addr constant [36 x i8] c"char *ctime_format(struct timespec)\00", align 1
@.str65 = private unnamed_addr constant [17 x i8] c"ptm->tm_wday < 7\00", align 1
@.str66 = private unnamed_addr constant [17 x i8] c"ptm->tm_mon >= 0\00", align 1
@.str67 = private unnamed_addr constant [17 x i8] c"ptm->tm_mon < 12\00", align 1
@.str68 = private unnamed_addr constant [18 x i8] c"ptm->tm_hour >= 0\00", align 1
@.str69 = private unnamed_addr constant [18 x i8] c"ptm->tm_hour < 24\00", align 1
@.str70 = private unnamed_addr constant [17 x i8] c"ptm->tm_min < 60\00", align 1
@.str71 = private unnamed_addr constant [18 x i8] c"ptm->tm_sec <= 61\00", align 1
@.str72 = private unnamed_addr constant [39 x i8] c"%3s %3s %2d %02d:%02d:%02d.%010ld %04d\00", align 1
@weekdays = internal global [7 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str86, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str87, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str92, i32 0, i32 0)], align 16
@months = internal global [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str74, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str76, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str78, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str79, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str80, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str81, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str82, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str84, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str85, i32 0, i32 0)], align 16
@.str73 = private unnamed_addr constant [13 x i8] c"nout < 1024u\00", align 1
@.str74 = private unnamed_addr constant [4 x i8] c"Jan\00", align 1
@.str75 = private unnamed_addr constant [4 x i8] c"Feb\00", align 1
@.str76 = private unnamed_addr constant [4 x i8] c"Mar\00", align 1
@.str77 = private unnamed_addr constant [4 x i8] c"Apr\00", align 1
@.str78 = private unnamed_addr constant [4 x i8] c"May\00", align 1
@.str79 = private unnamed_addr constant [4 x i8] c"Jun\00", align 1
@.str80 = private unnamed_addr constant [4 x i8] c"Jul\00", align 1
@.str81 = private unnamed_addr constant [4 x i8] c"Aug\00", align 1
@.str82 = private unnamed_addr constant [4 x i8] c"Sep\00", align 1
@.str83 = private unnamed_addr constant [4 x i8] c"Oct\00", align 1
@.str84 = private unnamed_addr constant [4 x i8] c"Nov\00", align 1
@.str85 = private unnamed_addr constant [4 x i8] c"Dec\00", align 1
@.str86 = private unnamed_addr constant [4 x i8] c"Sun\00", align 1
@.str87 = private unnamed_addr constant [4 x i8] c"Mon\00", align 1
@.str88 = private unnamed_addr constant [4 x i8] c"Tue\00", align 1
@.str89 = private unnamed_addr constant [4 x i8] c"Wed\00", align 1
@.str90 = private unnamed_addr constant [4 x i8] c"Thu\00", align 1
@.str91 = private unnamed_addr constant [4 x i8] c"Fri\00", align 1
@.str92 = private unnamed_addr constant [4 x i8] c"Sat\00", align 1
@__PRETTY_FUNCTION__.pred_timewindow = private unnamed_addr constant [72 x i8] c"boolean pred_timewindow(struct timespec, const struct predicate *, int)\00", align 1
@.str101 = private unnamed_addr constant [19 x i8] c"invalid expression\00", align 1
@.str1102 = private unnamed_addr constant [81 x i8] c"invalid expression; you have used a binary operator '%s' with nothing before it.\00", align 1
@.str2103 = private unnamed_addr constant [44 x i8] c"expected an expression between '%s' and ')'\00", align 1
@.str3104 = private unnamed_addr constant [34 x i8] c"expected an expression after '%s'\00", align 1
@.str4105 = private unnamed_addr constant [42 x i8] c"invalid expression; you have too many ')'\00", align 1
@.str5106 = private unnamed_addr constant [111 x i8] c"invalid expression; expected to find a ')' but didn't see one.  Perhaps you need an extra predicate after '%s'\00", align 1
@.str6107 = private unnamed_addr constant [55 x i8] c"invalid expression; empty parentheses are not allowed.\00", align 1
@.str7108 = private unnamed_addr constant [81 x i8] c"invalid expression; I was expecting to find a ')' somewhere but did not see one.\00", align 1
@.str8109 = private unnamed_addr constant [33 x i8] c"oops -- invalid expression type!\00", align 1
@.str9110 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str10111 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str11112 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@eval_tree = internal global %struct.predicate* null, align 8
@.str12113 = private unnamed_addr constant [16 x i8] c"((void*)0) != p\00", align 1
@.str13114 = private unnamed_addr constant [7 x i8] c"tree.c\00", align 1
@__PRETTY_FUNCTION__.calculate_derived_rates = private unnamed_addr constant [50 x i8] c"float calculate_derived_rates(struct predicate *)\00", align 1
@.str14115 = private unnamed_addr constant [25 x i8] c"p->p_type != CLOSE_PAREN\00", align 1
@.str15116 = private unnamed_addr constant [24 x i8] c"p->p_type != OPEN_PAREN\00", align 1
@.str16117 = private unnamed_addr constant [28 x i8] c"((void*)0) == p->pred_right\00", align 1
@.str17118 = private unnamed_addr constant [27 x i8] c"((void*)0) == p->pred_left\00", align 1
@.str18119 = private unnamed_addr constant [38 x i8] c"( ((p)->pred_func) == (pred_negate) )\00", align 1
@.str19120 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@predicates = internal global %struct.predicate* null, align 8
@.str20121 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str21122 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str22123 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str23124 = private unnamed_addr constant [25 x i8] c"entry_open != ((void*)0)\00", align 1
@__PRETTY_FUNCTION__.build_expression_tree = private unnamed_addr constant [59 x i8] c"struct predicate *build_expression_tree(int, char **, int)\00", align 1
@.str24125 = private unnamed_addr constant [26 x i8] c"entry_close != ((void*)0)\00", align 1
@.str25126 = private unnamed_addr constant [26 x i8] c"entry_print != ((void*)0)\00", align 1
@last_pred = internal global %struct.predicate* null, align 8
@.str26127 = private unnamed_addr constant [34 x i8] c"paths must precede expression: %s\00", align 1
@.str27128 = private unnamed_addr constant [23 x i8] c"unknown predicate `%s'\00", align 1
@.str28129 = private unnamed_addr constant [23 x i8] c"invalid predicate `%s'\00", align 1
@.str29130 = private unnamed_addr constant [30 x i8] c"invalid argument `%s' to `%s'\00", align 1
@.str30131 = private unnamed_addr constant [25 x i8] c"missing argument to `%s'\00", align 1
@.str31132 = private unnamed_addr constant [7 x i8] c"-print\00", align 1
@.str32133 = private unnamed_addr constant [17 x i8] c"Predicate List:\0A\00", align 1
@.str33134 = private unnamed_addr constant [22 x i8] c"you have too many ')'\00", align 1
@.str34135 = private unnamed_addr constant [32 x i8] c"unexpected extra predicate '%s'\00", align 1
@.str35136 = private unnamed_addr constant [27 x i8] c"unexpected extra predicate\00", align 1
@.str36137 = private unnamed_addr constant [12 x i8] c"Eval Tree:\0A\00", align 1
@.str37138 = private unnamed_addr constant [22 x i8] c"Optimized Eval Tree:\0A\00", align 1
@.str38139 = private unnamed_addr constant [25 x i8] c"Optimized command line:\0A\00", align 1
@.str39140 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str40141 = private unnamed_addr constant [26 x i8] c"entry->type != ARG_OPTION\00", align 1
@__PRETTY_FUNCTION__.get_new_pred = private unnamed_addr constant [60 x i8] c"struct predicate *get_new_pred(const struct parser_table *)\00", align 1
@.str41142 = private unnamed_addr constant [37 x i8] c"entry->type != ARG_POSITIONAL_OPTION\00", align 1
@get_new_pred_chk_op.entry_and = internal global %struct.parser_table* null, align 8
@.str42143 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str43144 = private unnamed_addr constant [24 x i8] c"entry_and != ((void*)0)\00", align 1
@__PRETTY_FUNCTION__.get_new_pred_chk_op = private unnamed_addr constant [67 x i8] c"struct predicate *get_new_pred_chk_op(const struct parser_table *)\00", align 1
@.str44145 = private unnamed_addr constant [42 x i8] c"oops -- invalid default insertion of and!\00", align 1
@.str45146 = private unnamed_addr constant [3 x i8] c"-a\00", align 1
@.str46147 = private unnamed_addr constant [8 x i8] c"Nothing\00", align 1
@.str47148 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str48149 = private unnamed_addr constant [9 x i8] c"StatInfo\00", align 1
@.str49150 = private unnamed_addr constant [9 x i8] c"LinkName\00", align 1
@.str50151 = private unnamed_addr constant [11 x i8] c"AccessInfo\00", align 1
@.str51152 = private unnamed_addr constant [12 x i8] c"SyncDiskHit\00", align 1
@.str52153 = private unnamed_addr constant [13 x i8] c"EventualExec\00", align 1
@.str53154 = private unnamed_addr constant [14 x i8] c"ImmediateExec\00", align 1
@.str54155 = private unnamed_addr constant [16 x i8] c"UserInteraction\00", align 1
@.str55156 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@cost_table = global [10 x %struct.cost_assoc] [%struct.cost_assoc { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str46147, i32 0, i32 0) }, %struct.cost_assoc { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str47148, i32 0, i32 0) }, %struct.cost_assoc { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str48149, i32 0, i32 0) }, %struct.cost_assoc { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str49150, i32 0, i32 0) }, %struct.cost_assoc { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str50151, i32 0, i32 0) }, %struct.cost_assoc { i32 5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str51152, i32 0, i32 0) }, %struct.cost_assoc { i32 6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str52153, i32 0, i32 0) }, %struct.cost_assoc { i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str53154, i32 0, i32 0) }, %struct.cost_assoc { i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str54155, i32 0, i32 0) }, %struct.cost_assoc { i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str55156, i32 0, i32 0) }], align 16
@.str56157 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str57158 = private unnamed_addr constant [7 x i8] c"pred=[\00", align 1
@.str58159 = private unnamed_addr constant [18 x i8] c"] type=%s prec=%s\00", align 1
@.str59160 = private unnamed_addr constant [38 x i8] c" cost=%s rate=%#03.2g %sside effects \00", align 1
@.str60161 = private unnamed_addr constant [4 x i8] c"no \00", align 1
@.str61162 = private unnamed_addr constant [7 x i8] c"Needs \00", align 1
@.str62163 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str63164 = private unnamed_addr constant [7 x i8] c"%stype\00", align 1
@.str64165 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str65166 = private unnamed_addr constant [14 x i8] c"no children.\0A\00", align 1
@.str66167 = private unnamed_addr constant [7 x i8] c"left:\0A\00", align 1
@.str67168 = private unnamed_addr constant [10 x i8] c"no left.\0A\00", align 1
@.str68169 = private unnamed_addr constant [8 x i8] c"right:\0A\00", align 1
@.str69170 = private unnamed_addr constant [11 x i8] c"no right.\0A\00", align 1
@.str70171 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@prec_table = internal global [7 x %struct.prec_assoc] [%struct.prec_assoc { i16 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str71172, i32 0, i32 0) }, %struct.prec_assoc { i16 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str72173, i32 0, i32 0) }, %struct.prec_assoc { i16 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str73174, i32 0, i32 0) }, %struct.prec_assoc { i16 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str42143, i32 0, i32 0) }, %struct.prec_assoc { i16 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str74175, i32 0, i32 0) }, %struct.prec_assoc { i16 5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str75176, i32 0, i32 0) }, %struct.prec_assoc { i16 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str76177, i32 0, i32 0) }], align 16
@.str71172 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str72173 = private unnamed_addr constant [6 x i8] c"comma\00", align 1
@.str73174 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str74175 = private unnamed_addr constant [7 x i8] c"negate\00", align 1
@.str75176 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str76177 = private unnamed_addr constant [9 x i8] c"unknown \00", align 1
@type_table = internal global [7 x %struct.op_assoc] [%struct.op_assoc { i16 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str71172, i32 0, i32 0) }, %struct.op_assoc { i16 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str77178, i32 0, i32 0) }, %struct.op_assoc { i16 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str78179, i32 0, i32 0) }, %struct.op_assoc { i16 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str79180, i32 0, i32 0) }, %struct.op_assoc { i16 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str80181, i32 0, i32 0) }, %struct.op_assoc { i16 5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str81182, i32 0, i32 0) }, %struct.op_assoc { i16 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str70171, i32 0, i32 0) }], align 16
@.str77178 = private unnamed_addr constant [8 x i8] c"primary\00", align 1
@.str78179 = private unnamed_addr constant [7 x i8] c"uni_op\00", align 1
@.str79180 = private unnamed_addr constant [6 x i8] c"bi_op\00", align 1
@.str80181 = private unnamed_addr constant [13 x i8] c"open_paren  \00", align 1
@.str81182 = private unnamed_addr constant [13 x i8] c"close_paren \00", align 1
@.str82183 = private unnamed_addr constant [23 x i8] c"Not a binary operation\00", align 1
@.str83184 = private unnamed_addr constant [22 x i8] c"Doesn't have two arms\00", align 1
@.str84185 = private unnamed_addr constant [29 x i8] c"Left arm has no child on RHS\00", align 1
@.str85186 = private unnamed_addr constant [30 x i8] c"Left subtree has side-effects\00", align 1
@.str86187 = private unnamed_addr constant [31 x i8] c"Right subtree has side-effects\00", align 1
@.str87188 = private unnamed_addr constant [16 x i8] c"efficient as-is\00", align 1
@.str88189 = private unnamed_addr constant [27 x i8] c"Success rates: l=%f, r=%f\0A\00", align 1
@.str89190 = private unnamed_addr constant [47 x i8] c"Operation is OR and right success rate >= left\00", align 1
@.str90191 = private unnamed_addr constant [48 x i8] c"Operation is AND and right success rate <= left\00", align 1
@.str91192 = private unnamed_addr constant [14 x i8] c"Not AND or OR\00", align 1
@.str92193 = private unnamed_addr constant [25 x i8] c"Performing arm swap on:\0A\00", align 1
@.str93 = private unnamed_addr constant [33 x i8] c"Not an arm swap candidate (%s):\0A\00", align 1
@.str94 = private unnamed_addr constant [19 x i8] c"BI_OP == p->p_type\00", align 1
@__PRETTY_FUNCTION__.check_normalization = private unnamed_addr constant [54 x i8] c"void check_normalization(struct predicate *, boolean)\00", align 1
@.str95 = private unnamed_addr constant [30 x i8] c"BI_OP == p->pred_left->p_type\00", align 1
@.str96 = private unnamed_addr constant [23 x i8] c"Normalized Eval Tree:\0A\00", align 1
@.str97 = private unnamed_addr constant [33 x i8] c"-O%d: promoting cheap predicate \00", align 1
@.str98 = private unnamed_addr constant [17 x i8] c" into name_list\0A\00", align 1
@.str99 = private unnamed_addr constant [30 x i8] c"-O%d: categorising predicate \00", align 1
@.str100 = private unnamed_addr constant [15 x i8] c" by cost (%s)\0A\00", align 1
@merge_lists.mergefn = internal global void (%struct.predlist*, %struct.predicate**)* null, align 8
@.str101194 = private unnamed_addr constant [5 x i8] c"%s:\0A\00", align 1
@.str102 = private unnamed_addr constant [27 x i8] c"predlist before merge sort\00", align 1
@.str103 = private unnamed_addr constant [26 x i8] c"predlist after merge sort\00", align 1
@.str104 = private unnamed_addr constant [3 x i8] c"-o\00", align 1
@pred_table_sorted = internal global i32 0, align 4
@.str105 = private unnamed_addr constant [48 x i8] c"Failed to sort the costlookup array (indirect).\00", align 1
@.str106 = private unnamed_addr constant [40 x i8] c"warning: no cost entry for predicate %s\00", align 1
@.str107 = private unnamed_addr constant [12 x i8] c"result <= 0\00", align 1
@__PRETTY_FUNCTION__.check_sorted = private unnamed_addr constant [82 x i8] c"boolean check_sorted(void *, size_t, size_t, int (*)(const void *, const void *))\00", align 1
@costlookup = internal global <{ { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } }> <{ { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_amin to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_anewer to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_atime to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_closeparen to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_cmin to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_cnewer to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_comma to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ctime to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_delete to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 5, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_empty to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_exec to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 6, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 6, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_executable to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 4, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_false to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprint to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprint0 to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprintf to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fstype to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_gid to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_group to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ilname to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 3, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_iname to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_inum to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ipath to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_links to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_lname to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 3, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ls to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fls to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_mmin to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_mtime to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_name to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_negate to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_newer to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_newerXY to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_nogroup to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_nouser to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ok to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 8, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_okdir to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 8, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_openparen to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_path to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_perm to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_print to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_print0 to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_prune to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_quit to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_readable to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 4, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_regex to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_samefile to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_size to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_true to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 0, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_type to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 1, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_uid to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_used to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_user to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 2, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_writable to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 4, [4 x i8] undef }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } { i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_xtype to i1 (i8*, %struct.stat*, %struct.predicate*)*), i32 1, [4 x i8] undef } }>, align 16
@.str108 = private unnamed_addr constant [38 x i8] c"oops -- invalid expression type (%d)!\00", align 1
@.str201 = private unnamed_addr constant [31 x i8] c"entry->pred_func != ((void*)0)\00", align 1
@.str1202 = private unnamed_addr constant [7 x i8] c"util.c\00", align 1
@__PRETTY_FUNCTION__.insert_primary = private unnamed_addr constant [62 x i8] c"struct predicate *insert_primary(const struct parser_table *)\00", align 1
@.str2203 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@.str3204 = private unnamed_addr constant [40 x i8] c"Usage: %s [-H] [-L] [-P] [-Olevel] [-D \00", align 1
@.str4205 = private unnamed_addr constant [26 x i8] c"] [path...] [expression]\0A\00", align 1
@.str5206 = private unnamed_addr constant [43 x i8] c"Warning: file %s appears to have mode 0000\00", align 1
@.str6207 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str7208 = private unnamed_addr constant [6 x i8] c"Linux\00", align 1
@.str8209 = private unnamed_addr constant [8 x i8] c"FreeBSD\00", align 1
@.str9210 = private unnamed_addr constant [22 x i8] c"state.cwd_dir_fd >= 0\00", align 1
@__PRETTY_FUNCTION__.optionh_stat = private unnamed_addr constant [46 x i8] c"int optionh_stat(const char *, struct stat *)\00", align 1
@__PRETTY_FUNCTION__.optionl_stat = private unnamed_addr constant [46 x i8] c"int optionl_stat(const char *, struct stat *)\00", align 1
@.str10211 = private unnamed_addr constant [52 x i8] c"(state.cwd_dir_fd >= 0) || (state.cwd_dir_fd==-100)\00", align 1
@__PRETTY_FUNCTION__.optionp_stat = private unnamed_addr constant [46 x i8] c"int optionp_stat(const char *, struct stat *)\00", align 1
@stat_count = internal global i64 0, align 8
@.str11212 = private unnamed_addr constant [17 x i8] c"debug_stat (%s)\0A\00", align 1
@.str12213 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__PRETTY_FUNCTION__.debug_stat = private unnamed_addr constant [44 x i8] c"int debug_stat(const char *, struct stat *)\00", align 1
@.str13214 = private unnamed_addr constant [3 x i8] c"-H\00", align 1
@.str14215 = private unnamed_addr constant [3 x i8] c"-L\00", align 1
@.str15216 = private unnamed_addr constant [3 x i8] c"-P\00", align 1
@.str16217 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str17218 = private unnamed_addr constant [3 x i8] c"-D\00", align 1
@.str18219 = private unnamed_addr constant [3 x i8] c"-O\00", align 1
@.str19220 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str20221 = private unnamed_addr constant [16 x i8] c"FIND_BLOCK_SIZE\00", align 1
@.str21222 = private unnamed_addr constant [146 x i8] c"The environment variable FIND_BLOCK_SIZE is not supported, the only thing that affects the block size is the POSIXLY_CORRECT environment variable\00", align 1
@.str22223 = private unnamed_addr constant [16 x i8] c"t != (time_t)-1\00", align 1
@__PRETTY_FUNCTION__.now = private unnamed_addr constant [22 x i8] c"struct timespec now()\00", align 1
@.str23224 = private unnamed_addr constant [64 x i8] c"The -O option must be immediately followed by a decimal integer\00", align 1
@.str24225 = private unnamed_addr constant [53 x i8] c"Please specify a decimal number immediately after -O\00", align 1
@.str25226 = private unnamed_addr constant [30 x i8] c"Invalid optimisation level %s\00", align 1
@.str26227 = private unnamed_addr constant [104 x i8] c"Optimisation level %lu is too high.  If you want to find files very quickly, consider using GNU locate.\00", align 1
@process_debug_options.delimiters = internal constant [2 x i8] c",\00", align 1
@debugassoc = internal global [7 x %struct.debug_option_assoc] [%struct.debug_option_assoc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str29230, i32 0, i32 0), i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str30231, i32 0, i32 0) }, %struct.debug_option_assoc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str31232, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str32233, i32 0, i32 0) }, %struct.debug_option_assoc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str33234, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str34235, i32 0, i32 0) }, %struct.debug_option_assoc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str35236, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str36237, i32 0, i32 0) }, %struct.debug_option_assoc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str37238, i32 0, i32 0), i32 64, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str38239, i32 0, i32 0) }, %struct.debug_option_assoc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str39240, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str40241, i32 0, i32 0) }, %struct.debug_option_assoc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str41242, i32 0, i32 0), i32 32, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str42243, i32 0, i32 0) }], align 16
@.str27228 = private unnamed_addr constant [36 x i8] c"Ignoring unrecognised debug flag %s\00", align 1
@.str28229 = private unnamed_addr constant [33 x i8] c"Empty argument to the -D option.\00", align 1
@.str29230 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str30231 = private unnamed_addr constant [31 x i8] c"Explain the various -D options\00", align 1
@.str31232 = private unnamed_addr constant [5 x i8] c"tree\00", align 1
@.str32233 = private unnamed_addr constant [28 x i8] c"Display the expression tree\00", align 1
@.str33234 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str34235 = private unnamed_addr constant [38 x i8] c"Navigate the directory tree verbosely\00", align 1
@.str35236 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str36237 = private unnamed_addr constant [36 x i8] c"Trace calls to stat(2) and lstat(2)\00", align 1
@.str37238 = private unnamed_addr constant [6 x i8] c"rates\00", align 1
@.str38239 = private unnamed_addr constant [44 x i8] c"Indicate how often each predicate succeeded\00", align 1
@.str39240 = private unnamed_addr constant [4 x i8] c"opt\00", align 1
@.str40241 = private unnamed_addr constant [53 x i8] c"Show diagnostic information relating to optimisation\00", align 1
@.str41242 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str42243 = private unnamed_addr constant [72 x i8] c"Show diagnostic information relating to -exec, -execdir, -ok and -okdir\00", align 1
@.str43244 = private unnamed_addr constant [59 x i8] c"fallback_stat(): stat(%s) failed; falling back on lstat()\0A\00", align 1
@.str44245 = private unnamed_addr constant [16 x i8] c"standard output\00", align 1
@.str45246 = private unnamed_addr constant [27 x i8] c"state.execdirs_outstanding\00", align 1
@__PRETTY_FUNCTION__.do_complete_pending_execdirs = private unnamed_addr constant [59 x i8] c"void do_complete_pending_execdirs(struct predicate *, int)\00", align 1
@.str46247 = private unnamed_addr constant [25 x i8] c"Valid arguments for -D:\0A\00", align 1
@.str47248 = private unnamed_addr constant [10 x i8] c"%-10s %s\0A\00", align 1
@.str48249 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str49250 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str50251 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@filesystem_type.current_fstype = internal global i8* null, align 8
@filesystem_type.current_dev = internal global i64 0, align 8
@fstype_known = internal global i32 0, align 4
@.str286 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str1287 = private unnamed_addr constant [37 x i8] c"Cannot read mounted file system list\00", align 1
@.str2288 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str291 = private unnamed_addr constant [171 x i8] c"The -delete action atomatically turns on -depth, but -prune does nothing when -depth is in effect.  If you want to carry on anyway, just explicitly use the -depth option.\00", align 1
@first_nonoption_arg = internal global i8* null, align 8
@.str1292 = private unnamed_addr constant [230 x i8] c"warning: you have specified the %s option after a non-option argument %s, but options are not positional (%s affects tests specified before it as well as those specified after it).  Please specify options before other arguments.\0A\00", align 1
@.str2293 = private unnamed_addr constant [7 x i8] c"-newer\00", align 1
@parse_entry_newerXY = internal constant %struct.parser_table { i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str183, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_newerXY, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_newerXY to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, align 8
@parse_table = internal constant [85 x %struct.parser_table] [%struct.parser_table { i32 5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str8299, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_negate, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_negate to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str9300, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_negate, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_negate to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str10301, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_openparen, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_openparen to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str11302, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_closeparen, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_closeparen to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str12303, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_comma, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_comma to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str13304, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_and, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str14305, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_amin, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_amin to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str15306, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_and, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str16307, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_anewer, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_anewer to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str17308, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_time, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_atime to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str18309, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_cmin, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_cmin to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str19310, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_cnewer, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_cnewer to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str20311, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_time, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ctime to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str21312, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_daystart, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str22313, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_delete, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_delete to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str23314, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_d, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str24315, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_depth, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str25316, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_empty, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_empty to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str26317, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_exec, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_exec to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str27318, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_accesscheck, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_executable to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str28319, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_execdir, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str29320, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_fls, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fls to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str30321, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_follow, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str31322, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_fprint, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprint to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str32323, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_fprint0, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprint0 to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str33324, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_fprintf, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprintf to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str34325, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_fstype, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fstype to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str35326, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_gid, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_gid to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str36327, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_group, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_group to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str37328, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_ignore_race, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str38329, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_ilname, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ilname to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str39330, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_iname, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_iname to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str40331, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_inum, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_inum to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str41332, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_ipath, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ipath to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str42333, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_iregex, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str43334, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_iwholename, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str44335, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_links, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_links to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str45336, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_lname, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_lname to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str46337, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_ls, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ls to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str47338, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_maxdepth, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str48339, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_mindepth, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str49340, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_mmin, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_mmin to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str50341, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_xdev, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str51342, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_time, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_mtime to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str52343, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_name, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_name to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str53344, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_newer, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_newer to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str17308, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_time, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_atime to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str54345, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_noleaf, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str55346, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_nogroup, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_nogroup to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str56347, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_nouser, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_nouser to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str57348, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_noignore_race, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str58349, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_nowarn, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str59350, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_or, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str60351, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_or, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str61352, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_ok, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ok to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str62353, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_okdir, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_okdir to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str63354, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_path, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_path to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str64355, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_perm, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_perm to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str65356, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_print, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_print to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str66357, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_print0, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_print0 to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str67358, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_printf, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str68359, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_prune, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_prune to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str69360, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_quit, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_quit to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str70361, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_accesscheck, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_readable to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str71362, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_regex, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_regex to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str72363, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_regextype, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str73364, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_samefile, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_samefile to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str74365, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_size, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_size to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str75366, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_type, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_type to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str76367, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_uid, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_uid to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str77368, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_used, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_used to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str78369, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_user, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_user to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str79370, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_warn, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str80371, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_wholename, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str81372, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_accesscheck, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_writable to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str82373, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_xdev, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str83374, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_xtype, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_xtype to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str84375, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_false, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_false to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str85376, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_true, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_true to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str86377, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* null, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_true to i1 (i8*, %struct.stat*, %struct.predicate*)*) }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str87378, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_help, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str88379, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_help, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str89380, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_version, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str90381, i32 0, i32 0), i1 (%struct.parser_table*, i8**, i32*)* @parse_version, i1 (i8*, %struct.stat*, %struct.predicate*)* null }, %struct.parser_table zeroinitializer], align 16
@.str3294 = private unnamed_addr constant [12 x i8] c"/dev/stdout\00", align 1
@.str4295 = private unnamed_addr constant [12 x i8] c"/dev/stderr\00", align 1
@.str5296 = private unnamed_addr constant [15 x i8] c"standard error\00", align 1
@.str6297 = private unnamed_addr constant [16 x i8] c"standard output\00", align 1
@.str7298 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str8299 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str9300 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str10301 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str11302 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str12303 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str13304 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str14305 = private unnamed_addr constant [5 x i8] c"amin\00", align 1
@.str15306 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str16307 = private unnamed_addr constant [7 x i8] c"anewer\00", align 1
@.str17308 = private unnamed_addr constant [6 x i8] c"atime\00", align 1
@.str18309 = private unnamed_addr constant [5 x i8] c"cmin\00", align 1
@.str19310 = private unnamed_addr constant [7 x i8] c"cnewer\00", align 1
@.str20311 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str21312 = private unnamed_addr constant [9 x i8] c"daystart\00", align 1
@.str22313 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str23314 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str24315 = private unnamed_addr constant [6 x i8] c"depth\00", align 1
@.str25316 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str26317 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str27318 = private unnamed_addr constant [11 x i8] c"executable\00", align 1
@.str28319 = private unnamed_addr constant [8 x i8] c"execdir\00", align 1
@.str29320 = private unnamed_addr constant [4 x i8] c"fls\00", align 1
@.str30321 = private unnamed_addr constant [7 x i8] c"follow\00", align 1
@.str31322 = private unnamed_addr constant [7 x i8] c"fprint\00", align 1
@.str32323 = private unnamed_addr constant [8 x i8] c"fprint0\00", align 1
@.str33324 = private unnamed_addr constant [8 x i8] c"fprintf\00", align 1
@.str34325 = private unnamed_addr constant [7 x i8] c"fstype\00", align 1
@.str35326 = private unnamed_addr constant [4 x i8] c"gid\00", align 1
@.str36327 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str37328 = private unnamed_addr constant [20 x i8] c"ignore_readdir_race\00", align 1
@.str38329 = private unnamed_addr constant [7 x i8] c"ilname\00", align 1
@.str39330 = private unnamed_addr constant [6 x i8] c"iname\00", align 1
@.str40331 = private unnamed_addr constant [5 x i8] c"inum\00", align 1
@.str41332 = private unnamed_addr constant [6 x i8] c"ipath\00", align 1
@.str42333 = private unnamed_addr constant [7 x i8] c"iregex\00", align 1
@.str43334 = private unnamed_addr constant [11 x i8] c"iwholename\00", align 1
@.str44335 = private unnamed_addr constant [6 x i8] c"links\00", align 1
@.str45336 = private unnamed_addr constant [6 x i8] c"lname\00", align 1
@.str46337 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str47338 = private unnamed_addr constant [9 x i8] c"maxdepth\00", align 1
@.str48339 = private unnamed_addr constant [9 x i8] c"mindepth\00", align 1
@.str49340 = private unnamed_addr constant [5 x i8] c"mmin\00", align 1
@.str50341 = private unnamed_addr constant [6 x i8] c"mount\00", align 1
@.str51342 = private unnamed_addr constant [6 x i8] c"mtime\00", align 1
@.str52343 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str53344 = private unnamed_addr constant [6 x i8] c"newer\00", align 1
@.str54345 = private unnamed_addr constant [7 x i8] c"noleaf\00", align 1
@.str55346 = private unnamed_addr constant [8 x i8] c"nogroup\00", align 1
@.str56347 = private unnamed_addr constant [7 x i8] c"nouser\00", align 1
@.str57348 = private unnamed_addr constant [22 x i8] c"noignore_readdir_race\00", align 1
@.str58349 = private unnamed_addr constant [7 x i8] c"nowarn\00", align 1
@.str59350 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str60351 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str61352 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str62353 = private unnamed_addr constant [6 x i8] c"okdir\00", align 1
@.str63354 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str64355 = private unnamed_addr constant [5 x i8] c"perm\00", align 1
@.str65356 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str66357 = private unnamed_addr constant [7 x i8] c"print0\00", align 1
@.str67358 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str68359 = private unnamed_addr constant [6 x i8] c"prune\00", align 1
@.str69360 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str70361 = private unnamed_addr constant [9 x i8] c"readable\00", align 1
@.str71362 = private unnamed_addr constant [6 x i8] c"regex\00", align 1
@.str72363 = private unnamed_addr constant [10 x i8] c"regextype\00", align 1
@.str73364 = private unnamed_addr constant [9 x i8] c"samefile\00", align 1
@.str74365 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str75366 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str76367 = private unnamed_addr constant [4 x i8] c"uid\00", align 1
@.str77368 = private unnamed_addr constant [5 x i8] c"used\00", align 1
@.str78369 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str79370 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@.str80371 = private unnamed_addr constant [10 x i8] c"wholename\00", align 1
@.str81372 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str82373 = private unnamed_addr constant [5 x i8] c"xdev\00", align 1
@.str83374 = private unnamed_addr constant [6 x i8] c"xtype\00", align 1
@.str84375 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str85376 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str86377 = private unnamed_addr constant [5 x i8] c"noop\00", align 1
@.str87378 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str88379 = private unnamed_addr constant [6 x i8] c"-help\00", align 1
@.str89380 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str90381 = private unnamed_addr constant [9 x i8] c"-version\00", align 1
@.str91382 = private unnamed_addr constant [5 x i8] c"find\00", align 1
@.str92383 = private unnamed_addr constant [19 x i8] c"Features enabled: \00", align 1
@.str93384 = private unnamed_addr constant [8 x i8] c"D_TYPE \00", align 1
@.str94385 = private unnamed_addr constant [16 x i8] c"O_NOFOLLOW(%s) \00", align 1
@.str95386 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@.str96387 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str97388 = private unnamed_addr constant [19 x i8] c"LEAF_OPTIMISATION \00", align 1
@.str98389 = private unnamed_addr constant [5 x i8] c"FTS(\00", align 1
@.str99390 = private unnamed_addr constant [10 x i8] c"FTS_CWDFD\00", align 1
@.str100391 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str101392 = private unnamed_addr constant [15 x i8] c"CBO(level=%d) \00", align 1
@.str102393 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str103394 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str104395 = private unnamed_addr constant [137 x i8] c"\0Adefault path is the current directory; default expression is -print\0Aexpression may consist of: operators, options, tests, and actions:\0A\00", align 1
@.str105396 = private unnamed_addr constant [207 x i8] c"operators (decreasing precedence; -and is implicit where no others are given):\0A      ( EXPR )   ! EXPR   -not EXPR   EXPR1 -a EXPR2   EXPR1 -and EXPR2\0A      EXPR1 -o EXPR2   EXPR1 -or EXPR2   EXPR1 , EXPR2\0A\00", align 1
@.str106397 = private unnamed_addr constant [266 x i8] c"positional options (always true): -daystart -follow -regextype\0A\0Anormal options (always true, specified before other expressions):\0A      -depth --help -maxdepth LEVELS -mindepth LEVELS -mount -noleaf\0A      --version -xdev -ignore_readdir_race -noignore_readdir_race\0A\00", align 1
@.str107398 = private unnamed_addr constant [298 x i8] c"tests (N can be +N or -N or N): -amin N -anewer FILE -atime N -cmin N\0A      -cnewer FILE -ctime N -empty -false -fstype TYPE -gid N -group NAME\0A      -ilname PATTERN -iname PATTERN -inum N -iwholename PATTERN -iregex PATTERN\0A      -links N -lname PATTERN -mmin N -mtime N -name PATTERN -newer FILE\00", align 1
@.str108399 = private unnamed_addr constant [219 x i8] c"      -nouser -nogroup -path PATTERN -perm [+-]MODE -regex PATTERN\0A      -readable -writable -executable\0A      -wholename PATTERN -size N[bcwkMG] -true -type [bcdpflsD] -uid N\0A      -used N -user NAME -xtype [bcdpfls]\0A\00", align 1
@.str109 = private unnamed_addr constant [249 x i8] c"actions: -delete -print0 -printf FORMAT -fprintf FILE FORMAT -print \0A      -fprint0 FILE -fprint FILE -ls -fls FILE -prune -quit\0A      -exec COMMAND ; -exec COMMAND {} + -ok COMMAND ;\0A      -execdir COMMAND ; -execdir COMMAND {} + -okdir COMMAND ;\0A\00", align 1
@.str110 = private unnamed_addr constant [184 x i8] c"Report (and track progress on fixing) bugs via the findutils bug-reporting\0Apage at http://savannah.gnu.org/ or, if you have no web access, by sending\0Aemail to <bug-findutils@gnu.org>.\00", align 1
@.str111 = private unnamed_addr constant [50 x i8] c"Arguments to -type should contain only one letter\00", align 1
@.str112 = private unnamed_addr constant [30 x i8] c"Unknown argument to -type: %c\00", align 1
@noop = internal global %struct.parser_table* null, align 8
@.str113 = private unnamed_addr constant [11 x i8] c"0123456789\00", align 1
@.str114 = private unnamed_addr constant [35 x i8] c"%s is not the name of a known user\00", align 1
@.str115 = private unnamed_addr constant [42 x i8] c"The argument to -user should not be empty\00", align 1
@.str116 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str117 = private unnamed_addr constant [27 x i8] c"Unexpected suffix %s on %s\00", align 1
@.str118 = private unnamed_addr constant [24 x i8] c"Expected an integer: %s\00", align 1
@.str119 = private unnamed_addr constant [68 x i8] c"arithmetic overflow while converting %s days to a number of seconds\00", align 1
@.str120 = private unnamed_addr constant [29 x i8] c"Invalid argument %s to -used\00", align 1
@get_relative_timestamp.nanosec_per_sec = internal constant i64 1000000000, align 8
@.str121 = private unnamed_addr constant [26 x i8] c"nanosec < nanosec_per_sec\00", align 1
@.str122 = private unnamed_addr constant [9 x i8] c"parser.c\00", align 1
@__PRETTY_FUNCTION__.get_relative_timestamp = private unnamed_addr constant [103 x i8] c"boolean get_relative_timestamp(const char *, struct time_val *, struct timespec, double, const char *)\00", align 1
@.str123 = private unnamed_addr constant [14 x i8] c"inserting %s\0A\00", align 1
@.str124 = private unnamed_addr constant [21 x i8] c"    type: %s    %s  \00", align 1
@.str125 = private unnamed_addr constant [3 x i8] c"gt\00", align 1
@.str126 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str127 = private unnamed_addr constant [3 x i8] c"eq\00", align 1
@.str128 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str129 = private unnamed_addr constant [3 x i8] c" >\00", align 1
@.str130 = private unnamed_addr constant [3 x i8] c" <\00", align 1
@.str131 = private unnamed_addr constant [3 x i8] c" =\00", align 1
@.str132 = private unnamed_addr constant [3 x i8] c" ?\00", align 1
@.str133 = private unnamed_addr constant [5 x i8] c"%ju\0A\00", align 1
@.str134 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str135 = private unnamed_addr constant [31 x i8] c"invalid null argument to -size\00", align 1
@.str136 = private unnamed_addr constant [24 x i8] c"invalid -size type `%c'\00", align 1
@.str137 = private unnamed_addr constant [33 x i8] c"Invalid argument `%s%c' to -size\00", align 1
@.str138 = private unnamed_addr constant [9 x i8] c"fd != -3\00", align 1
@__PRETTY_FUNCTION__.parse_samefile = private unnamed_addr constant [68 x i8] c"boolean parse_samefile(const struct parser_table *, char **, int *)\00", align 1
@.str139 = private unnamed_addr constant [4 x i8] c"*?[\00", align 1
@.str140 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str141 = private unnamed_addr constant [35 x i8] c"warning: unrecognized escape `\5C%c'\00", align 1
@.str142 = private unnamed_addr constant [34 x i8] c"error: %s at end of format string\00", align 1
@.str143 = private unnamed_addr constant [5 x i8] c"-+ #\00", align 1
@.str144 = private unnamed_addr constant [27 x i8] c"abcdDfFgGhHiklmMnpPsStuUyY\00", align 1
@.str145 = private unnamed_addr constant [5 x i8] c"ABCT\00", align 1
@.str146 = private unnamed_addr constant [46 x i8] c"warning: unrecognized format directive `%%%c'\00", align 1
@.str147 = private unnamed_addr constant [17 x i8] c"0 == format_char\00", align 1
@__PRETTY_FUNCTION__.make_segment = private unnamed_addr constant [99 x i8] c"struct segment **make_segment(struct segment **, char *, int, int, char, char, struct predicate *)\00", align 1
@.str148 = private unnamed_addr constant [21 x i8] c"0 == aux_format_char\00", align 1
@.str149 = private unnamed_addr constant [20 x i8] c"kind == KIND_FORMAT\00", align 1
@.str150 = private unnamed_addr constant [62 x i8] c"error: the format directive `%%%c' is reserved for future use\00", align 1
@.str151 = private unnamed_addr constant [16 x i8] c"invalid mode %s\00", align 1
@.str152 = private unnamed_addr constant [226 x i8] c"warning: you have specified a mode pattern %s (which is equivalent to /000). The meaning of -perm /000 has now been changed to be consistent with -perm -000; that is, while it used to match no files, it now matches all files.\00", align 1
@.str153400 = private unnamed_addr constant [49 x i8] c"Mode %s is not valid when POSIXLY_CORRECT is on.\00", align 1
@.str154 = private unnamed_addr constant [7 x i8] c"-okdir\00", align 1
@.str155 = private unnamed_addr constant [3 x i8] c"{}\00", align 1
@.str156 = private unnamed_addr constant [114 x i8] c"You may not use {} within the utility name for -execdir and -okdir, because this is a potential security problem.\00", align 1
@.str157 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str158 = private unnamed_addr constant [56 x i8] c"Only one instance of {} is supported with -exec%s ... +\00", align 1
@.str159 = private unnamed_addr constant [41 x i8] c"The environment is too large for exec().\00", align 1
@.str160 = private unnamed_addr constant [5 x i8] c"PATH\00", align 1
@.str161 = private unnamed_addr constant [234 x i8] c"The current directory is included in the PATH environment variable, which is insecure in combination with the %s action of find.  Please remove the current directory from your $PATH (that is, remove \22.\22 or leading or trailing colons)\00", align 1
@.str162 = private unnamed_addr constant [165 x i8] c"The relative path %s is included in the PATH environment variable, which is insecure in combination with the %s action of find.  Please remove that entry from $PATH\00", align 1
@.str163 = private unnamed_addr constant [4 x i8] c"-ok\00", align 1
@.str164 = private unnamed_addr constant [6 x i8] c"-name\00", align 1
@.str165 = private unnamed_addr constant [330 x i8] c"warning: Unix filenames usually don't contain slashes (though pathnames do).  That means that '%s %s' will probably evaluate to false all the time on this system.  You might find the '-wholename' test more useful, or perhaps '-samefile'.  Alternatively, if you are using GNU grep, you could use 'find ... -print0 | grep -FzZ %s'.\00", align 1
@fnmatch_sanitycheck.checked = internal global i8 0, align 1
@.str166 = private unnamed_addr constant [4 x i8] c"foo\00", align 1
@.str167 = private unnamed_addr constant [4 x i8] c"Foo\00", align 1
@.str168 = private unnamed_addr constant [55 x i8] c"sanity check of the fnmatch() library function failed.\00", align 1
@.str169 = private unnamed_addr constant [71 x i8] c"arithmetic overflow while converting %s minutes to a number of seconds\00", align 1
@.str170 = private unnamed_addr constant [63 x i8] c"Expected a positive decimal integer argument to %s, but got %s\00", align 1
@.str171 = private unnamed_addr constant [7 x i8] c"-iname\00", align 1
@.str172 = private unnamed_addr constant [125 x i8] c"%s is not the name of an existing group and it does not look like a numeric group ID because it has the unexpected suffix %s\00", align 1
@.str173 = private unnamed_addr constant [40 x i8] c"%s is not the name of an existing group\00", align 1
@.str174 = private unnamed_addr constant [56 x i8] c"argument to -group is empty, but should be a group name\00", align 1
@.str175 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str176 = private unnamed_addr constant [9 x i8] c"-execdir\00", align 1
@.str177 = private unnamed_addr constant [6 x i8] c"-exec\00", align 1
@.str178 = private unnamed_addr constant [114 x i8] c"warning: the -d option is deprecated; please use -depth instead, because the latter is a POSIX-compliant feature.\00", align 1
@.str179 = private unnamed_addr constant [62 x i8] c"arithmetic overflow when trying to calculate the end of today\00", align 1
@.str180 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str181 = private unnamed_addr constant [7 x i8] c"%ju %s\00", align 1
@.str182 = private unnamed_addr constant [27 x i8] c"                 <  %ju %s\00", align 1
@.str183 = private unnamed_addr constant [8 x i8] c"newerXY\00", align 1
@parse_newerXY.validchars = internal constant [6 x i8] c"aBcmt\00", align 1
@.str184 = private unnamed_addr constant [42 x i8] c"0 == strncmp(\22-newer\22, argv[*arg_ptr], 6)\00", align 1
@__PRETTY_FUNCTION__.parse_newerXY = private unnamed_addr constant [67 x i8] c"boolean parse_newerXY(const struct parser_table *, char **, int *)\00", align 1
@.str185 = private unnamed_addr constant [69 x i8] c"This system does not provide a way to find the birth time of a file.\00", align 1
@.str186 = private unnamed_addr constant [30 x i8] c"The %s test needs an argument\00", align 1
@.str187 = private unnamed_addr constant [22 x i8] c"strchr(validchars, x)\00", align 1
@.str188 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str189 = private unnamed_addr constant [58 x i8] c"I cannot figure out how to interpret %s as a date or time\00", align 1
@.str190 = private unnamed_addr constant [36 x i8] c"Cannot obtain birth time of file %s\00", align 1
@.str191 = private unnamed_addr constant [34 x i8] c"our_pred->pred_func != ((void*)0)\00", align 1
@.str192 = private unnamed_addr constant [36 x i8] c"our_pred->pred_func == pred_newerXY\00", align 1
@.str193 = private unnamed_addr constant [20 x i8] c"our_pred->need_stat\00", align 1
@__PRETTY_FUNCTION__.get_stat_Ytime = private unnamed_addr constant [65 x i8] c"int get_stat_Ytime(const struct stat *, char, struct timespec *)\00", align 1

; Function Attrs: nounwind uwtable
define i64 @klee_change(i64 %x, i64 %y) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i64 %x, i64* %2, align 8
  store i64 %y, i64* %3, align 8
  %4 = load i64, i64* %2, align 8
  %5 = load i64, i64* %3, align 8
  %6 = icmp eq i64 %4, %5
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %0
  %8 = load i64, i64* %2, align 8
  store i64 %8, i64* %1
  br label %11

; <label>:9                                       ; preds = %0
  %10 = load i64, i64* %3, align 8
  store i64 %10, i64* %1
  br label %11

; <label>:11                                      ; preds = %9, %7
  %12 = load i64, i64* %1
  ret i64 %12
}

; Function Attrs: noinline nounwind uwtable
define i32 @klee_get_true() #1 {
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define i32 @klee_get_false() #1 {
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @get_current_dirfd() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @ftsoptions, align 4
  %3 = and i32 %2, 512
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %27

; <label>:5                                       ; preds = %0
  %6 = load i32, i32* @curr_fd, align 4
  %7 = icmp ne i32 %6, -1
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %5
  br label %11

; <label>:9                                       ; preds = %5
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str1, i32 0, i32 0), i32 107, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.get_current_dirfd, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = load i32, i32* @curr_fd, align 4
  %13 = icmp eq i32 -100, %12
  br i1 %13, label %17, label %14

; <label>:14                                      ; preds = %11
  %15 = load i32, i32* @curr_fd, align 4
  %16 = icmp sge i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14, %11
  br label %20

; <label>:18                                      ; preds = %14
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str1, i32 0, i32 0), i32 108, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.get_current_dirfd, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %20

; <label>:20                                      ; preds = %19, %17
  %21 = load i32, i32* @curr_fd, align 4
  %22 = icmp eq i32 -100, %21
  br i1 %22, label %23, label %25

; <label>:23                                      ; preds = %20
  %24 = load i32, i32* @starting_desc, align 4
  store i32 %24, i32* %1
  br label %28

; <label>:25                                      ; preds = %20
  %26 = load i32, i32* @curr_fd, align 4
  store i32 %26, i32* %1
  br label %28

; <label>:27                                      ; preds = %0
  store i32 -100, i32* %1
  br label %28

; <label>:28                                      ; preds = %27, %25, %23
  %29 = load i32, i32* %1
  ret i32 %29
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %end_of_leading_options = alloca i32, align 4
  %eval_tree = alloca %struct.predicate*, align 8
  store i32 0, i32* %1
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  store i32 0, i32* %end_of_leading_options, align 4
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds i8*, i8** %4, i64 0
  %6 = load i8*, i8** %5, align 8
  store i8* %6, i8** @program_name, align 8
  store i32 0, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  store i8 0, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 9), align 1
  store i32 -100, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  call void @set_option_defaults(%struct.options* @options)
  %7 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str3, i32 0, i32 0))
  %8 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str4, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str5, i32 0, i32 0))
  %9 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str4, i32 0, i32 0))
  %10 = call i32 @atexit(void ()* @close_stdout) #9
  %11 = load i32, i32* %2, align 4
  %12 = load i8**, i8*** %3, align 8
  %13 = call i32 @process_leading_options(i32 %11, i8** %12)
  store i32 %13, i32* %end_of_leading_options, align 4
  %14 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %15 = and i64 %14, 2
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %0
  store i32 (i8*, %struct.stat*)* @debug_stat, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  br label %18

; <label>:18                                      ; preds = %17, %0
  %19 = load i32, i32* %2, align 4
  %20 = load i8**, i8*** %3, align 8
  %21 = load i32, i32* %end_of_leading_options, align 4
  %22 = call %struct.predicate* @build_expression_tree(i32 %19, i8** %20, i32 %21)
  store %struct.predicate* %22, %struct.predicate** %eval_tree, align 8
  %23 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 17), align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %18
  br label %26

; <label>:26                                      ; preds = %25, %18
  %27 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str6, i32 0, i32 0), i32 0)
  store i32 %27, i32* @starting_desc, align 4
  %28 = load i32, i32* @starting_desc, align 4
  %29 = icmp sle i32 0, %28
  br i1 %29, label %30, label %37

; <label>:30                                      ; preds = %26
  %31 = load i32, i32* @starting_desc, align 4
  %32 = call i32 @fchdir(i32 %31) #9
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %30
  %35 = load i32, i32* @starting_desc, align 4
  %36 = call i32 @close(i32 %35)
  store i32 -1, i32* @starting_desc, align 4
  br label %37

; <label>:37                                      ; preds = %34, %30, %26
  %38 = load i32, i32* @starting_desc, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %49

; <label>:40                                      ; preds = %37
  %41 = call i8* @xgetcwd()
  store i8* %41, i8** @starting_dir, align 8
  %42 = load i8*, i8** @starting_dir, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %48, label %44

; <label>:44                                      ; preds = %40
  %45 = call i32* @__errno_location() #13
  %46 = load i32, i32* %45, align 4
  %47 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str7, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %46, i8* %47)
  br label %48

; <label>:48                                      ; preds = %44, %40
  br label %49

; <label>:49                                      ; preds = %48, %37
  %50 = load i32, i32* %2, align 4
  %51 = load i32, i32* %end_of_leading_options, align 4
  %52 = sub nsw i32 %50, %51
  %53 = load i8**, i8*** %3, align 8
  %54 = load i32, i32* %end_of_leading_options, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8*, i8** %53, i64 %55
  call void @process_all_startpoints(i32 %52, i8** %56)
  %57 = load %struct.predicate*, %struct.predicate** %eval_tree, align 8
  call void bitcast (void (%struct.predicate.16*)* @show_success_rates to void (%struct.predicate*)*)(%struct.predicate* %57)
  call void @cleanup()
  %58 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  ret i32 %58
}

declare i8* @setlocale(i32, i8*) #3

declare i8* @bindtextdomain(i8*, i8*) #3

declare i8* @textdomain(i8*) #3

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #4

declare void @close_stdout() #3

declare i32 @open(i8*, i32, ...) #3

; Function Attrs: nounwind
declare i32 @fchdir(i32) #4

declare i32 @close(i32) #3

declare i8* @xgetcwd() #3

declare void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

declare i8* @gettext(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @process_all_startpoints(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8**, align 8
  %i = alloca i32, align 4
  %defaultpath = alloca [2 x i8], align 1
  store i32 %argc, i32* %1, align 4
  store i8** %argv, i8*** %2, align 8
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %27, %0
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %7, label %30

; <label>:7                                       ; preds = %3
  %8 = load i32, i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8**, i8*** %2, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 %9
  %12 = load i8*, i8** %11, align 8
  %13 = call zeroext i1 @looks_like_expression(i8* %12, i1 zeroext true)
  br i1 %13, label %30, label %14

; <label>:14                                      ; preds = %7
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = load i8**, i8*** %2, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 %16
  %19 = load i8*, i8** %18, align 8
  %20 = call i64 @strlen(i8* %19) #14
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 6), align 4
  %22 = load i32, i32* %i, align 4
  %23 = sext i32 %22 to i64
  %24 = load i8**, i8*** %2, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 %23
  %26 = load i8*, i8** %25, align 8
  call void @find(i8* %26)
  br label %27

; <label>:27                                      ; preds = %14
  %28 = load i32, i32* %i, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %i, align 4
  br label %3

; <label>:30                                      ; preds = %7, %3
  %31 = load i32, i32* %i, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

; <label>:33                                      ; preds = %30
  %34 = bitcast [2 x i8]* %defaultpath to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @process_all_startpoints.defaultpath, i32 0, i32 0), i64 2, i32 1, i1 false)
  %35 = getelementptr inbounds [2 x i8], [2 x i8]* %defaultpath, i32 0, i32 0
  call void @find(i8* %35)
  br label %36

; <label>:36                                      ; preds = %33, %30
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @is_fts_enabled(i32* %fts_options) #0 {
  %1 = alloca i32*, align 8
  store i32* %fts_options, i32** %1, align 8
  %2 = load i32, i32* @ftsoptions, align 4
  %3 = load i32*, i32** %1, align 8
  store i32 %2, i32* %3, align 4
  ret i1 true
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: nounwind uwtable
define internal void @find(i8* %arg) #0 {
  %1 = alloca i8*, align 8
  %arglist = alloca [2 x i8*], align 16
  %p = alloca %struct.FTS*, align 8
  %ent = alloca %struct._ftsent*, align 8
  store i8* %arg, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %3 = call i64 @strlen(i8* %2) #14
  %4 = trunc i64 %3 to i32
  store i32 %4, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 6), align 4
  call void @inside_dir(i32 -100)
  %5 = load i8*, i8** %1, align 8
  %6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arglist, i32 0, i64 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arglist, i32 0, i64 1
  store i8* null, i8** %7, align 8
  %8 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 15), align 4
  switch i32 %8, label %18 [
    i32 1, label %9
    i32 2, label %12
    i32 0, label %15
  ]

; <label>:9                                       ; preds = %0
  %10 = load i32, i32* @ftsoptions, align 4
  %11 = or i32 %10, 3
  store i32 %11, i32* @ftsoptions, align 4
  br label %18

; <label>:12                                      ; preds = %0
  %13 = load i32, i32* @ftsoptions, align 4
  %14 = or i32 %13, 17
  store i32 %14, i32* @ftsoptions, align 4
  br label %18

; <label>:15                                      ; preds = %0
  %16 = load i32, i32* @ftsoptions, align 4
  %17 = or i32 %16, 16
  store i32 %17, i32* @ftsoptions, align 4
  br label %18

; <label>:18                                      ; preds = %15, %12, %9, %0
  %19 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 5), align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %24

; <label>:21                                      ; preds = %18
  %22 = load i32, i32* @ftsoptions, align 4
  %23 = or i32 %22, 64
  store i32 %23, i32* @ftsoptions, align 4
  br label %24

; <label>:24                                      ; preds = %21, %18
  %25 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arglist, i32 0, i32 0
  %26 = load i32, i32* @ftsoptions, align 4
  %27 = call %struct.FTS* @fts_open(i8** %25, i32 %26, i32 (%struct._ftsent**, %struct._ftsent**)* null)
  store %struct.FTS* %27, %struct.FTS** %p, align 8
  %28 = load %struct.FTS*, %struct.FTS** %p, align 8
  %29 = icmp eq %struct.FTS* null, %28
  br i1 %29, label %30, label %36

; <label>:30                                      ; preds = %24
  %31 = call i32* @__errno_location() #13
  %32 = load i32, i32* %31, align 4
  %33 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str8, i32 0, i32 0))
  %34 = load i8*, i8** %1, align 8
  %35 = call i8* @safely_quote_err_filename(i32 0, i8* %34)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %32, i8* %33, i8* %35)
  br label %67

; <label>:36                                      ; preds = %24
  br label %37

; <label>:37                                      ; preds = %60, %36
  %38 = load %struct.FTS*, %struct.FTS** %p, align 8
  %39 = call %struct._ftsent* @fts_read(%struct.FTS* %38)
  store %struct._ftsent* %39, %struct._ftsent** %ent, align 8
  %40 = icmp ne %struct._ftsent* %39, null
  br i1 %40, label %41, label %64

; <label>:41                                      ; preds = %37
  store i8 0, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  %42 = load %struct._ftsent*, %struct._ftsent** %ent, align 8
  %43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16
  %44 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %43, i32 0, i32 0
  %45 = getelementptr inbounds %struct.stat, %struct.stat* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = icmp ne i32 %46, 0
  %48 = xor i1 %47, true
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i8
  store i8 %50, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  %51 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  %52 = trunc i8 %51 to i1
  br i1 %52, label %53, label %59

; <label>:53                                      ; preds = %41
  %54 = load %struct._ftsent*, %struct._ftsent** %ent, align 8
  %55 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 16
  %56 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %55, i32 0, i32 0
  %57 = getelementptr inbounds %struct.stat, %struct.stat* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  br label %60

; <label>:59                                      ; preds = %41
  br label %60

; <label>:60                                      ; preds = %59, %53
  %61 = phi i32 [ %58, %53 ], [ 0, %59 ]
  store i32 %61, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  %62 = load %struct.FTS*, %struct.FTS** %p, align 8
  %63 = load %struct._ftsent*, %struct._ftsent** %ent, align 8
  call void @consider_visiting(%struct.FTS* %62, %struct._ftsent* %63)
  br label %37

; <label>:64                                      ; preds = %37
  %65 = load %struct.FTS*, %struct.FTS** %p, align 8
  %66 = call i32 @fts_close(%struct.FTS* %65)
  store %struct.FTS* null, %struct.FTS** %p, align 8
  br label %67

; <label>:67                                      ; preds = %64, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: nounwind uwtable
define internal void @inside_dir(i32 %dir_fd) #0 {
  %1 = alloca i32, align 4
  store i32 %dir_fd, i32* %1, align 4
  %2 = load i32, i32* @ftsoptions, align 4
  %3 = and i32 %2, 512
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %42

; <label>:5                                       ; preds = %0
  %6 = load i32, i32* %1, align 4
  %7 = icmp eq i32 %6, -100
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %5
  %9 = load i32, i32* %1, align 4
  %10 = icmp sge i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %8, %5
  br label %14

; <label>:12                                      ; preds = %8
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str1, i32 0, i32 0), i32 146, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__PRETTY_FUNCTION__.inside_dir, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* %1, align 4
  store i32 %15, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %16 = load i32, i32* @curr_fd, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %41

; <label>:18                                      ; preds = %14
  %19 = load i32, i32* %1, align 4
  %20 = icmp eq i32 -100, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %18
  store i32 -100, i32* @curr_fd, align 4
  br label %40

; <label>:22                                      ; preds = %18
  %23 = load i32, i32* %1, align 4
  %24 = icmp sge i32 %23, 0
  br i1 %24, label %25, label %29

; <label>:25                                      ; preds = %22
  %26 = load i32, i32* %1, align 4
  %27 = call i32 @dup(i32 %26) #9
  store i32 %27, i32* @curr_fd, align 4
  %28 = load i32, i32* @curr_fd, align 4
  call void @set_close_on_exec(i32 %28)
  br label %39

; <label>:29                                      ; preds = %22
  %30 = load i32, i32* @curr_fd, align 4
  %31 = icmp sge i32 %30, 0
  br i1 %31, label %35, label %32

; <label>:32                                      ; preds = %29
  %33 = load i32, i32* %1, align 4
  %34 = icmp sge i32 %33, 0
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %32, %29
  br label %38

; <label>:36                                      ; preds = %32
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str1, i32 0, i32 0), i32 165, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__PRETTY_FUNCTION__.inside_dir, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %38

; <label>:38                                      ; preds = %37, %35
  br label %39

; <label>:39                                      ; preds = %38, %25
  br label %40

; <label>:40                                      ; preds = %39, %21
  br label %41

; <label>:41                                      ; preds = %40, %14
  br label %43

; <label>:42                                      ; preds = %0
  br label %43

; <label>:43                                      ; preds = %42, %41
  ret void
}

declare %struct.FTS* @fts_open(i8**, i32, i32 (%struct._ftsent**, %struct._ftsent**)*) #3

declare %struct._ftsent* @fts_read(%struct.FTS*) #3

; Function Attrs: nounwind uwtable
define internal void @consider_visiting(%struct.FTS* %p, %struct._ftsent* %ent) #0 {
  %1 = alloca %struct.FTS*, align 8
  %2 = alloca %struct._ftsent*, align 8
  %statbuf = alloca %struct.stat, align 8
  %mode = alloca i32, align 4
  %ignore = alloca i32, align 4
  %isdir = alloca i32, align 4
  store %struct.FTS* %p, %struct.FTS** %1, align 8
  store %struct._ftsent* %ent, %struct._ftsent** %2, align 8
  %3 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %4 = and i64 %3, 4
  %5 = icmp ne i64 %4, 0
  br i1 %5, label %6, label %29

; <label>:6                                       ; preds = %0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 13
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = call i8* @get_fts_info_name(i32 %11)
  %13 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 11
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = load i32, i32* @prev_depth, align 4
  %18 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %19 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 6
  %21 = load i8*, i8** %20, align 8
  %22 = call i8* @quotearg_n_style(i32 0, i32 %18, i8* %21)
  %23 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %24 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %24, i32 0, i32 5
  %26 = load i8*, i8** %25, align 8
  %27 = call i8* @quotearg_n_style(i32 1, i32 %23, i8* %26)
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str9, i32 0, i32 0), i8* %12, i32 %16, i32 %17, i8* %22, i8* %27)
  br label %29

; <label>:29                                      ; preds = %6, %0
  %30 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %31 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 13
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = icmp eq i32 %33, 6
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %29
  call void @left_dir()
  br label %50

; <label>:36                                      ; preds = %29
  %37 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 11
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* @prev_depth, align 4
  %41 = sext i32 %40 to i64
  %42 = icmp sgt i64 %39, %41
  br i1 %42, label %48, label %43

; <label>:43                                      ; preds = %36
  %44 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 11
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %43, %36
  call void @left_dir()
  br label %49

; <label>:49                                      ; preds = %48, %43
  br label %50

; <label>:50                                      ; preds = %49, %35
  %51 = load %struct.FTS*, %struct.FTS** %1, align 8
  %52 = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 6
  %53 = load i32, i32* %52, align 4
  call void @inside_dir(i32 %53)
  %54 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %55 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 11
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* @prev_depth, align 4
  %58 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %59 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 13
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %61, 7
  br i1 %62, label %69, label %63

; <label>:63                                      ; preds = %50
  %64 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %65 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %64, i32 0, i32 13
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp eq i32 %67, 4
  br i1 %68, label %69, label %77

; <label>:69                                      ; preds = %63, %50
  %70 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %71 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %70, i32 0, i32 7
  %72 = load i32, i32* %71, align 4
  %73 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %74 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %73, i32 0, i32 6
  %75 = load i8*, i8** %74, align 8
  %76 = call i8* @safely_quote_err_filename(i32 0, i8* %75)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str10, i32 0, i32 0), i8* %76)
  call void @error_severity(i32 1)
  br label %312

; <label>:77                                      ; preds = %63
  %78 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %79 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 13
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %83, label %85

; <label>:83                                      ; preds = %77
  %84 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  call void @issue_loop_warning(%struct._ftsent* %84)
  call void @error_severity(i32 1)
  br label %312

; <label>:85                                      ; preds = %77
  %86 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %87 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %86, i32 0, i32 13
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = icmp eq i32 %89, 13
  br i1 %90, label %91, label %102

; <label>:91                                      ; preds = %85
  %92 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %93 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 5
  %94 = load i8*, i8** %93, align 8
  %95 = call zeroext i1 @symlink_loop(i8* %94)
  br i1 %95, label %96, label %101

; <label>:96                                      ; preds = %91
  %97 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %98 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %97, i32 0, i32 6
  %99 = load i8*, i8** %98, align 8
  %100 = call i8* @safely_quote_err_filename(i32 0, i8* %99)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str10, i32 0, i32 0), i8* %100)
  call void @error_severity(i32 1)
  br label %312

; <label>:101                                     ; preds = %91
  br label %134

; <label>:102                                     ; preds = %85
  %103 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %104 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %103, i32 0, i32 13
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = icmp eq i32 %106, 10
  br i1 %107, label %108, label %133

; <label>:108                                     ; preds = %102
  %109 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %110 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %109, i32 0, i32 11
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %121

; <label>:113                                     ; preds = %108
  %114 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 7
  %116 = load i32, i32* %115, align 4
  %117 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %117, i32 0, i32 6
  %119 = load i8*, i8** %118, align 8
  %120 = call i8* @safely_quote_err_filename(i32 0, i8* %119)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %116, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str10, i32 0, i32 0), i8* %120)
  call void @error_severity(i32 1)
  br label %312

; <label>:121                                     ; preds = %108
  %122 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %123 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %122, i32 0, i32 5
  %124 = load i8*, i8** %123, align 8
  %125 = call zeroext i1 @symlink_loop(i8* %124)
  br i1 %125, label %126, label %131

; <label>:126                                     ; preds = %121
  %127 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %128 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %127, i32 0, i32 6
  %129 = load i8*, i8** %128, align 8
  %130 = call i8* @safely_quote_err_filename(i32 0, i8* %129)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str10, i32 0, i32 0), i8* %130)
  call void @error_severity(i32 1)
  br label %312

; <label>:131                                     ; preds = %121
  br label %132

; <label>:132                                     ; preds = %131
  br label %133

; <label>:133                                     ; preds = %132, %102
  br label %134

; <label>:134                                     ; preds = %133, %101
  br label %135

; <label>:135                                     ; preds = %134
  br label %136

; <label>:136                                     ; preds = %135
  %137 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %138 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %137, i32 0, i32 13
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = icmp eq i32 %140, 11
  br i1 %141, label %148, label %142

; <label>:142                                     ; preds = %136
  %143 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %144 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %143, i32 0, i32 13
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = icmp eq i32 %146, 10
  br i1 %147, label %148, label %162

; <label>:148                                     ; preds = %142, %136
  %149 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  %150 = trunc i8 %149 to i1
  br i1 %150, label %152, label %151

; <label>:151                                     ; preds = %148
  br label %154

; <label>:152                                     ; preds = %148
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str1, i32 0, i32 0), i32 476, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.consider_visiting, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %154

; <label>:154                                     ; preds = %153, %151
  %155 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %158

; <label>:157                                     ; preds = %154
  br label %160

; <label>:158                                     ; preds = %154
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str1, i32 0, i32 0), i32 477, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.consider_visiting, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %160

; <label>:160                                     ; preds = %159, %157
  %161 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  store i32 %161, i32* %mode, align 4
  br label %180

; <label>:162                                     ; preds = %142
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  %163 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %164 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %163, i32 0, i32 16
  %165 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %164, i32 0, i32 0
  %166 = bitcast %struct.stat* %statbuf to i8*
  %167 = bitcast %struct.stat* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %166, i8* %167, i64 144, i32 8, i1 false)
  %168 = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 3
  %169 = load i32, i32* %168, align 4
  store i32 %169, i32* %mode, align 4
  store i32 %169, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  %170 = load i32, i32* %mode, align 4
  %171 = icmp eq i32 0, %170
  br i1 %171, label %172, label %179

; <label>:172                                     ; preds = %162
  %173 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str13, i32 0, i32 0))
  %174 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %175 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %176 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %175, i32 0, i32 6
  %177 = load i8*, i8** %176, align 8
  %178 = call i8* @quotearg_n_style(i32 0, i32 %174, i8* %177)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %173, i8* %178)
  br label %179

; <label>:179                                     ; preds = %172, %162
  br label %180

; <label>:180                                     ; preds = %179, %160
  %181 = load i32, i32* %mode, align 4
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %195

; <label>:183                                     ; preds = %180
  %184 = load i32, i32* %mode, align 4
  %185 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %186 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %185, i32 0, i32 6
  %187 = load i8*, i8** %186, align 8
  %188 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %189 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 17
  %190 = getelementptr inbounds [1 x i8], [1 x i8]* %189, i32 0, i32 0
  %191 = call i32 @digest_mode(i32 %184, i8* %187, i8* %190, %struct.stat* %statbuf, i1 zeroext false)
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %194, label %193

; <label>:193                                     ; preds = %183
  br label %312

; <label>:194                                     ; preds = %183
  br label %195

; <label>:195                                     ; preds = %194, %180
  store i32 0, i32* %ignore, align 4
  %196 = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  %199 = load i32, i32* %mode, align 4
  %200 = zext i32 %199 to i64
  %201 = call i64 @klee_change(i64 %198, i64 %200)
  %202 = and i64 %201, 61440
  %203 = icmp eq i64 %202, 16384
  br i1 %203, label %222, label %204

; <label>:204                                     ; preds = %195
  %205 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %206 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %205, i32 0, i32 13
  %207 = load i16, i16* %206, align 2
  %208 = zext i16 %207 to i32
  %209 = icmp eq i32 1, %208
  br i1 %209, label %222, label %210

; <label>:210                                     ; preds = %204
  %211 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %212 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %211, i32 0, i32 13
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = icmp eq i32 6, %214
  br i1 %215, label %222, label %216

; <label>:216                                     ; preds = %210
  %217 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %218 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %217, i32 0, i32 13
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = icmp eq i32 2, %220
  br label %222

; <label>:222                                     ; preds = %216, %210, %204, %195
  %223 = phi i1 [ true, %210 ], [ true, %204 ], [ true, %195 ], [ %221, %216 ]
  %224 = zext i1 %223 to i32
  store i32 %224, i32* %isdir, align 4
  %225 = load i32, i32* %isdir, align 4
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %237

; <label>:227                                     ; preds = %222
  %228 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %229 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %228, i32 0, i32 13
  %230 = load i16, i16* %229, align 2
  %231 = zext i16 %230 to i32
  %232 = icmp eq i32 %231, 11
  br i1 %232, label %233, label %237

; <label>:233                                     ; preds = %227
  %234 = load %struct.FTS*, %struct.FTS** %1, align 8
  %235 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %236 = call i32 @fts_set(%struct.FTS* %234, %struct._ftsent* %235, i32 1)
  br label %312

; <label>:237                                     ; preds = %227, %222
  %238 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 2), align 4
  %239 = icmp sge i32 %238, 0
  br i1 %239, label %240, label %260

; <label>:240                                     ; preds = %237
  %241 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %242 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %241, i32 0, i32 11
  %243 = load i64, i64* %242, align 8
  %244 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 2), align 4
  %245 = sext i32 %244 to i64
  %246 = icmp sge i64 %243, %245
  br i1 %246, label %247, label %259

; <label>:247                                     ; preds = %240
  %248 = load %struct.FTS*, %struct.FTS** %1, align 8
  %249 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %250 = call i32 @fts_set(%struct.FTS* %248, %struct._ftsent* %249, i32 4)
  %251 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %251, i32 0, i32 11
  %253 = load i64, i64* %252, align 8
  %254 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 2), align 4
  %255 = sext i32 %254 to i64
  %256 = icmp sgt i64 %253, %255
  br i1 %256, label %257, label %258

; <label>:257                                     ; preds = %247
  store i32 1, i32* %ignore, align 4
  br label %258

; <label>:258                                     ; preds = %257, %247
  br label %259

; <label>:259                                     ; preds = %258, %240
  br label %260

; <label>:260                                     ; preds = %259, %237
  %261 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %261, i32 0, i32 13
  %263 = load i16, i16* %262, align 2
  %264 = zext i16 %263 to i32
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %270

; <label>:266                                     ; preds = %260
  %267 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 0), align 1
  %268 = trunc i8 %267 to i1
  br i1 %268, label %270, label %269

; <label>:269                                     ; preds = %266
  store i32 1, i32* %ignore, align 4
  br label %290

; <label>:270                                     ; preds = %266, %260
  %271 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %272 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %271, i32 0, i32 13
  %273 = load i16, i16* %272, align 2
  %274 = zext i16 %273 to i32
  %275 = icmp eq i32 %274, 6
  br i1 %275, label %276, label %280

; <label>:276                                     ; preds = %270
  %277 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 0), align 1
  %278 = trunc i8 %277 to i1
  br i1 %278, label %279, label %280

; <label>:279                                     ; preds = %276
  store i32 1, i32* %ignore, align 4
  br label %289

; <label>:280                                     ; preds = %276, %270
  %281 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %282 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %281, i32 0, i32 11
  %283 = load i64, i64* %282, align 8
  %284 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 3), align 4
  %285 = sext i32 %284 to i64
  %286 = icmp slt i64 %283, %285
  br i1 %286, label %287, label %288

; <label>:287                                     ; preds = %280
  store i32 1, i32* %ignore, align 4
  br label %288

; <label>:288                                     ; preds = %287, %280
  br label %289

; <label>:289                                     ; preds = %288, %279
  br label %290

; <label>:290                                     ; preds = %289, %269
  %291 = load i32, i32* %ignore, align 4
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %296, label %293

; <label>:293                                     ; preds = %290
  %294 = load %struct.FTS*, %struct.FTS** %1, align 8
  %295 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  call void @visit(%struct.FTS* %294, %struct._ftsent* %295, %struct.stat* %statbuf)
  br label %296

; <label>:296                                     ; preds = %293, %290
  %297 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 9), align 1
  %298 = trunc i8 %297 to i1
  br i1 %298, label %299, label %305

; <label>:299                                     ; preds = %296
  %300 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  call void @show_outstanding_execdirs(%struct._IO_FILE* %300)
  %301 = load %struct.FTS*, %struct.FTS** %1, align 8
  %302 = getelementptr inbounds %struct.FTS, %struct.FTS* %301, i32 0, i32 6
  %303 = load i32, i32* %302, align 4
  %304 = call i32 @run_in_dir(i32 %303, i32 (i8*)* @complete_execdirs_cb, i8* null)
  br label %305

; <label>:305                                     ; preds = %299, %296
  %306 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %307 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %306, i32 0, i32 13
  %308 = load i16, i16* %307, align 2
  %309 = zext i16 %308 to i32
  %310 = icmp eq i32 %309, 6
  br i1 %310, label %311, label %312

; <label>:311                                     ; preds = %305
  store i8 0, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 7), align 1
  br label %312

; <label>:312                                     ; preds = %311, %305, %233, %193, %126, %113, %96, %83, %69
  ret void
}

declare i32 @fts_close(%struct.FTS*) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i8* @get_fts_info_name(i32 %info) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  store i32 %info, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %18 [
    i32 1, label %4
    i32 2, label %5
    i32 3, label %6
    i32 4, label %7
    i32 5, label %8
    i32 6, label %9
    i32 7, label %10
    i32 8, label %11
    i32 9, label %12
    i32 10, label %13
    i32 11, label %14
    i32 12, label %15
    i32 13, label %16
    i32 14, label %17
  ]

; <label>:4                                       ; preds = %0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str24, i32 0, i32 0), i8** %1
  br label %21

; <label>:5                                       ; preds = %0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str25, i32 0, i32 0), i8** %1
  br label %21

; <label>:6                                       ; preds = %0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str26, i32 0, i32 0), i8** %1
  br label %21

; <label>:7                                       ; preds = %0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str27, i32 0, i32 0), i8** %1
  br label %21

; <label>:8                                       ; preds = %0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str28, i32 0, i32 0), i8** %1
  br label %21

; <label>:9                                       ; preds = %0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str29, i32 0, i32 0), i8** %1
  br label %21

; <label>:10                                      ; preds = %0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str30, i32 0, i32 0), i8** %1
  br label %21

; <label>:11                                      ; preds = %0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str31, i32 0, i32 0), i8** %1
  br label %21

; <label>:12                                      ; preds = %0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str32, i32 0, i32 0), i8** %1
  br label %21

; <label>:13                                      ; preds = %0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str33, i32 0, i32 0), i8** %1
  br label %21

; <label>:14                                      ; preds = %0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str34, i32 0, i32 0), i8** %1
  br label %21

; <label>:15                                      ; preds = %0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str35, i32 0, i32 0), i8** %1
  br label %21

; <label>:16                                      ; preds = %0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str36, i32 0, i32 0), i8** %1
  br label %21

; <label>:17                                      ; preds = %0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str37, i32 0, i32 0), i8** %1
  br label %21

; <label>:18                                      ; preds = %0
  %19 = load i32, i32* %2, align 4
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @get_fts_info_name.buf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str38, i32 0, i32 0), i32 %19) #9
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @get_fts_info_name.buf, i32 0, i32 0), i8** %1
  br label %21

; <label>:21                                      ; preds = %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %22 = load i8*, i8** %1
  ret i8* %22
}

declare i8* @quotearg_n_style(i32, i32, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @left_dir() #0 {
  %1 = load i32, i32* @ftsoptions, align 4
  %2 = and i32 %1, 512
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %11

; <label>:4                                       ; preds = %0
  %5 = load i32, i32* @curr_fd, align 4
  %6 = icmp sge i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %4
  %8 = load i32, i32* @curr_fd, align 4
  %9 = call i32 @close(i32 %8)
  store i32 -1, i32* @curr_fd, align 4
  br label %10

; <label>:10                                      ; preds = %7, %4
  br label %12

; <label>:11                                      ; preds = %0
  br label %12

; <label>:12                                      ; preds = %11, %10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @error_severity(i32 %level) #0 {
  %1 = alloca i32, align 4
  store i32 %level, i32* %1, align 4
  %2 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %2, %3
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  br label %7

; <label>:7                                       ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @issue_loop_warning(%struct._ftsent* %ent) #0 {
  %1 = alloca %struct._ftsent*, align 8
  store %struct._ftsent* %ent, %struct._ftsent** %1, align 8
  %2 = load %struct._ftsent*, %struct._ftsent** %1, align 8
  %3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 16
  %4 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 61440
  %8 = icmp eq i32 %7, 40960
  br i1 %8, label %9, label %15

; <label>:9                                       ; preds = %0
  %10 = call i8* @gettext(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str22, i32 0, i32 0))
  %11 = load %struct._ftsent*, %struct._ftsent** %1, align 8
  %12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 6
  %13 = load i8*, i8** %12, align 8
  %14 = call i8* @safely_quote_err_filename(i32 0, i8* %13)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %10, i8* %14)
  br label %33

; <label>:15                                      ; preds = %0
  %16 = call i8* @gettext(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str23, i32 0, i32 0))
  %17 = load %struct._ftsent*, %struct._ftsent** %1, align 8
  %18 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 6
  %19 = load i8*, i8** %18, align 8
  %20 = call i8* @safely_quote_err_filename(i32 0, i8* %19)
  %21 = load %struct._ftsent*, %struct._ftsent** %1, align 8
  %22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 0
  %23 = load %struct._ftsent*, %struct._ftsent** %22, align 8
  %24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 6
  %25 = load i8*, i8** %24, align 8
  %26 = load %struct._ftsent*, %struct._ftsent** %1, align 8
  %27 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 0
  %28 = load %struct._ftsent*, %struct._ftsent** %27, align 8
  %29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 9
  %30 = load i64, i64* %29, align 8
  %31 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %32 = call i8* @partial_quotearg_n(i32 1, i8* %25, i64 %30, i32 %31)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %16, i8* %20, i8* %32)
  br label %33

; <label>:33                                      ; preds = %15, %9
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @symlink_loop(i8* %name) #0 {
  %1 = alloca i8*, align 8
  %stbuf = alloca %struct.stat, align 8
  %rv = alloca i32, align 4
  store i8* %name, i8** %1, align 8
  %2 = call i32 @following_links()
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %7

; <label>:4                                       ; preds = %0
  %5 = load i8*, i8** %1, align 8
  %6 = call i32 @stat(i8* %5, %struct.stat* %stbuf) #9
  store i32 %6, i32* %rv, align 4
  br label %10

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %1, align 8
  %9 = call i32 @lstat(i8* %8, %struct.stat* %stbuf) #9
  store i32 %9, i32* %rv, align 4
  br label %10

; <label>:10                                      ; preds = %7, %4
  %11 = load i32, i32* %rv, align 4
  %12 = icmp ne i32 0, %11
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %10
  %14 = call i32* @__errno_location() #13
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 40, %15
  br label %17

; <label>:17                                      ; preds = %13, %10
  %18 = phi i1 [ false, %10 ], [ %16, %13 ]
  ret i1 %18
}

declare i32 @fts_set(%struct.FTS*, %struct._ftsent*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @visit(%struct.FTS* %p, %struct._ftsent* %ent, %struct.stat* %pstat) #0 {
  %1 = alloca %struct.FTS*, align 8
  %2 = alloca %struct._ftsent*, align 8
  %3 = alloca %struct.stat*, align 8
  %eval_tree = alloca %struct.predicate*, align 8
  store %struct.FTS* %p, %struct.FTS** %1, align 8
  store %struct._ftsent* %ent, %struct._ftsent** %2, align 8
  store %struct.stat* %pstat, %struct.stat** %3, align 8
  %4 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %5 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 11
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  store i32 %7, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 0), align 4
  %8 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 13
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = icmp ne i32 %11, 10
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %0
  %14 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 13
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = icmp ne i32 %17, 11
  br label %19

; <label>:19                                      ; preds = %13, %0
  %20 = phi i1 [ false, %0 ], [ %18, %13 ]
  %21 = zext i1 %20 to i8
  store i8 %21, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  %22 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %23 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 5
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %25 = load %struct.FTS*, %struct.FTS** %1, align 8
  %26 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 6
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %28 = call %struct.predicate* @get_eval_tree()
  store %struct.predicate* %28, %struct.predicate** %eval_tree, align 8
  %29 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %30 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 6
  %31 = load i8*, i8** %30, align 8
  %32 = load %struct.stat*, %struct.stat** %3, align 8
  %33 = load %struct.predicate*, %struct.predicate** %eval_tree, align 8
  %34 = call zeroext i1 @apply_predicate(i8* %31, %struct.stat* %32, %struct.predicate* %33)
  %35 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 7), align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %41

; <label>:37                                      ; preds = %19
  %38 = load %struct.FTS*, %struct.FTS** %1, align 8
  %39 = load %struct._ftsent*, %struct._ftsent** %2, align 8
  %40 = call i32 @fts_set(%struct.FTS* %38, %struct._ftsent* %39, i32 4)
  br label %41

; <label>:41                                      ; preds = %37, %19
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @show_outstanding_execdirs(%struct._IO_FILE* %fp) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %seen = alloca i32, align 4
  %p = alloca %struct.predicate*, align 8
  %pfx = alloca i8*, align 8
  %i = alloca i32, align 4
  %execp = alloca %struct.exec_val*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  %2 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %3 = and i64 %2, 32
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %87

; <label>:5                                       ; preds = %0
  store i32 0, i32* %seen, align 4
  %6 = call %struct.predicate* @get_eval_tree()
  store %struct.predicate* %6, %struct.predicate** %p, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str14, i32 0, i32 0))
  br label %9

; <label>:9                                       ; preds = %76, %5
  %10 = load %struct.predicate*, %struct.predicate** %p, align 8
  %11 = icmp ne %struct.predicate* %10, null
  br i1 %11, label %12, label %80

; <label>:12                                      ; preds = %9
  %13 = load %struct.predicate*, %struct.predicate** %p, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 0
  %15 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %14, align 8
  %16 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %15, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %12
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str15, i32 0, i32 0), i8** %pfx, align 8
  br label %26

; <label>:18                                      ; preds = %12
  %19 = load %struct.predicate*, %struct.predicate** %p, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 0
  %21 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %20, align 8
  %22 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %21, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_okdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %18
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str16, i32 0, i32 0), i8** %pfx, align 8
  br label %25

; <label>:24                                      ; preds = %18
  store i8* null, i8** %pfx, align 8
  br label %25

; <label>:25                                      ; preds = %24, %23
  br label %26

; <label>:26                                      ; preds = %25, %17
  %27 = load i8*, i8** %pfx, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %76

; <label>:29                                      ; preds = %26
  %30 = load %struct.predicate*, %struct.predicate** %p, align 8
  %31 = getelementptr inbounds %struct.predicate, %struct.predicate* %30, i32 0, i32 13
  %32 = bitcast %union.anon* %31 to %struct.exec_val*
  store %struct.exec_val* %32, %struct.exec_val** %execp, align 8
  %33 = load i32, i32* %seen, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %seen, align 4
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %36 = load i8*, i8** %pfx, align 8
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str17, i32 0, i32 0), i8* %36)
  %38 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %39 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %38, i32 0, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = trunc i8 %40 to i1
  br i1 %41, label %42, label %45

; <label>:42                                      ; preds = %29
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str18, i32 0, i32 0))
  br label %45

; <label>:45                                      ; preds = %42, %29
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %47 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %48 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %47, i32 0, i32 2
  %49 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str19, i32 0, i32 0), i32 %50)
  store i32 0, i32* %i, align 4
  br label %52

; <label>:52                                      ; preds = %70, %45
  %53 = load i32, i32* %i, align 4
  %54 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %55 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %54, i32 0, i32 2
  %56 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %53, %57
  br i1 %58, label %59, label %73

; <label>:59                                      ; preds = %52
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %61 = load i32, i32* %i, align 4
  %62 = sext i32 %61 to i64
  %63 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %64 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %63, i32 0, i32 2
  %65 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %64, i32 0, i32 1
  %66 = load i8**, i8*** %65, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i64 %62
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str17, i32 0, i32 0), i8* %68)
  br label %70

; <label>:70                                      ; preds = %59
  %71 = load i32, i32* %i, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %i, align 4
  br label %52

; <label>:73                                      ; preds = %52
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str20, i32 0, i32 0))
  br label %76

; <label>:76                                      ; preds = %73, %26
  %77 = load %struct.predicate*, %struct.predicate** %p, align 8
  %78 = getelementptr inbounds %struct.predicate, %struct.predicate* %77, i32 0, i32 14
  %79 = load %struct.predicate*, %struct.predicate** %78, align 8
  store %struct.predicate* %79, %struct.predicate** %p, align 8
  br label %9

; <label>:80                                      ; preds = %9
  %81 = load i32, i32* %seen, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %86, label %83

; <label>:83                                      ; preds = %80
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str21, i32 0, i32 0))
  br label %86

; <label>:86                                      ; preds = %83, %80
  br label %88

; <label>:87                                      ; preds = %0
  br label %88

; <label>:88                                      ; preds = %87, %86
  ret void
}

declare i32 @run_in_dir(i32, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @complete_execdirs_cb(i8* %context) #0 {
  %1 = alloca i8*, align 8
  store i8* %context, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  call void @complete_pending_execdirs(i32 -100)
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #4

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #4

; Function Attrs: nounwind uwtable
define internal i8* @partial_quotearg_n(i32 %n, i8* %s, i64 %len, i32 %style) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %saved = alloca i8, align 1
  %result = alloca i8*, align 8
  store i32 %n, i32* %2, align 4
  store i8* %s, i8** %3, align 8
  store i64 %len, i64* %4, align 8
  store i32 %style, i32* %5, align 4
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 0, %6
  br i1 %7, label %8, label %12

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %2, align 4
  %10 = load i32, i32* %5, align 4
  %11 = call i8* @quotearg_n_style(i32 %9, i32 %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str3, i32 0, i32 0))
  store i8* %11, i8** %1
  br label %29

; <label>:12                                      ; preds = %0
  %13 = load i64, i64* %4, align 8
  %14 = load i8*, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = load i8, i8* %15, align 1
  store i8 %16, i8* %saved, align 1
  %17 = load i64, i64* %4, align 8
  %18 = load i8*, i8** %3, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %2, align 4
  %21 = load i32, i32* %5, align 4
  %22 = load i8*, i8** %3, align 8
  %23 = call i8* @quotearg_n_style(i32 %20, i32 %21, i8* %22)
  store i8* %23, i8** %result, align 8
  %24 = load i8, i8* %saved, align 1
  %25 = load i64, i64* %4, align 8
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  store i8 %24, i8* %27, align 1
  %28 = load i8*, i8** %result, align 8
  store i8* %28, i8** %1
  br label %29

; <label>:29                                      ; preds = %12, %8
  %30 = load i8*, i8** %1
  ret i8* %30
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: nounwind
declare i32 @dup(i32) #4

; Function Attrs: nounwind uwtable
define internal void @set_close_on_exec(i32 %fd) #0 {
  %1 = alloca i32, align 4
  %flags = alloca i32, align 4
  store i32 %fd, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = call i32 (i32, i32, ...) @fcntl(i32 %2, i32 1)
  store i32 %3, i32* %flags, align 4
  %4 = load i32, i32* %flags, align 4
  %5 = icmp sge i32 %4, 0
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %flags, align 4
  %8 = or i32 %7, 1
  store i32 %8, i32* %flags, align 4
  %9 = load i32, i32* %1, align 4
  %10 = load i32, i32* %flags, align 4
  %11 = call i32 (i32, i32, ...) @fcntl(i32 %9, i32 2, i32 %10)
  br label %12

; <label>:12                                      ; preds = %6, %0
  ret void
}

declare i32 @fcntl(i32, i32, ...) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_amin(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = call { i64, i64 } @get_stat_atime(%struct.stat* %5)
  %7 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %8 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  %9 = extractvalue { i64, i64 } %6, 0
  store i64 %9, i64* %8, align 1
  %10 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  %11 = extractvalue { i64, i64 } %6, 1
  store i64 %11, i64* %10, align 1
  %12 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %13 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %14 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1
  %17 = load i64, i64* %16, align 1
  %18 = call zeroext i1 @pred_timewindow(i64 %15, i64 %17, %struct.predicate.16* %12, i32 60)
  ret i1 %18
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_and(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %6 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %5, i32 0, i32 15
  %7 = load %struct.predicate.16*, %struct.predicate.16** %6, align 8
  %8 = icmp eq %struct.predicate.16* %7, null
  br i1 %8, label %16, label %9

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %2, align 8
  %11 = load %struct.stat*, %struct.stat** %3, align 8
  %12 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %13 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %12, i32 0, i32 15
  %14 = load %struct.predicate.16*, %struct.predicate.16** %13, align 8
  %15 = call zeroext i1 bitcast (i1 (i8*, %struct.stat*, %struct.predicate*)* @apply_predicate to i1 (i8*, %struct.stat*, %struct.predicate.16*)*)(i8* %10, %struct.stat* %11, %struct.predicate.16* %14)
  br i1 %15, label %16, label %23

; <label>:16                                      ; preds = %9, %0
  %17 = load i8*, i8** %2, align 8
  %18 = load %struct.stat*, %struct.stat** %3, align 8
  %19 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %20 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %19, i32 0, i32 16
  %21 = load %struct.predicate.16*, %struct.predicate.16** %20, align 8
  %22 = call zeroext i1 bitcast (i1 (i8*, %struct.stat*, %struct.predicate*)* @apply_predicate to i1 (i8*, %struct.stat*, %struct.predicate.16*)*)(i8* %17, %struct.stat* %18, %struct.predicate.16* %21)
  store i1 %22, i1* %1
  br label %24

; <label>:23                                      ; preds = %9
  store i1 false, i1* %1
  br label %24

; <label>:24                                      ; preds = %23, %16
  %25 = load i1, i1* %1
  ret i1 %25
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_anewer(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %6 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %5, i32 0, i32 13
  %7 = bitcast %union.anon* %6 to %struct.time_val*
  %8 = getelementptr inbounds %struct.time_val, %struct.time_val* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 0, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  br label %14

; <label>:12                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 337, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.pred_anewer, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load %struct.stat*, %struct.stat** %2, align 8
  %16 = call { i64, i64 } @get_stat_atime(%struct.stat* %15)
  %17 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %18 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  %19 = extractvalue { i64, i64 } %16, 0
  store i64 %19, i64* %18, align 1
  %20 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %21 = extractvalue { i64, i64 } %16, 1
  store i64 %21, i64* %20, align 1
  %22 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %23 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %22, i32 0, i32 13
  %24 = bitcast %union.anon* %23 to %struct.time_val*
  %25 = getelementptr inbounds %struct.time_val, %struct.time_val* %24, i32 0, i32 2
  %26 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %27 = getelementptr { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 1
  %29 = getelementptr { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 1
  %31 = bitcast %struct.timespec* %25 to { i64, i64 }*
  %32 = getelementptr { i64, i64 }, { i64, i64 }* %31, i32 0, i32 0
  %33 = load i64, i64* %32, align 1
  %34 = getelementptr { i64, i64 }, { i64, i64 }* %31, i32 0, i32 1
  %35 = load i64, i64* %34, align 1
  %36 = call i32 @compare_ts(i64 %28, i64 %30, i64 %33, i64 %35)
  %37 = icmp sgt i32 %36, 0
  ret i1 %37
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_atime(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = call { i64, i64 } @get_stat_atime(%struct.stat* %5)
  %7 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %8 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  %9 = extractvalue { i64, i64 } %6, 0
  store i64 %9, i64* %8, align 1
  %10 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  %11 = extractvalue { i64, i64 } %6, 1
  store i64 %11, i64* %10, align 1
  %12 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %13 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %14 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1
  %17 = load i64, i64* %16, align 1
  %18 = call zeroext i1 @pred_timewindow(i64 %15, i64 %17, %struct.predicate.16* %12, i32 86400)
  ret i1 %18
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_closeparen(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_cmin(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load %struct.stat*, %struct.stat** %2, align 8
  %7 = call { i64, i64 } @get_stat_ctime(%struct.stat* %6)
  %8 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %9 = getelementptr { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %10 = extractvalue { i64, i64 } %7, 0
  store i64 %10, i64* %9, align 1
  %11 = getelementptr { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %12 = extractvalue { i64, i64 } %7, 1
  store i64 %12, i64* %11, align 1
  %13 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %14 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %15 = getelementptr { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  %18 = load i64, i64* %17, align 1
  %19 = call zeroext i1 @pred_timewindow(i64 %16, i64 %18, %struct.predicate.16* %13, i32 60)
  ret i1 %19
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_cnewer(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to %struct.time_val*
  %9 = getelementptr inbounds %struct.time_val, %struct.time_val* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 0, %10
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  br label %15

; <label>:13                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 370, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.pred_cnewer, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load %struct.stat*, %struct.stat** %2, align 8
  %17 = call { i64, i64 } @get_stat_ctime(%struct.stat* %16)
  %18 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %19 = getelementptr { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %20 = extractvalue { i64, i64 } %17, 0
  store i64 %20, i64* %19, align 1
  %21 = getelementptr { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %22 = extractvalue { i64, i64 } %17, 1
  store i64 %22, i64* %21, align 1
  %23 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %24 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %23, i32 0, i32 13
  %25 = bitcast %union.anon* %24 to %struct.time_val*
  %26 = getelementptr inbounds %struct.time_val, %struct.time_val* %25, i32 0, i32 2
  %27 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %28 = getelementptr { i64, i64 }, { i64, i64 }* %27, i32 0, i32 0
  %29 = load i64, i64* %28, align 1
  %30 = getelementptr { i64, i64 }, { i64, i64 }* %27, i32 0, i32 1
  %31 = load i64, i64* %30, align 1
  %32 = bitcast %struct.timespec* %26 to { i64, i64 }*
  %33 = getelementptr { i64, i64 }, { i64, i64 }* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 1
  %35 = getelementptr { i64, i64 }, { i64, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 1
  %37 = call i32 @compare_ts(i64 %29, i64 %31, i64 %34, i64 %36)
  %38 = icmp sgt i32 %37, 0
  ret i1 %38
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_comma(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %5 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %4, i32 0, i32 15
  %6 = load %struct.predicate.16*, %struct.predicate.16** %5, align 8
  %7 = icmp ne %struct.predicate.16* %6, null
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %1, align 8
  %10 = load %struct.stat*, %struct.stat** %2, align 8
  %11 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %12 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %11, i32 0, i32 15
  %13 = load %struct.predicate.16*, %struct.predicate.16** %12, align 8
  %14 = call zeroext i1 bitcast (i1 (i8*, %struct.stat*, %struct.predicate*)* @apply_predicate to i1 (i8*, %struct.stat*, %struct.predicate.16*)*)(i8* %9, %struct.stat* %10, %struct.predicate.16* %13)
  br label %15

; <label>:15                                      ; preds = %8, %0
  %16 = load i8*, i8** %1, align 8
  %17 = load %struct.stat*, %struct.stat** %2, align 8
  %18 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %19 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %18, i32 0, i32 16
  %20 = load %struct.predicate.16*, %struct.predicate.16** %19, align 8
  %21 = call zeroext i1 bitcast (i1 (i8*, %struct.stat*, %struct.predicate*)* @apply_predicate to i1 (i8*, %struct.stat*, %struct.predicate.16*)*)(i8* %16, %struct.stat* %17, %struct.predicate.16* %20)
  ret i1 %21
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_ctime(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = call { i64, i64 } @get_stat_ctime(%struct.stat* %5)
  %7 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %8 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  %9 = extractvalue { i64, i64 } %6, 0
  store i64 %9, i64* %8, align 1
  %10 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  %11 = extractvalue { i64, i64 } %6, 1
  store i64 %11, i64* %10, align 1
  %12 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %13 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %14 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1
  %17 = load i64, i64* %16, align 1
  %18 = call zeroext i1 @pred_timewindow(i64 %15, i64 %17, %struct.predicate.16* %12, i32 86400)
  ret i1 %18
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_delete(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %flags = alloca i32, align 4
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %6 = load %struct.stat*, %struct.stat** %3, align 8
  %7 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %8 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str254, i32 0, i32 0)) #14
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %49

; <label>:10                                      ; preds = %0
  store i32 0, i32* %flags, align 4
  %11 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %22

; <label>:13                                      ; preds = %10
  %14 = load %struct.stat*, %struct.stat** %3, align 8
  %15 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 61440
  %18 = icmp eq i32 %17, 16384
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %13
  %20 = load i32, i32* %flags, align 4
  %21 = or i32 %20, 512
  store i32 %21, i32* %flags, align 4
  br label %22

; <label>:22                                      ; preds = %19, %13, %10
  %23 = load i32, i32* %flags, align 4
  %24 = call zeroext i1 @perform_delete(i32 %23)
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %22
  store i1 true, i1* %1
  br label %50

; <label>:26                                      ; preds = %22
  %27 = call i32* @__errno_location() #13
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 21, %28
  br i1 %29, label %30, label %42

; <label>:30                                      ; preds = %26
  %31 = load i32, i32* %flags, align 4
  %32 = and i32 %31, 512
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %41

; <label>:34                                      ; preds = %30
  %35 = load i32, i32* %flags, align 4
  %36 = or i32 %35, 512
  store i32 %36, i32* %flags, align 4
  %37 = load i32, i32* %flags, align 4
  %38 = call zeroext i1 @perform_delete(i32 %37)
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %34
  store i1 true, i1* %1
  br label %50

; <label>:40                                      ; preds = %34
  br label %41

; <label>:41                                      ; preds = %40, %30
  br label %42

; <label>:42                                      ; preds = %41, %26
  br label %43

; <label>:43                                      ; preds = %42
  %44 = call i32* @__errno_location() #13
  %45 = load i32, i32* %44, align 4
  %46 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str355, i32 0, i32 0)) #9
  %47 = load i8*, i8** %2, align 8
  %48 = call i8* @safely_quote_err_filename(i32 0, i8* %47)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %45, i8* %46, i8* %48)
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  store i1 false, i1* %1
  br label %50

; <label>:49                                      ; preds = %0
  store i1 true, i1* %1
  br label %50

; <label>:50                                      ; preds = %49, %43, %39, %25
  %51 = load i1, i1* %1
  ret i1 %51
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_empty(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %fd = alloca i32, align 4
  %d = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8
  %empty = alloca i8, align 1
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = load %struct.stat*, %struct.stat** %3, align 8
  %8 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 61440
  %11 = icmp eq i32 %10, 16384
  br i1 %11, label %12, label %84

; <label>:12                                      ; preds = %0
  store i8 1, i8* %empty, align 1
  %13 = call i32* @__errno_location() #13
  store i32 0, i32* %13, align 4
  %14 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %15 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %16 = call i32 (i32, i8*, i32, ...) @openat(i32 %14, i8* %15, i32 0)
  store i32 %16, i32* %fd, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %23

; <label>:18                                      ; preds = %12
  %19 = call i32* @__errno_location() #13
  %20 = load i32, i32* %19, align 4
  %21 = load i8*, i8** %2, align 8
  %22 = call i8* @safely_quote_err_filename(i32 0, i8* %21)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* %22)
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  store i1 false, i1* %1
  br label %96

; <label>:23                                      ; preds = %12
  %24 = load i32, i32* %fd, align 4
  %25 = call %struct.__dirstream* @fdopendir(i32 %24)
  store %struct.__dirstream* %25, %struct.__dirstream** %d, align 8
  %26 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8
  %27 = icmp eq %struct.__dirstream* %26, null
  br i1 %27, label %28, label %33

; <label>:28                                      ; preds = %23
  %29 = call i32* @__errno_location() #13
  %30 = load i32, i32* %29, align 4
  %31 = load i8*, i8** %2, align 8
  %32 = call i8* @safely_quote_err_filename(i32 0, i8* %31)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* %32)
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  store i1 false, i1* %1
  br label %96

; <label>:33                                      ; preds = %23
  %34 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8
  %35 = call %struct.dirent* @readdir(%struct.__dirstream* %34)
  store %struct.dirent* %35, %struct.dirent** %dp, align 8
  br label %36

; <label>:36                                      ; preds = %69, %33
  %37 = load %struct.dirent*, %struct.dirent** %dp, align 8
  %38 = icmp ne %struct.dirent* %37, null
  br i1 %38, label %39, label %72

; <label>:39                                      ; preds = %36
  %40 = load %struct.dirent*, %struct.dirent** %dp, align 8
  %41 = getelementptr inbounds %struct.dirent, %struct.dirent* %40, i32 0, i32 4
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* %41, i32 0, i64 0
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp ne i32 %44, 46
  br i1 %45, label %67, label %46

; <label>:46                                      ; preds = %39
  %47 = load %struct.dirent*, %struct.dirent** %dp, align 8
  %48 = getelementptr inbounds %struct.dirent, %struct.dirent* %47, i32 0, i32 4
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %48, i32 0, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %68

; <label>:53                                      ; preds = %46
  %54 = load %struct.dirent*, %struct.dirent** %dp, align 8
  %55 = getelementptr inbounds %struct.dirent, %struct.dirent* %54, i32 0, i32 4
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %55, i32 0, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp ne i32 %58, 46
  br i1 %59, label %67, label %60

; <label>:60                                      ; preds = %53
  %61 = load %struct.dirent*, %struct.dirent** %dp, align 8
  %62 = getelementptr inbounds %struct.dirent, %struct.dirent* %61, i32 0, i32 4
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* %62, i32 0, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %68

; <label>:67                                      ; preds = %60, %53, %39
  store i8 0, i8* %empty, align 1
  br label %72

; <label>:68                                      ; preds = %60, %46
  br label %69

; <label>:69                                      ; preds = %68
  %70 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8
  %71 = call %struct.dirent* @readdir(%struct.__dirstream* %70)
  store %struct.dirent* %71, %struct.dirent** %dp, align 8
  br label %36

; <label>:72                                      ; preds = %67, %36
  %73 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8
  %74 = call i32 @closedir(%struct.__dirstream* %73)
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %81

; <label>:76                                      ; preds = %72
  %77 = call i32* @__errno_location() #13
  %78 = load i32, i32* %77, align 4
  %79 = load i8*, i8** %2, align 8
  %80 = call i8* @safely_quote_err_filename(i32 0, i8* %79)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* %80)
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  store i1 false, i1* %1
  br label %96

; <label>:81                                      ; preds = %72
  %82 = load i8, i8* %empty, align 1
  %83 = trunc i8 %82 to i1
  store i1 %83, i1* %1
  br label %96

; <label>:84                                      ; preds = %0
  %85 = load %struct.stat*, %struct.stat** %3, align 8
  %86 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 61440
  %89 = icmp eq i32 %88, 32768
  br i1 %89, label %90, label %95

; <label>:90                                      ; preds = %84
  %91 = load %struct.stat*, %struct.stat** %3, align 8
  %92 = getelementptr inbounds %struct.stat, %struct.stat* %91, i32 0, i32 8
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  store i1 %94, i1* %1
  br label %96

; <label>:95                                      ; preds = %84
  store i1 false, i1* %1
  br label %96

; <label>:96                                      ; preds = %95, %90, %81, %76, %28, %18
  %97 = load i1, i1* %1
  ret i1 %97
}

declare i32 @openat(i32, i8*, i32, ...) #3

declare %struct.__dirstream* @fdopendir(i32) #3

declare %struct.dirent* @readdir(%struct.__dirstream*) #3

declare i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_exec(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = call i32 @get_start_dirfd()
  %5 = load i8*, i8** %1, align 8
  %6 = load %struct.stat*, %struct.stat** %2, align 8
  %7 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %8 = call zeroext i1 @new_impl_pred_exec(i32 %4, i8* %5, %struct.stat* %6, %struct.predicate.16* %7, i8* null, i64 0)
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_execdir(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %prefix = alloca i8*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = sext i8 %6 to i32
  %8 = icmp eq i32 %7, 47
  %9 = select i1 %8, i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str557, i32 0, i32 0)
  store i8* %9, i8** %prefix, align 8
  %10 = call i32 @get_current_dirfd()
  %11 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %12 = load %struct.stat*, %struct.stat** %2, align 8
  %13 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %14 = load i8*, i8** %prefix, align 8
  %15 = load i8*, i8** %prefix, align 8
  %16 = icmp ne i8* %15, null
  %17 = select i1 %16, i32 2, i32 0
  %18 = sext i32 %17 to i64
  %19 = call zeroext i1 @new_impl_pred_exec(i32 %10, i8* %11, %struct.stat* %12, %struct.predicate.16* %13, i8* %14, i64 %18)
  ret i1 %19
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_false(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  ret i1 false
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_fls(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %stream = alloca %struct._IO_FILE*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %5 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %4, i32 0, i32 13
  %6 = bitcast %union.anon* %5 to %struct.format_val*
  %7 = getelementptr inbounds %struct.format_val, %struct.format_val* %6, i32 0, i32 1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  store %struct._IO_FILE* %8, %struct._IO_FILE** %stream, align 8
  %9 = load i8*, i8** %1, align 8
  %10 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %11 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %12 = load %struct.stat*, %struct.stat** %2, align 8
  %13 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 10, i32 0), align 8
  %14 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 13), align 4
  %15 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %16 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %stream, align 8
  call void @list_file(i8* %9, i32 %10, i8* %11, %struct.stat* %12, i64 %13, i32 %14, i32 %19, %struct._IO_FILE* %20)
  ret i1 true
}

declare void @list_file(i8*, i32, i8*, %struct.stat*, i64, i32, i32, %struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_fprint(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %5 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %4, i32 0, i32 13
  %6 = bitcast %union.anon* %5 to %struct.format_val*
  %7 = getelementptr inbounds %struct.format_val, %struct.format_val* %6, i32 0, i32 1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %9 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %10 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %9, i32 0, i32 13
  %11 = bitcast %union.anon* %10 to %struct.format_val*
  %12 = getelementptr inbounds %struct.format_val, %struct.format_val* %11, i32 0, i32 4
  %13 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8
  %14 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %15 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %14, i32 0, i32 13
  %16 = bitcast %union.anon* %15 to %struct.format_val*
  %17 = getelementptr inbounds %struct.format_val, %struct.format_val* %16, i32 0, i32 3
  %18 = load i8, i8* %17, align 1
  %19 = trunc i8 %18 to i1
  %20 = load i8*, i8** %1, align 8
  %21 = call i32 @print_quoted(%struct._IO_FILE* %8, %struct.quoting_options* %13, i1 zeroext %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str658, i32 0, i32 0), i8* %20)
  ret i1 true
}

declare i32 @print_quoted(%struct._IO_FILE*, %struct.quoting_options*, i1 zeroext, i8*, i8*) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_fprint0(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %5 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %4, i32 0, i32 13
  %6 = bitcast %union.anon* %5 to %struct.format_val*
  %7 = getelementptr inbounds %struct.format_val, %struct.format_val* %6, i32 0, i32 1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  store %struct._IO_FILE* %8, %struct._IO_FILE** %fp, align 8
  %9 = load i8*, i8** %1, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %11 = call i32 @fputs(i8* %9, %struct._IO_FILE* %10)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %13 = call i32 @_IO_putc(i32 0, %struct._IO_FILE* %12)
  ret i1 true
}

declare i32 @fputs(i8*, %struct._IO_FILE*) #3

declare i32 @_IO_putc(i32, %struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_fprintf(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %dest = alloca %struct.format_val*, align 8
  %segment = alloca %struct.segment*, align 8
  %ts = alloca %struct.timespec, align 8
  %valid = alloca i32, align 4
  %4 = alloca %struct.timespec, align 8
  %5 = alloca %struct.timespec, align 8
  %6 = alloca %struct.timespec, align 8
  %7 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %8 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %9 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %8, i32 0, i32 13
  %10 = bitcast %union.anon* %9 to %struct.format_val*
  store %struct.format_val* %10, %struct.format_val** %dest, align 8
  %11 = load %struct.format_val*, %struct.format_val** %dest, align 8
  %12 = getelementptr inbounds %struct.format_val, %struct.format_val* %11, i32 0, i32 0
  %13 = load %struct.segment*, %struct.segment** %12, align 8
  store %struct.segment* %13, %struct.segment** %segment, align 8
  br label %14

; <label>:14                                      ; preds = %120, %0
  %15 = load %struct.segment*, %struct.segment** %segment, align 8
  %16 = icmp ne %struct.segment* %15, null
  br i1 %16, label %17, label %124

; <label>:17                                      ; preds = %14
  %18 = load %struct.segment*, %struct.segment** %segment, align 8
  %19 = getelementptr inbounds %struct.segment, %struct.segment* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 2, %20
  br i1 %21, label %22, label %114

; <label>:22                                      ; preds = %17
  %23 = load %struct.segment*, %struct.segment** %segment, align 8
  %24 = getelementptr inbounds %struct.segment, %struct.segment* %23, i32 0, i32 1
  %25 = getelementptr inbounds [2 x i8], [2 x i8]* %24, i32 0, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %114

; <label>:29                                      ; preds = %22
  store i32 0, i32* %valid, align 4
  %30 = load %struct.segment*, %struct.segment** %segment, align 8
  %31 = getelementptr inbounds %struct.segment, %struct.segment* %30, i32 0, i32 1
  %32 = getelementptr inbounds [2 x i8], [2 x i8]* %31, i32 0, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  switch i32 %34, label %88 [
    i32 65, label %35
    i32 66, label %45
    i32 67, label %68
    i32 84, label %78
  ]

; <label>:35                                      ; preds = %29
  %36 = load %struct.stat*, %struct.stat** %2, align 8
  %37 = call { i64, i64 } @get_stat_atime(%struct.stat* %36)
  %38 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %39 = getelementptr { i64, i64 }, { i64, i64 }* %38, i32 0, i32 0
  %40 = extractvalue { i64, i64 } %37, 0
  store i64 %40, i64* %39, align 1
  %41 = getelementptr { i64, i64 }, { i64, i64 }* %38, i32 0, i32 1
  %42 = extractvalue { i64, i64 } %37, 1
  store i64 %42, i64* %41, align 1
  %43 = bitcast %struct.timespec* %ts to i8*
  %44 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false)
  store i32 1, i32* %valid, align 4
  br label %89

; <label>:45                                      ; preds = %29
  %46 = load %struct.stat*, %struct.stat** %2, align 8
  %47 = call { i64, i64 } @get_stat_birthtime(%struct.stat* %46)
  %48 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %49 = getelementptr { i64, i64 }, { i64, i64 }* %48, i32 0, i32 0
  %50 = extractvalue { i64, i64 } %47, 0
  store i64 %50, i64* %49, align 1
  %51 = getelementptr { i64, i64 }, { i64, i64 }* %48, i32 0, i32 1
  %52 = extractvalue { i64, i64 } %47, 1
  store i64 %52, i64* %51, align 1
  %53 = bitcast %struct.timespec* %ts to i8*
  %54 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false)
  %55 = load %struct.segment*, %struct.segment** %segment, align 8
  %56 = getelementptr inbounds %struct.segment, %struct.segment* %55, i32 0, i32 1
  %57 = getelementptr inbounds [2 x i8], [2 x i8]* %56, i32 0, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 64, %59
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %45
  store i32 1, i32* %valid, align 4
  br label %67

; <label>:62                                      ; preds = %45
  %63 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp sge i64 %64, 0
  %66 = zext i1 %65 to i32
  store i32 %66, i32* %valid, align 4
  br label %67

; <label>:67                                      ; preds = %62, %61
  br label %89

; <label>:68                                      ; preds = %29
  %69 = load %struct.stat*, %struct.stat** %2, align 8
  %70 = call { i64, i64 } @get_stat_ctime(%struct.stat* %69)
  %71 = bitcast %struct.timespec* %6 to { i64, i64 }*
  %72 = getelementptr { i64, i64 }, { i64, i64 }* %71, i32 0, i32 0
  %73 = extractvalue { i64, i64 } %70, 0
  store i64 %73, i64* %72, align 1
  %74 = getelementptr { i64, i64 }, { i64, i64 }* %71, i32 0, i32 1
  %75 = extractvalue { i64, i64 } %70, 1
  store i64 %75, i64* %74, align 1
  %76 = bitcast %struct.timespec* %ts to i8*
  %77 = bitcast %struct.timespec* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 16, i32 8, i1 false)
  store i32 1, i32* %valid, align 4
  br label %89

; <label>:78                                      ; preds = %29
  %79 = load %struct.stat*, %struct.stat** %2, align 8
  %80 = call { i64, i64 } @get_stat_mtime(%struct.stat* %79)
  %81 = bitcast %struct.timespec* %7 to { i64, i64 }*
  %82 = getelementptr { i64, i64 }, { i64, i64 }* %81, i32 0, i32 0
  %83 = extractvalue { i64, i64 } %80, 0
  store i64 %83, i64* %82, align 1
  %84 = getelementptr { i64, i64 }, { i64, i64 }* %81, i32 0, i32 1
  %85 = extractvalue { i64, i64 } %80, 1
  store i64 %85, i64* %84, align 1
  %86 = bitcast %struct.timespec* %ts to i8*
  %87 = bitcast %struct.timespec* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 16, i32 8, i1 false)
  store i32 1, i32* %valid, align 4
  br label %89

; <label>:88                                      ; preds = %29
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str759, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1098, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.pred_fprintf, i32 0, i32 0)) #12
  unreachable

; <label>:89                                      ; preds = %78, %68, %67, %35
  %90 = load i32, i32* %valid, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %108

; <label>:92                                      ; preds = %89
  %93 = load %struct.format_val*, %struct.format_val** %dest, align 8
  %94 = load %struct.segment*, %struct.segment** %segment, align 8
  %95 = getelementptr inbounds %struct.segment, %struct.segment* %94, i32 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = load %struct.segment*, %struct.segment** %segment, align 8
  %98 = getelementptr inbounds %struct.segment, %struct.segment* %97, i32 0, i32 1
  %99 = getelementptr inbounds [2 x i8], [2 x i8]* %98, i32 0, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %103 = getelementptr { i64, i64 }, { i64, i64 }* %102, i32 0, i32 0
  %104 = load i64, i64* %103, align 1
  %105 = getelementptr { i64, i64 }, { i64, i64 }* %102, i32 0, i32 1
  %106 = load i64, i64* %105, align 1
  %107 = call i8* @format_date(i64 %104, i64 %106, i32 %101)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %93, i8* %96, i8* %107)
  br label %113

; <label>:108                                     ; preds = %89
  %109 = load %struct.format_val*, %struct.format_val** %dest, align 8
  %110 = load %struct.segment*, %struct.segment** %segment, align 8
  %111 = getelementptr inbounds %struct.segment, %struct.segment* %110, i32 0, i32 2
  %112 = load i8*, i8** %111, align 8
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %109, i8* %112, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str860, i32 0, i32 0))
  br label %113

; <label>:113                                     ; preds = %108, %92
  br label %119

; <label>:114                                     ; preds = %22, %17
  %115 = load %struct.format_val*, %struct.format_val** %dest, align 8
  %116 = load %struct.segment*, %struct.segment** %segment, align 8
  %117 = load i8*, i8** %1, align 8
  %118 = load %struct.stat*, %struct.stat** %2, align 8
  call void @do_fprintf(%struct.format_val* %115, %struct.segment* %116, i8* %117, %struct.stat* %118)
  br label %119

; <label>:119                                     ; preds = %114, %113
  br label %120

; <label>:120                                     ; preds = %119
  %121 = load %struct.segment*, %struct.segment** %segment, align 8
  %122 = getelementptr inbounds %struct.segment, %struct.segment* %121, i32 0, i32 4
  %123 = load %struct.segment*, %struct.segment** %122, align 8
  store %struct.segment* %123, %struct.segment** %segment, align 8
  br label %14

; <label>:124                                     ; preds = %14
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_fstype(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.stat*, %struct.stat** %3, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call i8* @filesystem_type(%struct.stat* %6, i8* %7)
  %9 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %10 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %9, i32 0, i32 13
  %11 = bitcast %union.anon* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 @strcmp(i8* %8, i8* %12) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %0
  store i1 true, i1* %1
  br label %17

; <label>:16                                      ; preds = %0
  store i1 false, i1* %1
  br label %17

; <label>:17                                      ; preds = %16, %15
  %18 = load i1, i1* %1
  ret i1 %18
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_gid(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to %struct.long_val*
  %9 = getelementptr inbounds %struct.long_val, %struct.long_val* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %50 [
    i32 0, label %11
    i32 1, label %24
    i32 2, label %37
  ]

; <label>:11                                      ; preds = %0
  %12 = load %struct.stat*, %struct.stat** %3, align 8
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %17 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %16, i32 0, i32 13
  %18 = bitcast %union.anon* %17 to %struct.long_val*
  %19 = getelementptr inbounds %struct.long_val, %struct.long_val* %18, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %15, %20
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %11
  store i1 true, i1* %1
  br label %51

; <label>:23                                      ; preds = %11
  br label %50

; <label>:24                                      ; preds = %0
  %25 = load %struct.stat*, %struct.stat** %3, align 8
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 5
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %30 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %29, i32 0, i32 13
  %31 = bitcast %union.anon* %30 to %struct.long_val*
  %32 = getelementptr inbounds %struct.long_val, %struct.long_val* %31, i32 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %28, %33
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %24
  store i1 true, i1* %1
  br label %51

; <label>:36                                      ; preds = %24
  br label %50

; <label>:37                                      ; preds = %0
  %38 = load %struct.stat*, %struct.stat** %3, align 8
  %39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %43 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %42, i32 0, i32 13
  %44 = bitcast %union.anon* %43 to %struct.long_val*
  %45 = getelementptr inbounds %struct.long_val, %struct.long_val* %44, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %41, %46
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %37
  store i1 true, i1* %1
  br label %51

; <label>:49                                      ; preds = %37
  br label %50

; <label>:50                                      ; preds = %49, %36, %23, %0
  store i1 false, i1* %1
  br label %51

; <label>:51                                      ; preds = %50, %48, %35, %22
  %52 = load i1, i1* %1
  ret i1 %52
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_group(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.stat*, %struct.stat** %3, align 8
  %11 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %0
  store i1 true, i1* %1
  br label %16

; <label>:15                                      ; preds = %0
  store i1 false, i1* %1
  br label %16

; <label>:16                                      ; preds = %15, %14
  %17 = load i1, i1* %1
  ret i1 %17
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_ilname(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = call zeroext i1 @match_lname(i8* %4, %struct.stat* %5, %struct.predicate.16* %6, i1 zeroext true)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_iname(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load %struct.stat*, %struct.stat** %2, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = call zeroext i1 @pred_name_common(i8* %5, i8* %9, i32 16)
  ret i1 %10
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_inum(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to %struct.long_val*
  %9 = getelementptr inbounds %struct.long_val, %struct.long_val* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %47 [
    i32 0, label %11
    i32 1, label %23
    i32 2, label %35
  ]

; <label>:11                                      ; preds = %0
  %12 = load %struct.stat*, %struct.stat** %3, align 8
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %16 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %15, i32 0, i32 13
  %17 = bitcast %union.anon* %16 to %struct.long_val*
  %18 = getelementptr inbounds %struct.long_val, %struct.long_val* %17, i32 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %14, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %11
  store i1 true, i1* %1
  br label %48

; <label>:22                                      ; preds = %11
  br label %47

; <label>:23                                      ; preds = %0
  %24 = load %struct.stat*, %struct.stat** %3, align 8
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %28 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %27, i32 0, i32 13
  %29 = bitcast %union.anon* %28 to %struct.long_val*
  %30 = getelementptr inbounds %struct.long_val, %struct.long_val* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %26, %31
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %23
  store i1 true, i1* %1
  br label %48

; <label>:34                                      ; preds = %23
  br label %47

; <label>:35                                      ; preds = %0
  %36 = load %struct.stat*, %struct.stat** %3, align 8
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %40 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %39, i32 0, i32 13
  %41 = bitcast %union.anon* %40 to %struct.long_val*
  %42 = getelementptr inbounds %struct.long_val, %struct.long_val* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %38, %43
  br i1 %44, label %45, label %46

; <label>:45                                      ; preds = %35
  store i1 true, i1* %1
  br label %48

; <label>:46                                      ; preds = %35
  br label %47

; <label>:47                                      ; preds = %46, %34, %22, %0
  store i1 false, i1* %1
  br label %48

; <label>:48                                      ; preds = %47, %45, %33, %21
  %49 = load i1, i1* %1
  ret i1 %49
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_ipath(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.stat*, %struct.stat** %3, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = load i8*, i8** %2, align 8
  %11 = call i32 @fnmatch(i8* %9, i8* %10, i32 16)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  store i1 true, i1* %1
  br label %15

; <label>:14                                      ; preds = %0
  store i1 false, i1* %1
  br label %15

; <label>:15                                      ; preds = %14, %13
  %16 = load i1, i1* %1
  ret i1 %16
}

declare i32 @fnmatch(i8*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_links(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to %struct.long_val*
  %9 = getelementptr inbounds %struct.long_val, %struct.long_val* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %47 [
    i32 0, label %11
    i32 1, label %23
    i32 2, label %35
  ]

; <label>:11                                      ; preds = %0
  %12 = load %struct.stat*, %struct.stat** %3, align 8
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %16 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %15, i32 0, i32 13
  %17 = bitcast %union.anon* %16 to %struct.long_val*
  %18 = getelementptr inbounds %struct.long_val, %struct.long_val* %17, i32 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %14, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %11
  store i1 true, i1* %1
  br label %48

; <label>:22                                      ; preds = %11
  br label %47

; <label>:23                                      ; preds = %0
  %24 = load %struct.stat*, %struct.stat** %3, align 8
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %28 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %27, i32 0, i32 13
  %29 = bitcast %union.anon* %28 to %struct.long_val*
  %30 = getelementptr inbounds %struct.long_val, %struct.long_val* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %26, %31
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %23
  store i1 true, i1* %1
  br label %48

; <label>:34                                      ; preds = %23
  br label %47

; <label>:35                                      ; preds = %0
  %36 = load %struct.stat*, %struct.stat** %3, align 8
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %40 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %39, i32 0, i32 13
  %41 = bitcast %union.anon* %40 to %struct.long_val*
  %42 = getelementptr inbounds %struct.long_val, %struct.long_val* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %38, %43
  br i1 %44, label %45, label %46

; <label>:45                                      ; preds = %35
  store i1 true, i1* %1
  br label %48

; <label>:46                                      ; preds = %35
  br label %47

; <label>:47                                      ; preds = %46, %34, %22, %0
  store i1 false, i1* %1
  br label %48

; <label>:48                                      ; preds = %47, %45, %33, %21
  %49 = load i1, i1* %1
  ret i1 %49
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_lname(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = call zeroext i1 @match_lname(i8* %4, %struct.stat* %5, %struct.predicate.16* %6, i1 zeroext false)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_ls(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = call zeroext i1 @pred_fls(i8* %4, %struct.stat* %5, %struct.predicate.16* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_mmin(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = call { i64, i64 } @get_stat_mtime(%struct.stat* %5)
  %7 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %8 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  %9 = extractvalue { i64, i64 } %6, 0
  store i64 %9, i64* %8, align 1
  %10 = getelementptr { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  %11 = extractvalue { i64, i64 } %6, 1
  store i64 %11, i64* %10, align 1
  %12 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %13 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %14 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1
  %17 = load i64, i64* %16, align 1
  %18 = call zeroext i1 @pred_timewindow(i64 %15, i64 %17, %struct.predicate.16* %12, i32 60)
  ret i1 %18
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_mtime(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load %struct.stat*, %struct.stat** %2, align 8
  %7 = call { i64, i64 } @get_stat_mtime(%struct.stat* %6)
  %8 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %9 = getelementptr { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %10 = extractvalue { i64, i64 } %7, 0
  store i64 %10, i64* %9, align 1
  %11 = getelementptr { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %12 = extractvalue { i64, i64 } %7, 1
  store i64 %12, i64* %11, align 1
  %13 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %14 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %15 = getelementptr { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  %18 = load i64, i64* %17, align 1
  %19 = call zeroext i1 @pred_timewindow(i64 %16, i64 %18, %struct.predicate.16* %13, i32 86400)
  ret i1 %19
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_name(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load %struct.stat*, %struct.stat** %2, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = call zeroext i1 @pred_name_common(i8* %5, i8* %9, i32 0)
  ret i1 %10
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_negate(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 16
  %8 = load %struct.predicate.16*, %struct.predicate.16** %7, align 8
  %9 = call zeroext i1 bitcast (i1 (i8*, %struct.stat*, %struct.predicate*)* @apply_predicate to i1 (i8*, %struct.stat*, %struct.predicate.16*)*)(i8* %4, %struct.stat* %5, %struct.predicate.16* %8)
  %10 = xor i1 %9, true
  ret i1 %10
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_newer(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to %struct.time_val*
  %9 = getelementptr inbounds %struct.time_val, %struct.time_val* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 0, %10
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  br label %15

; <label>:13                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1334, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__.pred_newer, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load %struct.stat*, %struct.stat** %2, align 8
  %17 = call { i64, i64 } @get_stat_mtime(%struct.stat* %16)
  %18 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %19 = getelementptr { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %20 = extractvalue { i64, i64 } %17, 0
  store i64 %20, i64* %19, align 1
  %21 = getelementptr { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %22 = extractvalue { i64, i64 } %17, 1
  store i64 %22, i64* %21, align 1
  %23 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %24 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %23, i32 0, i32 13
  %25 = bitcast %union.anon* %24 to %struct.time_val*
  %26 = getelementptr inbounds %struct.time_val, %struct.time_val* %25, i32 0, i32 2
  %27 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %28 = getelementptr { i64, i64 }, { i64, i64 }* %27, i32 0, i32 0
  %29 = load i64, i64* %28, align 1
  %30 = getelementptr { i64, i64 }, { i64, i64 }* %27, i32 0, i32 1
  %31 = load i64, i64* %30, align 1
  %32 = bitcast %struct.timespec* %26 to { i64, i64 }*
  %33 = getelementptr { i64, i64 }, { i64, i64 }* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 1
  %35 = getelementptr { i64, i64 }, { i64, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 1
  %37 = call i32 @compare_ts(i64 %29, i64 %31, i64 %34, i64 %36)
  %38 = icmp sgt i32 %37, 0
  ret i1 %38
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_newerXY(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %ts = alloca %struct.timespec, align 8
  %collected = alloca i8, align 1
  %5 = alloca %struct.timespec, align 8
  %6 = alloca %struct.timespec, align 8
  %7 = alloca %struct.timespec, align 8
  %8 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  store i8 0, i8* %collected, align 1
  %9 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %10 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %9, i32 0, i32 13
  %11 = bitcast %union.anon* %10 to %struct.time_val*
  %12 = getelementptr inbounds %struct.time_val, %struct.time_val* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 0, %13
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %0
  br label %18

; <label>:16                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1344, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.pred_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %18

; <label>:18                                      ; preds = %17, %15
  %19 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %20 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %19, i32 0, i32 13
  %21 = bitcast %union.anon* %20 to %struct.time_val*
  %22 = getelementptr inbounds %struct.time_val, %struct.time_val* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %83 [
    i32 4, label %24
    i32 0, label %35
    i32 1, label %45
    i32 2, label %63
    i32 3, label %73
  ]

; <label>:24                                      ; preds = %18
  %25 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %26 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %25, i32 0, i32 13
  %27 = bitcast %union.anon* %26 to %struct.time_val*
  %28 = getelementptr inbounds %struct.time_val, %struct.time_val* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %24
  br label %34

; <label>:32                                      ; preds = %24
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str961, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1349, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.pred_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %34

; <label>:34                                      ; preds = %33, %31
  store i1 false, i1* %1
  br label %106

; <label>:35                                      ; preds = %18
  %36 = load %struct.stat*, %struct.stat** %3, align 8
  %37 = call { i64, i64 } @get_stat_atime(%struct.stat* %36)
  %38 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %39 = getelementptr { i64, i64 }, { i64, i64 }* %38, i32 0, i32 0
  %40 = extractvalue { i64, i64 } %37, 0
  store i64 %40, i64* %39, align 1
  %41 = getelementptr { i64, i64 }, { i64, i64 }* %38, i32 0, i32 1
  %42 = extractvalue { i64, i64 } %37, 1
  store i64 %42, i64* %41, align 1
  %43 = bitcast %struct.timespec* %ts to i8*
  %44 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false)
  store i8 1, i8* %collected, align 1
  br label %83

; <label>:45                                      ; preds = %18
  %46 = load %struct.stat*, %struct.stat** %3, align 8
  %47 = call { i64, i64 } @get_stat_birthtime(%struct.stat* %46)
  %48 = bitcast %struct.timespec* %6 to { i64, i64 }*
  %49 = getelementptr { i64, i64 }, { i64, i64 }* %48, i32 0, i32 0
  %50 = extractvalue { i64, i64 } %47, 0
  store i64 %50, i64* %49, align 1
  %51 = getelementptr { i64, i64 }, { i64, i64 }* %48, i32 0, i32 1
  %52 = extractvalue { i64, i64 } %47, 1
  store i64 %52, i64* %51, align 1
  %53 = bitcast %struct.timespec* %ts to i8*
  %54 = bitcast %struct.timespec* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false)
  store i8 1, i8* %collected, align 1
  %55 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp slt i64 %56, 0
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %45
  br label %59

; <label>:59                                      ; preds = %58, %45
  %60 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str1062, i32 0, i32 0)) #9
  %61 = load i8*, i8** %2, align 8
  %62 = call i8* @safely_quote_err_filename(i32 0, i8* %61)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %60, i8* %62)
  store i1 false, i1* %1
  br label %106

; <label>:63                                      ; preds = %18
  %64 = load %struct.stat*, %struct.stat** %3, align 8
  %65 = call { i64, i64 } @get_stat_ctime(%struct.stat* %64)
  %66 = bitcast %struct.timespec* %7 to { i64, i64 }*
  %67 = getelementptr { i64, i64 }, { i64, i64 }* %66, i32 0, i32 0
  %68 = extractvalue { i64, i64 } %65, 0
  store i64 %68, i64* %67, align 1
  %69 = getelementptr { i64, i64 }, { i64, i64 }* %66, i32 0, i32 1
  %70 = extractvalue { i64, i64 } %65, 1
  store i64 %70, i64* %69, align 1
  %71 = bitcast %struct.timespec* %ts to i8*
  %72 = bitcast %struct.timespec* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 16, i32 8, i1 false)
  store i8 1, i8* %collected, align 1
  br label %83

; <label>:73                                      ; preds = %18
  %74 = load %struct.stat*, %struct.stat** %3, align 8
  %75 = call { i64, i64 } @get_stat_mtime(%struct.stat* %74)
  %76 = bitcast %struct.timespec* %8 to { i64, i64 }*
  %77 = getelementptr { i64, i64 }, { i64, i64 }* %76, i32 0, i32 0
  %78 = extractvalue { i64, i64 } %75, 0
  store i64 %78, i64* %77, align 1
  %79 = getelementptr { i64, i64 }, { i64, i64 }* %76, i32 0, i32 1
  %80 = extractvalue { i64, i64 } %75, 1
  store i64 %80, i64* %79, align 1
  %81 = bitcast %struct.timespec* %ts to i8*
  %82 = bitcast %struct.timespec* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 16, i32 8, i1 false)
  store i8 1, i8* %collected, align 1
  br label %83

; <label>:83                                      ; preds = %73, %63, %35, %18
  %84 = load i8, i8* %collected, align 1
  %85 = trunc i8 %84 to i1
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %83
  br label %89

; <label>:87                                      ; preds = %83
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str1163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1380, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.pred_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %89

; <label>:89                                      ; preds = %88, %86
  %90 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %91 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %90, i32 0, i32 13
  %92 = bitcast %union.anon* %91 to %struct.time_val*
  %93 = getelementptr inbounds %struct.time_val, %struct.time_val* %92, i32 0, i32 2
  %94 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %95 = getelementptr { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0
  %96 = load i64, i64* %95, align 1
  %97 = getelementptr { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1
  %98 = load i64, i64* %97, align 1
  %99 = bitcast %struct.timespec* %93 to { i64, i64 }*
  %100 = getelementptr { i64, i64 }, { i64, i64 }* %99, i32 0, i32 0
  %101 = load i64, i64* %100, align 1
  %102 = getelementptr { i64, i64 }, { i64, i64 }* %99, i32 0, i32 1
  %103 = load i64, i64* %102, align 1
  %104 = call i32 @compare_ts(i64 %96, i64 %98, i64 %101, i64 %103)
  %105 = icmp sgt i32 %104, 0
  store i1 %105, i1* %1
  br label %106

; <label>:106                                     ; preds = %89, %59, %34
  %107 = load i1, i1* %1
  ret i1 %107
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_nogroup(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %6 = load %struct.stat*, %struct.stat** %2, align 8
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = call %struct.group* @getgrgid(i32 %8)
  %10 = icmp eq %struct.group* %9, null
  ret i1 %10
}

declare %struct.group* @getgrgid(i32) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_nouser(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %6 = load %struct.stat*, %struct.stat** %2, align 8
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = call %struct.passwd* @getpwuid(i32 %8)
  %10 = icmp eq %struct.passwd* %9, null
  ret i1 %10
}

declare %struct.passwd* @getpwuid(i32) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_ok(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %6 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %5, i32 0, i32 13
  %7 = bitcast %union.anon* %6 to %struct.exec_val*
  %8 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %7, i32 0, i32 3
  %9 = load i8**, i8*** %8, align 8
  %10 = getelementptr inbounds i8*, i8** %9, i64 0
  %11 = load i8*, i8** %10, align 8
  %12 = load i8*, i8** %2, align 8
  %13 = call zeroext i1 @is_ok(i8* %11, i8* %12)
  br i1 %13, label %14, label %20

; <label>:14                                      ; preds = %0
  %15 = call i32 @get_start_dirfd()
  %16 = load i8*, i8** %2, align 8
  %17 = load %struct.stat*, %struct.stat** %3, align 8
  %18 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %19 = call zeroext i1 @new_impl_pred_exec(i32 %15, i8* %16, %struct.stat* %17, %struct.predicate.16* %18, i8* null, i64 0)
  store i1 %19, i1* %1
  br label %21

; <label>:20                                      ; preds = %0
  store i1 false, i1* %1
  br label %21

; <label>:21                                      ; preds = %20, %14
  %22 = load i1, i1* %1
  ret i1 %22
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_okdir(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %prefix = alloca i8*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8, i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 47
  %10 = select i1 %9, i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str557, i32 0, i32 0)
  store i8* %10, i8** %prefix, align 8
  %11 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %12 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %11, i32 0, i32 13
  %13 = bitcast %union.anon* %12 to %struct.exec_val*
  %14 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %13, i32 0, i32 3
  %15 = load i8**, i8*** %14, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 0
  %17 = load i8*, i8** %16, align 8
  %18 = load i8*, i8** %2, align 8
  %19 = call zeroext i1 @is_ok(i8* %17, i8* %18)
  br i1 %19, label %20, label %31

; <label>:20                                      ; preds = %0
  %21 = call i32 @get_current_dirfd()
  %22 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %23 = load %struct.stat*, %struct.stat** %3, align 8
  %24 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %25 = load i8*, i8** %prefix, align 8
  %26 = load i8*, i8** %prefix, align 8
  %27 = icmp ne i8* %26, null
  %28 = select i1 %27, i32 2, i32 0
  %29 = sext i32 %28 to i64
  %30 = call zeroext i1 @new_impl_pred_exec(i32 %21, i8* %22, %struct.stat* %23, %struct.predicate.16* %24, i8* %25, i64 %29)
  store i1 %30, i1* %1
  br label %32

; <label>:31                                      ; preds = %0
  store i1 false, i1* %1
  br label %32

; <label>:32                                      ; preds = %31, %20
  %33 = load i1, i1* %1
  ret i1 %33
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_openparen(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_or(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %6 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %5, i32 0, i32 15
  %7 = load %struct.predicate.16*, %struct.predicate.16** %6, align 8
  %8 = icmp eq %struct.predicate.16* %7, null
  br i1 %8, label %16, label %9

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %2, align 8
  %11 = load %struct.stat*, %struct.stat** %3, align 8
  %12 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %13 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %12, i32 0, i32 15
  %14 = load %struct.predicate.16*, %struct.predicate.16** %13, align 8
  %15 = call zeroext i1 bitcast (i1 (i8*, %struct.stat*, %struct.predicate*)* @apply_predicate to i1 (i8*, %struct.stat*, %struct.predicate.16*)*)(i8* %10, %struct.stat* %11, %struct.predicate.16* %14)
  br i1 %15, label %23, label %16

; <label>:16                                      ; preds = %9, %0
  %17 = load i8*, i8** %2, align 8
  %18 = load %struct.stat*, %struct.stat** %3, align 8
  %19 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %20 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %19, i32 0, i32 16
  %21 = load %struct.predicate.16*, %struct.predicate.16** %20, align 8
  %22 = call zeroext i1 bitcast (i1 (i8*, %struct.stat*, %struct.predicate*)* @apply_predicate to i1 (i8*, %struct.stat*, %struct.predicate.16*)*)(i8* %17, %struct.stat* %18, %struct.predicate.16* %21)
  store i1 %22, i1* %1
  br label %24

; <label>:23                                      ; preds = %9
  store i1 true, i1* %1
  br label %24

; <label>:24                                      ; preds = %23, %16
  %25 = load i1, i1* %1
  ret i1 %25
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_path(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.stat*, %struct.stat** %3, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = load i8*, i8** %2, align 8
  %11 = call i32 @fnmatch(i8* %9, i8* %10, i32 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  store i1 true, i1* %1
  br label %15

; <label>:14                                      ; preds = %0
  store i1 false, i1* %1
  br label %15

; <label>:15                                      ; preds = %14, %13
  %16 = load i1, i1* %1
  ret i1 %16
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_perm(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %mode = alloca i32, align 4
  %perm_val = alloca i32, align 4
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.stat*, %struct.stat** %3, align 8
  %6 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %mode, align 4
  %8 = load i32, i32* %mode, align 4
  %9 = and i32 %8, 61440
  %10 = icmp eq i32 %9, 16384
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %11, 0
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %16 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %15, i32 0, i32 13
  %17 = bitcast %union.anon* %16 to %struct.perm_val*
  %18 = getelementptr inbounds %struct.perm_val, %struct.perm_val* %17, i32 0, i32 1
  %19 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i32 0, i64 %14
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %perm_val, align 4
  %21 = load i8*, i8** %2, align 8
  %22 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %23 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %22, i32 0, i32 13
  %24 = bitcast %union.anon* %23 to %struct.perm_val*
  %25 = getelementptr inbounds %struct.perm_val, %struct.perm_val* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %47 [
    i32 0, label %27
    i32 1, label %33
    i32 2, label %42
  ]

; <label>:27                                      ; preds = %0
  %28 = load i32, i32* %mode, align 4
  %29 = load i32, i32* %perm_val, align 4
  %30 = and i32 %28, %29
  %31 = load i32, i32* %perm_val, align 4
  %32 = icmp eq i32 %30, %31
  store i1 %32, i1* %1
  br label %48

; <label>:33                                      ; preds = %0
  %34 = load i32, i32* %perm_val, align 4
  %35 = icmp eq i32 0, %34
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %33
  store i1 true, i1* %1
  br label %48

; <label>:37                                      ; preds = %33
  %38 = load i32, i32* %mode, align 4
  %39 = load i32, i32* %perm_val, align 4
  %40 = and i32 %38, %39
  %41 = icmp ne i32 %40, 0
  store i1 %41, i1* %1
  br label %48

; <label>:42                                      ; preds = %0
  %43 = load i32, i32* %mode, align 4
  %44 = and i32 %43, 4095
  %45 = load i32, i32* %perm_val, align 4
  %46 = icmp eq i32 %44, %45
  store i1 %46, i1* %1
  br label %48

; <label>:47                                      ; preds = %0
  call void @abort() #12
  unreachable

; <label>:48                                      ; preds = %42, %37, %36, %27
  %49 = load i1, i1* %1
  ret i1 %49
}

; Function Attrs: noreturn nounwind
declare void @abort() #2

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_executable(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = call i32 @can_access(i32 1)
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_readable(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = call i32 @can_access(i32 4)
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_writable(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = call i32 @can_access(i32 2)
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_print(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load %struct.stat*, %struct.stat** %2, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to %struct.format_val*
  %9 = getelementptr inbounds %struct.format_val, %struct.format_val* %8, i32 0, i32 1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %11 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %12 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %11, i32 0, i32 13
  %13 = bitcast %union.anon* %12 to %struct.format_val*
  %14 = getelementptr inbounds %struct.format_val, %struct.format_val* %13, i32 0, i32 4
  %15 = load %struct.quoting_options*, %struct.quoting_options** %14, align 8
  %16 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %17 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %16, i32 0, i32 13
  %18 = bitcast %union.anon* %17 to %struct.format_val*
  %19 = getelementptr inbounds %struct.format_val, %struct.format_val* %18, i32 0, i32 3
  %20 = load i8, i8* %19, align 1
  %21 = trunc i8 %20 to i1
  %22 = load i8*, i8** %1, align 8
  %23 = call i32 @print_quoted(%struct._IO_FILE* %10, %struct.quoting_options* %15, i1 zeroext %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str658, i32 0, i32 0), i8* %22)
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_print0(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %7 = call zeroext i1 @pred_fprint0(i8* %4, %struct.stat* %5, %struct.predicate.16* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_prune(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %6 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 0), align 1
  %7 = trunc i8 %6 to i1
  %8 = zext i1 %7 to i32
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %20

; <label>:10                                      ; preds = %0
  %11 = load %struct.stat*, %struct.stat** %2, align 8
  %12 = icmp ne %struct.stat* %11, null
  br i1 %12, label %13, label %20

; <label>:13                                      ; preds = %10
  %14 = load %struct.stat*, %struct.stat** %2, align 8
  %15 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 61440
  %18 = icmp eq i32 %17, 16384
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %13
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 7), align 1
  br label %20

; <label>:20                                      ; preds = %19, %13, %10, %0
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_quit(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.stat*, %struct.stat** %3, align 8
  %7 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  call void @cleanup()
  %8 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  call void @exit(i32 %8) #12
  unreachable
                                                  ; No predecessors!
  %10 = load i1, i1* %1
  ret i1 %10
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #2

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_regex(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %len = alloca i32, align 4
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i64 @strlen(i8* %5) #14
  %7 = trunc i64 %6 to i32
  store i32 %7, i32* %len, align 4
  %8 = load %struct.stat*, %struct.stat** %3, align 8
  %9 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %10 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %9, i32 0, i32 13
  %11 = bitcast %union.anon* %10 to %struct.re_pattern_buffer**
  %12 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %11, align 8
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %len, align 4
  %15 = sext i32 %14 to i64
  %16 = call i64 @rpl_re_match(%struct.re_pattern_buffer* %12, i8* %13, i64 %15, i64 0, %struct.re_registers* null)
  %17 = load i32, i32* %len, align 4
  %18 = sext i32 %17 to i64
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i1 true, i1* %1
  br label %22

; <label>:21                                      ; preds = %0
  store i1 false, i1* %1
  br label %22

; <label>:22                                      ; preds = %21, %20
  %23 = load i1, i1* %1
  ret i1 %23
}

declare i64 @rpl_re_match(%struct.re_pattern_buffer*, i8*, i64, i64, %struct.re_registers*) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_size(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %f_val = alloca i64, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.stat*, %struct.stat** %3, align 8
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8
  %8 = load i64, i64* %7, align 8
  %9 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %10 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %9, i32 0, i32 13
  %11 = bitcast %union.anon* %10 to %struct.size_val*
  %12 = getelementptr inbounds %struct.size_val, %struct.size_val* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = sdiv i64 %8, %14
  %16 = load %struct.stat*, %struct.stat** %3, align 8
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %20 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %19, i32 0, i32 13
  %21 = bitcast %union.anon* %20 to %struct.size_val*
  %22 = getelementptr inbounds %struct.size_val, %struct.size_val* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = srem i64 %18, %24
  %26 = icmp ne i64 %25, 0
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %15, %28
  store i64 %29, i64* %f_val, align 8
  %30 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %31 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %30, i32 0, i32 13
  %32 = bitcast %union.anon* %31 to %struct.size_val*
  %33 = getelementptr inbounds %struct.size_val, %struct.size_val* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %65 [
    i32 0, label %35
    i32 1, label %45
    i32 2, label %55
  ]

; <label>:35                                      ; preds = %0
  %36 = load i64, i64* %f_val, align 8
  %37 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %38 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %37, i32 0, i32 13
  %39 = bitcast %union.anon* %38 to %struct.size_val*
  %40 = getelementptr inbounds %struct.size_val, %struct.size_val* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %36, %41
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %35
  store i1 true, i1* %1
  br label %66

; <label>:44                                      ; preds = %35
  br label %65

; <label>:45                                      ; preds = %0
  %46 = load i64, i64* %f_val, align 8
  %47 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %48 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %47, i32 0, i32 13
  %49 = bitcast %union.anon* %48 to %struct.size_val*
  %50 = getelementptr inbounds %struct.size_val, %struct.size_val* %49, i32 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %46, %51
  br i1 %52, label %53, label %54

; <label>:53                                      ; preds = %45
  store i1 true, i1* %1
  br label %66

; <label>:54                                      ; preds = %45
  br label %65

; <label>:55                                      ; preds = %0
  %56 = load i64, i64* %f_val, align 8
  %57 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %58 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %57, i32 0, i32 13
  %59 = bitcast %union.anon* %58 to %struct.size_val*
  %60 = getelementptr inbounds %struct.size_val, %struct.size_val* %59, i32 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %56, %61
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %55
  store i1 true, i1* %1
  br label %66

; <label>:64                                      ; preds = %55
  br label %65

; <label>:65                                      ; preds = %64, %54, %44, %0
  store i1 false, i1* %1
  br label %66

; <label>:66                                      ; preds = %65, %63, %53, %43
  %67 = load i1, i1* %1
  ret i1 %67
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_samefile(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %9 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %8, i32 0, i32 13
  %10 = bitcast %union.anon* %9 to %struct.samefile_file_id*
  %11 = getelementptr inbounds %struct.samefile_file_id, %struct.samefile_file_id* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %7, %12
  br i1 %13, label %14, label %24

; <label>:14                                      ; preds = %0
  %15 = load %struct.stat*, %struct.stat** %2, align 8
  %16 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %19 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %18, i32 0, i32 13
  %20 = bitcast %union.anon* %19 to %struct.samefile_file_id*
  %21 = getelementptr inbounds %struct.samefile_file_id, %struct.samefile_file_id* %20, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %17, %22
  br label %24

; <label>:24                                      ; preds = %14, %0
  %25 = phi i1 [ false, %0 ], [ %23, %14 ]
  ret i1 %25
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_true(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_type(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %mode = alloca i32, align 4
  %type = alloca i32, align 4
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %6 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %5, i32 0, i32 13
  %7 = bitcast %union.anon* %6 to i32*
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %type, align 4
  %9 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  %10 = trunc i8 %9 to i1
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  br label %14

; <label>:12                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str1264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1711, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.pred_type, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  %16 = icmp eq i32 0, %15
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  store i1 false, i1* %1
  br label %35

; <label>:18                                      ; preds = %14
  %19 = load i8*, i8** %2, align 8
  %20 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %18
  %23 = load %struct.stat*, %struct.stat** %3, align 8
  %24 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %mode, align 4
  br label %28

; <label>:26                                      ; preds = %18
  %27 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  store i32 %27, i32* %mode, align 4
  br label %28

; <label>:28                                      ; preds = %26, %22
  %29 = load i32, i32* %mode, align 4
  %30 = and i32 %29, 61440
  %31 = load i32, i32* %type, align 4
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %28
  store i1 true, i1* %1
  br label %35

; <label>:34                                      ; preds = %28
  store i1 false, i1* %1
  br label %35

; <label>:35                                      ; preds = %34, %33, %17
  %36 = load i1, i1* %1
  ret i1 %36
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_uid(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to %struct.long_val*
  %9 = getelementptr inbounds %struct.long_val, %struct.long_val* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %50 [
    i32 0, label %11
    i32 1, label %24
    i32 2, label %37
  ]

; <label>:11                                      ; preds = %0
  %12 = load %struct.stat*, %struct.stat** %3, align 8
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %17 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %16, i32 0, i32 13
  %18 = bitcast %union.anon* %17 to %struct.long_val*
  %19 = getelementptr inbounds %struct.long_val, %struct.long_val* %18, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %15, %20
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %11
  store i1 true, i1* %1
  br label %51

; <label>:23                                      ; preds = %11
  br label %50

; <label>:24                                      ; preds = %0
  %25 = load %struct.stat*, %struct.stat** %3, align 8
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %30 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %29, i32 0, i32 13
  %31 = bitcast %union.anon* %30 to %struct.long_val*
  %32 = getelementptr inbounds %struct.long_val, %struct.long_val* %31, i32 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %28, %33
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %24
  store i1 true, i1* %1
  br label %51

; <label>:36                                      ; preds = %24
  br label %50

; <label>:37                                      ; preds = %0
  %38 = load %struct.stat*, %struct.stat** %3, align 8
  %39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %43 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %42, i32 0, i32 13
  %44 = bitcast %union.anon* %43 to %struct.long_val*
  %45 = getelementptr inbounds %struct.long_val, %struct.long_val* %44, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %41, %46
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %37
  store i1 true, i1* %1
  br label %51

; <label>:49                                      ; preds = %37
  br label %50

; <label>:50                                      ; preds = %49, %36, %23, %0
  store i1 false, i1* %1
  br label %51

; <label>:51                                      ; preds = %50, %48, %35, %22
  %52 = load i1, i1* %1
  ret i1 %52
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_used(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %delta = alloca %struct.timespec, align 8
  %at = alloca %struct.timespec, align 8
  %ct = alloca %struct.timespec, align 8
  %4 = alloca %struct.timespec, align 8
  %5 = alloca %struct.timespec, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %6 = load i8*, i8** %1, align 8
  %7 = load %struct.stat*, %struct.stat** %2, align 8
  %8 = call { i64, i64 } @get_stat_atime(%struct.stat* %7)
  %9 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %10 = getelementptr { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %11 = extractvalue { i64, i64 } %8, 0
  store i64 %11, i64* %10, align 1
  %12 = getelementptr { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %13 = extractvalue { i64, i64 } %8, 1
  store i64 %13, i64* %12, align 1
  %14 = bitcast %struct.timespec* %at to i8*
  %15 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false)
  %16 = load %struct.stat*, %struct.stat** %2, align 8
  %17 = call { i64, i64 } @get_stat_ctime(%struct.stat* %16)
  %18 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %19 = getelementptr { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %20 = extractvalue { i64, i64 } %17, 0
  store i64 %20, i64* %19, align 1
  %21 = getelementptr { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %22 = extractvalue { i64, i64 } %17, 1
  store i64 %22, i64* %21, align 1
  %23 = bitcast %struct.timespec* %ct to i8*
  %24 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 16, i32 8, i1 false)
  %25 = getelementptr inbounds %struct.timespec, %struct.timespec* %at, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.timespec, %struct.timespec* %ct, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = sub nsw i64 %26, %28
  %30 = getelementptr inbounds %struct.timespec, %struct.timespec* %delta, i32 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %struct.timespec, %struct.timespec* %at, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.timespec, %struct.timespec* %ct, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = sub nsw i64 %32, %34
  %36 = getelementptr inbounds %struct.timespec, %struct.timespec* %delta, i32 0, i32 1
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %struct.timespec, %struct.timespec* %delta, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %47

; <label>:40                                      ; preds = %0
  %41 = getelementptr inbounds %struct.timespec, %struct.timespec* %delta, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, 1000000000
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %struct.timespec, %struct.timespec* %delta, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = sub nsw i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %47

; <label>:47                                      ; preds = %40, %0
  %48 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %49 = bitcast %struct.timespec* %delta to { i64, i64 }*
  %50 = getelementptr { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0
  %51 = load i64, i64* %50, align 1
  %52 = getelementptr { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1
  %53 = load i64, i64* %52, align 1
  %54 = call zeroext i1 @pred_timewindow(i64 %51, i64 %53, %struct.predicate.16* %48, i32 86400)
  ret i1 %54
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_user(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 13
  %8 = bitcast %union.anon* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.stat*, %struct.stat** %3, align 8
  %11 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %0
  store i1 true, i1* %1
  br label %16

; <label>:15                                      ; preds = %0
  store i1 false, i1* %1
  br label %16

; <label>:16                                      ; preds = %15, %14
  %17 = load i1, i1* %1
  ret i1 %17
}

; Function Attrs: nounwind uwtable
define zeroext i1 @pred_xtype(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate.16*, align 8
  %sbuf = alloca %struct.stat, align 8
  %ystat = alloca i32 (i8*, %struct.stat*)*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %4, align 8
  %5 = call i32 @following_links()
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i32 (i8*, %struct.stat*)* @optionp_stat, i32 (i8*, %struct.stat*)** %ystat, align 8
  br label %9

; <label>:8                                       ; preds = %0
  store i32 (i8*, %struct.stat*)* @optionl_stat, i32 (i8*, %struct.stat*)** %ystat, align 8
  br label %9

; <label>:9                                       ; preds = %8, %7
  call void @set_stat_placeholders(%struct.stat* %sbuf)
  %10 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** %ystat, align 8
  %11 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %12 = call i32 %10(i8* %11, %struct.stat* %sbuf)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %32

; <label>:14                                      ; preds = %9
  %15 = call i32 @following_links()
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %26

; <label>:17                                      ; preds = %14
  %18 = call i32* @__errno_location() #13
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %26

; <label>:21                                      ; preds = %17
  %22 = load i8*, i8** %2, align 8
  %23 = load %struct.stat*, %struct.stat** %3, align 8
  %24 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %25 = call zeroext i1 @pred_type(i8* %22, %struct.stat* %23, %struct.predicate.16* %24)
  store i1 %25, i1* %1
  br label %36

; <label>:26                                      ; preds = %17, %14
  %27 = call i32* @__errno_location() #13
  %28 = load i32, i32* %27, align 4
  %29 = load i8*, i8** %2, align 8
  %30 = call i8* @safely_quote_err_filename(i32 0, i8* %29)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* %30)
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  br label %31

; <label>:31                                      ; preds = %26
  store i1 false, i1* %1
  br label %36

; <label>:32                                      ; preds = %9
  %33 = load i8*, i8** %2, align 8
  %34 = load %struct.predicate.16*, %struct.predicate.16** %4, align 8
  %35 = call zeroext i1 @pred_type(i8* %33, %struct.stat* %sbuf, %struct.predicate.16* %34)
  store i1 %35, i1* %1
  br label %36

; <label>:36                                      ; preds = %32, %31, %21
  %37 = load i1, i1* %1
  ret i1 %37
}

; Function Attrs: nounwind uwtable
define i32 @launch(%struct.buildcmd_control* %ctl, %struct.buildcmd_state* %buildstate) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.buildcmd_control*, align 8
  %3 = alloca %struct.buildcmd_state*, align 8
  %wait_status = alloca i32, align 4
  %child_pid = alloca i32, align 4
  %execp = alloca %struct.exec_val*, align 8
  %4 = alloca %union.anon.0.17, align 4
  %5 = alloca %union.anon.1, align 4
  %6 = alloca %union.anon.2, align 4
  store %struct.buildcmd_control* %ctl, %struct.buildcmd_control** %2, align 8
  store %struct.buildcmd_state* %buildstate, %struct.buildcmd_state** %3, align 8
  %7 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  %8 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %7, i32 0, i32 6
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %9 to %struct.exec_val*
  store %struct.exec_val* %10, %struct.exec_val** %execp, align 8
  %11 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %12 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %11, i32 0, i32 5
  %13 = load i8, i8* %12, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %31, label %15

; <label>:15                                      ; preds = %0
  %16 = load i32, i32* @starting_desc, align 4
  %17 = icmp sge i32 %16, 0
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %15
  br label %21

; <label>:19                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str1365, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1930, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.launch, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %21

; <label>:21                                      ; preds = %20, %18
  %22 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %23 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %22, i32 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* @starting_desc, align 4
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %21
  br label %30

; <label>:28                                      ; preds = %21
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str1466, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1931, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.launch, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %30

; <label>:30                                      ; preds = %29, %27
  br label %31

; <label>:31                                      ; preds = %30, %0
  %32 = load %struct.buildcmd_control*, %struct.buildcmd_control** %2, align 8
  %33 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  call void @bc_push_arg(%struct.buildcmd_control* %32, %struct.buildcmd_state* %33, i8* null, i64 0, i8* null, i64 0, i32 0)
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %35 = call i32 @fflush(%struct._IO_FILE* %34)
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = call i32 @fflush(%struct._IO_FILE* %36)
  %38 = load i32, i32* @launch.first_time, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %42

; <label>:40                                      ; preds = %31
  store i32 0, i32* @launch.first_time, align 4
  %41 = call void (i32)* @signal(i32 17, void (i32)* null) #9
  br label %42

; <label>:42                                      ; preds = %40, %31
  %43 = call i32 @fork() #9
  store i32 %43, i32* %child_pid, align 4
  %44 = load i32, i32* %child_pid, align 4
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %50

; <label>:46                                      ; preds = %42
  %47 = call i32* @__errno_location() #13
  %48 = load i32, i32* %47, align 4
  %49 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str1567, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %48, i8* %49)
  br label %50

; <label>:50                                      ; preds = %46, %42
  %51 = load i32, i32* %child_pid, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %87

; <label>:53                                      ; preds = %50
  %54 = load i32, i32* @starting_desc, align 4
  %55 = icmp sge i32 %54, 0
  br i1 %55, label %56, label %57

; <label>:56                                      ; preds = %53
  br label %59

; <label>:57                                      ; preds = %53
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str1365, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1955, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.launch, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %59

; <label>:59                                      ; preds = %58, %56
  %60 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %61 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %60, i32 0, i32 6
  %62 = load i8, i8* %61, align 1
  %63 = trunc i8 %62 to i1
  %64 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %65 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 4
  %67 = call zeroext i1 @prep_child_for_exec(i1 zeroext %63, i32 %66)
  br i1 %67, label %69, label %68

; <label>:68                                      ; preds = %59
  call void @_exit(i32 1) #15
  unreachable

; <label>:69                                      ; preds = %59
  %70 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  %71 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %70, i32 0, i32 1
  %72 = load i8**, i8*** %71, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 0
  %74 = load i8*, i8** %73, align 8
  %75 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  %76 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %75, i32 0, i32 1
  %77 = load i8**, i8*** %76, align 8
  %78 = call i32 @execvp(i8* %74, i8** %77) #9
  %79 = call i32* @__errno_location() #13
  %80 = load i32, i32* %79, align 4
  %81 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  %82 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %81, i32 0, i32 1
  %83 = load i8**, i8*** %82, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 0
  %85 = load i8*, i8** %84, align 8
  %86 = call i8* @safely_quote_err_filename(i32 0, i8* %85)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* %86)
  call void @_exit(i32 1) #15
  unreachable

; <label>:87                                      ; preds = %50
  %88 = load %struct.buildcmd_control*, %struct.buildcmd_control** %2, align 8
  %89 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  call void @bc_clear_args(%struct.buildcmd_control* %88, %struct.buildcmd_state* %89)
  br label %90

; <label>:90                                      ; preds = %108, %87
  %91 = load i32, i32* %child_pid, align 4
  %92 = call i32 @waitpid(i32 %91, i32* %wait_status, i32 0)
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %109

; <label>:94                                      ; preds = %90
  %95 = call i32* @__errno_location() #13
  %96 = load i32, i32* %95, align 4
  %97 = icmp ne i32 %96, 4
  br i1 %97, label %98, label %108

; <label>:98                                      ; preds = %94
  %99 = call i32* @__errno_location() #13
  %100 = load i32, i32* %99, align 4
  %101 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str1668, i32 0, i32 0)) #9
  %102 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  %103 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %102, i32 0, i32 1
  %104 = load i8**, i8*** %103, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i64 0
  %106 = load i8*, i8** %105, align 8
  %107 = call i8* @safely_quote_err_filename(i32 0, i8* %106)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %100, i8* %101, i8* %107)
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  store i32 0, i32* %1
  br label %156

; <label>:108                                     ; preds = %94
  br label %90

; <label>:109                                     ; preds = %90
  %110 = bitcast %union.anon.0.17* %4 to i32*
  %111 = load i32, i32* %wait_status, align 4
  store i32 %111, i32* %110, align 4
  %112 = bitcast %union.anon.0.17* %4 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 127
  %115 = add nsw i32 %114, 1
  %116 = trunc i32 %115 to i8
  %117 = sext i8 %116 to i32
  %118 = ashr i32 %117, 1
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %120, label %140

; <label>:120                                     ; preds = %109
  %121 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str1769, i32 0, i32 0)) #9
  %122 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %123 = load %struct.buildcmd_state*, %struct.buildcmd_state** %3, align 8
  %124 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %123, i32 0, i32 1
  %125 = load i8**, i8*** %124, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 0
  %127 = load i8*, i8** %126, align 8
  %128 = call i8* @quotearg_n_style(i32 0, i32 %122, i8* %127)
  %129 = bitcast %union.anon.1* %5 to i32*
  %130 = load i32, i32* %wait_status, align 4
  store i32 %130, i32* %129, align 4
  %131 = bitcast %union.anon.1* %5 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 127
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %121, i8* %128, i32 %133)
  %134 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %135 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %134, i32 0, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = trunc i8 %136 to i1
  br i1 %137, label %138, label %139

; <label>:138                                     ; preds = %120
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  br label %139

; <label>:139                                     ; preds = %138, %120
  store i32 1, i32* %1
  br label %156

; <label>:140                                     ; preds = %109
  %141 = bitcast %union.anon.2* %6 to i32*
  %142 = load i32, i32* %wait_status, align 4
  store i32 %142, i32* %141, align 4
  %143 = bitcast %union.anon.2* %6 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 65280
  %146 = ashr i32 %145, 8
  %147 = icmp eq i32 0, %146
  br i1 %147, label %148, label %149

; <label>:148                                     ; preds = %140
  store i32 1, i32* %1
  br label %156

; <label>:149                                     ; preds = %140
  %150 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %151 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %150, i32 0, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = trunc i8 %152 to i1
  br i1 %153, label %154, label %155

; <label>:154                                     ; preds = %149
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  br label %155

; <label>:155                                     ; preds = %154, %149
  store i32 0, i32* %1
  br label %156

; <label>:156                                     ; preds = %155, %148, %139, %98
  %157 = load i32, i32* %1
  ret i32 %157
}

declare void @bc_push_arg(%struct.buildcmd_control*, %struct.buildcmd_state*, i8*, i64, i8*, i64, i32) #3

declare i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #4

; Function Attrs: nounwind
declare i32 @fork() #4

; Function Attrs: noreturn
declare void @_exit(i32) #8

; Function Attrs: nounwind
declare i32 @execvp(i8*, i8**) #4

declare void @bc_clear_args(%struct.buildcmd_control*, %struct.buildcmd_state*) #3

declare i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: nounwind uwtable
define void @print_list(%struct._IO_FILE* %fp, %struct.predicate.16* %node) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct.predicate.16*, align 8
  %cur = alloca %struct.predicate.16*, align 8
  %name = alloca [256 x i8], align 16
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  store %struct.predicate.16* %node, %struct.predicate.16** %2, align 8
  %3 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  store %struct.predicate.16* %3, %struct.predicate.16** %cur, align 8
  br label %4

; <label>:4                                       ; preds = %7, %0
  %5 = load %struct.predicate.16*, %struct.predicate.16** %cur, align 8
  %6 = icmp ne %struct.predicate.16* %5, null
  br i1 %6, label %7, label %18

; <label>:7                                       ; preds = %4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %9 = load %struct.predicate.16*, %struct.predicate.16** %cur, align 8
  %10 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %9, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0
  %13 = call i8* @blank_rtrim(i8* %11, i8* %12)
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str1870, i32 0, i32 0), i8* %13)
  %15 = load %struct.predicate.16*, %struct.predicate.16** %cur, align 8
  %16 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %15, i32 0, i32 14
  %17 = load %struct.predicate.16*, %struct.predicate.16** %16, align 8
  store %struct.predicate.16* %17, %struct.predicate.16** %cur, align 8
  br label %4

; <label>:18                                      ; preds = %4
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str1971, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define void @print_optlist(%struct._IO_FILE* %fp, %struct.predicate.16* %p) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct.predicate.16*, align 8
  %real_rate = alloca double, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  store %struct.predicate.16* %p, %struct.predicate.16** %2, align 8
  %3 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %4 = icmp ne %struct.predicate.16* %3, null
  br i1 %4, label %5, label %73

; <label>:5                                       ; preds = %0
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %7 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %8 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %7, i32 0, i32 15
  %9 = load %struct.predicate.16*, %struct.predicate.16** %8, align 8
  call void @print_parenthesised(%struct._IO_FILE* %6, %struct.predicate.16* %9)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %11 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %12 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %11, i32 0, i32 6
  %13 = load i8, i8* %12, align 1
  %14 = trunc i8 %13 to i1
  %15 = select i1 %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str2173, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str860, i32 0, i32 0)
  %16 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %17 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %16, i32 0, i32 7
  %18 = load i8, i8* %17, align 1
  %19 = trunc i8 %18 to i1
  %20 = select i1 %19, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str2274, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str860, i32 0, i32 0)
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str2072, i32 0, i32 0), i8* %15, i8* %20)
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %23 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  call void bitcast (void (%struct._IO_FILE*, %struct.predicate*)* @print_predicate to void (%struct._IO_FILE*, %struct.predicate.16*)*)(%struct._IO_FILE* %22, %struct.predicate.16* %23)
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %25 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %26 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %25, i32 0, i32 9
  %27 = load float, float* %26, align 4
  %28 = fpext float %27 to double
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str2375, i32 0, i32 0), double %28)
  %30 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %31 = and i64 %30, 64
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %68

; <label>:33                                      ; preds = %5
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %35 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %36 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %35, i32 0, i32 17
  %37 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %40 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %39, i32 0, i32 17
  %41 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %40, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str2476, i32 0, i32 0), i64 %38, i64 %42)
  %44 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %45 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %44, i32 0, i32 17
  %46 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %45, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %64

; <label>:49                                      ; preds = %33
  %50 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %51 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %50, i32 0, i32 17
  %52 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %51, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = uitofp i64 %53 to double
  %55 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %56 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %56, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = uitofp i64 %58 to double
  %60 = fdiv double %54, %59
  store double %60, double* %real_rate, align 8
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %62 = load double, double* %real_rate, align 8
  %63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str2577, i32 0, i32 0), double %62)
  br label %67

; <label>:64                                      ; preds = %33
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str2678, i32 0, i32 0))
  br label %67

; <label>:67                                      ; preds = %64, %49
  br label %68

; <label>:68                                      ; preds = %67, %5
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %70 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %71 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %70, i32 0, i32 16
  %72 = load %struct.predicate.16*, %struct.predicate.16** %71, align 8
  call void @print_parenthesised(%struct._IO_FILE* %69, %struct.predicate.16* %72)
  br label %73

; <label>:73                                      ; preds = %68, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @show_success_rates(%struct.predicate.16* %p) #0 {
  %1 = alloca %struct.predicate.16*, align 8
  store %struct.predicate.16* %p, %struct.predicate.16** %1, align 8
  %2 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %3 = and i64 %2, 64
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %12

; <label>:5                                       ; preds = %0
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str2779, i32 0, i32 0))
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = load %struct.predicate.16*, %struct.predicate.16** %1, align 8
  call void @print_optlist(%struct._IO_FILE* %8, %struct.predicate.16* %9)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str1971, i32 0, i32 0))
  br label %12

; <label>:12                                      ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @pred_sanity_check(%struct.predicate.16* %predicates) #0 {
  %1 = alloca %struct.predicate.16*, align 8
  %p = alloca %struct.predicate.16*, align 8
  store %struct.predicate.16* %predicates, %struct.predicate.16** %1, align 8
  %2 = load %struct.predicate.16*, %struct.predicate.16** %1, align 8
  store %struct.predicate.16* %2, %struct.predicate.16** %p, align 8
  br label %3

; <label>:3                                       ; preds = %122, %0
  %4 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %5 = icmp ne %struct.predicate.16* %4, null
  br i1 %5, label %6, label %126

; <label>:6                                       ; preds = %3
  %7 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %8 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %7, i32 0, i32 0
  %9 = bitcast {}** %8 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %10 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %9, align 8
  %11 = icmp ne i1 (i8*, %struct.stat*, %struct.predicate.16*)* %10, null
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %6
  br label %15

; <label>:13                                      ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str2880, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2494, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %17 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %16, i32 0, i32 18
  %18 = load %struct.parser_table.15*, %struct.parser_table.15** %17, align 8
  %19 = icmp ne %struct.parser_table.15* %18, null
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %15
  br label %23

; <label>:21                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str2981, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2497, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %23

; <label>:23                                      ; preds = %22, %20
  %24 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %25 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %24, i32 0, i32 18
  %26 = load %struct.parser_table.15*, %struct.parser_table.15** %25, align 8
  %27 = getelementptr inbounds %struct.parser_table.15, %struct.parser_table.15* %26, i32 0, i32 3
  %28 = bitcast {}** %27 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %29 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %28, align 8
  %30 = icmp ne i1 (i8*, %struct.stat*, %struct.predicate.16*)* %29, null
  br i1 %30, label %31, label %47

; <label>:31                                      ; preds = %23
  %32 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %33 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %32, i32 0, i32 18
  %34 = load %struct.parser_table.15*, %struct.parser_table.15** %33, align 8
  %35 = getelementptr inbounds %struct.parser_table.15, %struct.parser_table.15* %34, i32 0, i32 3
  %36 = bitcast {}** %35 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %37 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %36, align 8
  %38 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %39 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %38, i32 0, i32 0
  %40 = bitcast {}** %39 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %41 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %40, align 8
  %42 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate.16*)* %37, %41
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %31
  br label %46

; <label>:44                                      ; preds = %31
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str3082, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2506, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %46

; <label>:46                                      ; preds = %45, %43
  br label %47

; <label>:47                                      ; preds = %46, %23
  %48 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %49 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %48, i32 0, i32 18
  %50 = load %struct.parser_table.15*, %struct.parser_table.15** %49, align 8
  %51 = getelementptr inbounds %struct.parser_table.15, %struct.parser_table.15* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  switch i32 %52, label %121 [
    i32 0, label %53
    i32 2, label %53
    i32 6, label %74
    i32 4, label %104
    i32 3, label %104
    i32 5, label %104
    i32 1, label %104
  ]

; <label>:53                                      ; preds = %47, %47
  %54 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %55 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %54, i32 0, i32 18
  %56 = load %struct.parser_table.15*, %struct.parser_table.15** %55, align 8
  %57 = getelementptr inbounds %struct.parser_table.15, %struct.parser_table.15* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %53
  br label %63

; <label>:61                                      ; preds = %53
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str3183, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2522, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %63

; <label>:63                                      ; preds = %62, %60
  %64 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %65 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %64, i32 0, i32 18
  %66 = load %struct.parser_table.15*, %struct.parser_table.15** %65, align 8
  %67 = getelementptr inbounds %struct.parser_table.15, %struct.parser_table.15* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 2
  br i1 %69, label %70, label %71

; <label>:70                                      ; preds = %63
  br label %73

; <label>:71                                      ; preds = %63
  call void @__assert_fail(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str3284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2523, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %73

; <label>:73                                      ; preds = %72, %70
  br label %121

; <label>:74                                      ; preds = %47
  %75 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %76 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %75, i32 0, i32 4
  %77 = load i8, i8* %76, align 1
  %78 = trunc i8 %77 to i1
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %74
  br label %82

; <label>:80                                      ; preds = %74
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str3385, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2527, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %82

; <label>:82                                      ; preds = %81, %79
  %83 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %84 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %83, i32 0, i32 0
  %85 = bitcast {}** %84 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %86 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %85, align 8
  %87 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate.16*)* %86, @pred_prune
  br i1 %87, label %103, label %88

; <label>:88                                      ; preds = %82
  %89 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %90 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %89, i32 0, i32 0
  %91 = bitcast {}** %90 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %92 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %91, align 8
  %93 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate.16*)* %92, @pred_quit
  br i1 %93, label %103, label %94

; <label>:94                                      ; preds = %88
  %95 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %96 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %95, i32 0, i32 5
  %97 = load i8, i8* %96, align 1
  %98 = trunc i8 %97 to i1
  br i1 %98, label %99, label %100

; <label>:99                                      ; preds = %94
  br label %102

; <label>:100                                     ; preds = %94
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str3486, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2533, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %102

; <label>:102                                     ; preds = %101, %99
  br label %103

; <label>:103                                     ; preds = %102, %88, %82
  br label %121

; <label>:104                                     ; preds = %47, %47, %47, %47
  %105 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %106 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %105, i32 0, i32 5
  %107 = load i8, i8* %106, align 1
  %108 = trunc i8 %107 to i1
  br i1 %108, label %110, label %109

; <label>:109                                     ; preds = %104
  br label %112

; <label>:110                                     ; preds = %104
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str3587, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2547, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %112

; <label>:112                                     ; preds = %111, %109
  %113 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %114 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %113, i32 0, i32 4
  %115 = load i8, i8* %114, align 1
  %116 = trunc i8 %115 to i1
  br i1 %116, label %118, label %117

; <label>:117                                     ; preds = %112
  br label %120

; <label>:118                                     ; preds = %112
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str3688, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2548, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.pred_sanity_check, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %120

; <label>:120                                     ; preds = %119, %117
  br label %121

; <label>:121                                     ; preds = %120, %103, %73, %47
  br label %122

; <label>:122                                     ; preds = %121
  %123 = load %struct.predicate.16*, %struct.predicate.16** %p, align 8
  %124 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %123, i32 0, i32 14
  %125 = load %struct.predicate.16*, %struct.predicate.16** %124, align 8
  store %struct.predicate.16* %125, %struct.predicate.16** %p, align 8
  br label %3

; <label>:126                                     ; preds = %3
  ret void
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #4

declare i8* @human_readable(i64, i8*, i32, i64, i64) #3

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #4

declare noalias i8* @xmalloc(i64) #3

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #4

declare i8* @xrealloc(i8*, i64) #3

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: noreturn
declare void @xalloc_die() #8

; Function Attrs: nounwind
declare i32 @access(i8*, i32) #4

declare zeroext i1 @yesno() #3

declare i8* @get_link_name_at(i8*, i32, i8*) #3

declare i8* @base_name(i8*) #3

declare zeroext i1 @strip_trailing_slashes(i8*) #3

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #6

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #4

declare void @filemodestring(%struct.stat*, i8*) #3

declare i64 @file_blocksize(%struct.stat*) #3

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

declare void @bc_do_insert(%struct.buildcmd_control*, %struct.buildcmd_state*, i8*, i64, i8*, i64, i8*, i64, i32) #3

; Function Attrs: nounwind
declare i32 @unlinkat(i32, i8*, i32) #4

; Function Attrs: nounwind readnone
declare double @difftime(i64, i64) #5

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_atime(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 11
  %5 = bitcast %struct.timespec* %1 to i8*
  %6 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false)
  %7 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %8 = load { i64, i64 }, { i64, i64 }* %7, align 1
  ret { i64, i64 } %8
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @pred_timewindow(i64 %ts.coerce0, i64 %ts.coerce1, %struct.predicate.16* %pred_ptr, i32 %window) #0 {
  %1 = alloca i1, align 1
  %ts = alloca %struct.timespec, align 8
  %2 = alloca %struct.predicate.16*, align 8
  %3 = alloca i32, align 4
  %delta = alloca double, align 8
  %4 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %5 = getelementptr { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  store i64 %ts.coerce0, i64* %5
  %6 = getelementptr { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  store i64 %ts.coerce1, i64* %6
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %2, align 8
  store i32 %window, i32* %3, align 4
  %7 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %8 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %7, i32 0, i32 13
  %9 = bitcast %union.anon* %8 to %struct.time_val*
  %10 = getelementptr inbounds %struct.time_val, %struct.time_val* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %71 [
    i32 0, label %12
    i32 1, label %29
    i32 2, label %46
  ]

; <label>:12                                      ; preds = %0
  %13 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %14 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %13, i32 0, i32 13
  %15 = bitcast %union.anon* %14 to %struct.time_val*
  %16 = getelementptr inbounds %struct.time_val, %struct.time_val* %15, i32 0, i32 2
  %17 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %18 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  %19 = load i64, i64* %18, align 1
  %20 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %21 = load i64, i64* %20, align 1
  %22 = bitcast %struct.timespec* %16 to { i64, i64 }*
  %23 = getelementptr { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0
  %24 = load i64, i64* %23, align 1
  %25 = getelementptr { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1
  %26 = load i64, i64* %25, align 1
  %27 = call i32 @compare_ts(i64 %19, i64 %21, i64 %24, i64 %26)
  %28 = icmp sgt i32 %27, 0
  store i1 %28, i1* %1
  br label %72

; <label>:29                                      ; preds = %0
  %30 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %31 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %30, i32 0, i32 13
  %32 = bitcast %union.anon* %31 to %struct.time_val*
  %33 = getelementptr inbounds %struct.time_val, %struct.time_val* %32, i32 0, i32 2
  %34 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %35 = getelementptr { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 1
  %37 = getelementptr { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  %38 = load i64, i64* %37, align 1
  %39 = bitcast %struct.timespec* %33 to { i64, i64 }*
  %40 = getelementptr { i64, i64 }, { i64, i64 }* %39, i32 0, i32 0
  %41 = load i64, i64* %40, align 1
  %42 = getelementptr { i64, i64 }, { i64, i64 }* %39, i32 0, i32 1
  %43 = load i64, i64* %42, align 1
  %44 = call i32 @compare_ts(i64 %36, i64 %38, i64 %41, i64 %43)
  %45 = icmp slt i32 %44, 0
  store i1 %45, i1* %1
  br label %72

; <label>:46                                      ; preds = %0
  %47 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %48 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %47, i32 0, i32 13
  %49 = bitcast %union.anon* %48 to %struct.time_val*
  %50 = getelementptr inbounds %struct.time_val, %struct.time_val* %49, i32 0, i32 2
  %51 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %52 = getelementptr { i64, i64 }, { i64, i64 }* %51, i32 0, i32 0
  %53 = load i64, i64* %52, align 1
  %54 = getelementptr { i64, i64 }, { i64, i64 }* %51, i32 0, i32 1
  %55 = load i64, i64* %54, align 1
  %56 = bitcast %struct.timespec* %50 to { i64, i64 }*
  %57 = getelementptr { i64, i64 }, { i64, i64 }* %56, i32 0, i32 0
  %58 = load i64, i64* %57, align 1
  %59 = getelementptr { i64, i64 }, { i64, i64 }* %56, i32 0, i32 1
  %60 = load i64, i64* %59, align 1
  %61 = call double @ts_difference(i64 %53, i64 %55, i64 %58, i64 %60)
  store double %61, double* %delta, align 8
  %62 = load double, double* %delta, align 8
  %63 = fcmp ogt double %62, 0.000000e+00
  br i1 %63, label %64, label %69

; <label>:64                                      ; preds = %46
  %65 = load double, double* %delta, align 8
  %66 = load i32, i32* %3, align 4
  %67 = sitofp i32 %66 to double
  %68 = fcmp ole double %65, %67
  br label %69

; <label>:69                                      ; preds = %64, %46
  %70 = phi i1 [ false, %46 ], [ %68, %64 ]
  store i1 %70, i1* %1
  br label %72

; <label>:71                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str759, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 309, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__.pred_timewindow, i32 0, i32 0)) #12
  unreachable

; <label>:72                                      ; preds = %69, %29, %12
  %73 = load i1, i1* %1
  ret i1 %73
}

; Function Attrs: nounwind uwtable
define internal i32 @compare_ts(i64 %ts1.coerce0, i64 %ts1.coerce1, i64 %ts2.coerce0, i64 %ts2.coerce1) #0 {
  %1 = alloca i32, align 4
  %ts1 = alloca %struct.timespec, align 8
  %ts2 = alloca %struct.timespec, align 8
  %diff = alloca double, align 8
  %2 = bitcast %struct.timespec* %ts1 to { i64, i64 }*
  %3 = getelementptr { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %ts1.coerce0, i64* %3
  %4 = getelementptr { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %ts1.coerce1, i64* %4
  %5 = bitcast %struct.timespec* %ts2 to { i64, i64 }*
  %6 = getelementptr { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0
  store i64 %ts2.coerce0, i64* %6
  %7 = getelementptr { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1
  store i64 %ts2.coerce1, i64* %7
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %20

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts2, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %13
  store i32 0, i32* %1
  br label %35

; <label>:20                                      ; preds = %13, %0
  %21 = bitcast %struct.timespec* %ts1 to { i64, i64 }*
  %22 = getelementptr { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0
  %23 = load i64, i64* %22, align 1
  %24 = getelementptr { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1
  %25 = load i64, i64* %24, align 1
  %26 = bitcast %struct.timespec* %ts2 to { i64, i64 }*
  %27 = getelementptr { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 1
  %29 = getelementptr { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 1
  %31 = call double @ts_difference(i64 %23, i64 %25, i64 %28, i64 %30)
  store double %31, double* %diff, align 8
  %32 = load double, double* %diff, align 8
  %33 = fcmp olt double %32, 0.000000e+00
  %34 = select i1 %33, i32 -1, i32 1
  store i32 %34, i32* %1
  br label %35

; <label>:35                                      ; preds = %20, %19
  %36 = load i32, i32* %1
  ret i32 %36
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_ctime(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 13
  %5 = bitcast %struct.timespec* %1 to i8*
  %6 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false)
  %7 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %8 = load { i64, i64 }, { i64, i64 }* %7, align 1
  ret { i64, i64 } %8
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @perform_delete(i32 %flags) #0 {
  %1 = alloca i32, align 4
  store i32 %flags, i32* %1, align 4
  %2 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %3 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %4 = load i32, i32* %1, align 4
  %5 = call i32 @unlinkat(i32 %2, i8* %3, i32 %4) #9
  %6 = icmp eq i32 0, %5
  ret i1 %6
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @new_impl_pred_exec(i32 %dir_fd, i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr, i8* %prefix, i64 %pfxlen) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat*, align 8
  %5 = alloca %struct.predicate.16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %execp = alloca %struct.exec_val*, align 8
  %len = alloca i64, align 8
  %i = alloca i32, align 4
  store i32 %dir_fd, i32* %2, align 4
  store i8* %pathname, i8** %3, align 8
  store %struct.stat* %stat_buf, %struct.stat** %4, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %5, align 8
  store i8* %prefix, i8** %6, align 8
  store i64 %pfxlen, i64* %7, align 8
  %8 = load %struct.predicate.16*, %struct.predicate.16** %5, align 8
  %9 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %8, i32 0, i32 13
  %10 = bitcast %union.anon* %9 to %struct.exec_val*
  store %struct.exec_val* %10, %struct.exec_val** %execp, align 8
  %11 = load i8*, i8** %3, align 8
  %12 = call i64 @strlen(i8* %11) #14
  store i64 %12, i64* %len, align 8
  %13 = load %struct.stat*, %struct.stat** %4, align 8
  %14 = load i32, i32* %2, align 4
  %15 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %16 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %15, i32 0, i32 7
  store i32 %14, i32* %16, align 4
  %17 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %18 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %17, i32 0, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %31

; <label>:21                                      ; preds = %0
  %22 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %23 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %22, i32 0, i32 1
  %24 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %25 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %24, i32 0, i32 2
  %26 = load i8*, i8** %3, align 8
  %27 = load i64, i64* %len, align 8
  %28 = add i64 %27, 1
  %29 = load i8*, i8** %6, align 8
  %30 = load i64, i64* %7, align 8
  call void @bc_push_arg(%struct.buildcmd_control* %23, %struct.buildcmd_state* %25, i8* %26, i64 %28, i8* %29, i64 %30, i32 0)
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 9), align 1
  store i1 true, i1* %1
  br label %76

; <label>:31                                      ; preds = %0
  store i32 0, i32* %i, align 4
  br label %32

; <label>:32                                      ; preds = %62, %31
  %33 = load i32, i32* %i, align 4
  %34 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %35 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %34, i32 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %33, %36
  br i1 %37, label %38, label %65

; <label>:38                                      ; preds = %32
  %39 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %40 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %39, i32 0, i32 1
  %41 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %42 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %41, i32 0, i32 2
  %43 = load i32, i32* %i, align 4
  %44 = sext i32 %43 to i64
  %45 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %46 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %45, i32 0, i32 3
  %47 = load i8**, i8*** %46, align 8
  %48 = getelementptr inbounds i8*, i8** %47, i64 %44
  %49 = load i8*, i8** %48, align 8
  %50 = load i32, i32* %i, align 4
  %51 = sext i32 %50 to i64
  %52 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %53 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %52, i32 0, i32 3
  %54 = load i8**, i8*** %53, align 8
  %55 = getelementptr inbounds i8*, i8** %54, i64 %51
  %56 = load i8*, i8** %55, align 8
  %57 = call i64 @strlen(i8* %56) #14
  %58 = load i8*, i8** %6, align 8
  %59 = load i64, i64* %7, align 8
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %len, align 8
  call void @bc_do_insert(%struct.buildcmd_control* %40, %struct.buildcmd_state* %42, i8* %49, i64 %57, i8* %58, i64 %59, i8* %60, i64 %61, i32 0)
  br label %62

; <label>:62                                      ; preds = %38
  %63 = load i32, i32* %i, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %i, align 4
  br label %32

; <label>:65                                      ; preds = %32
  %66 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %67 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %66, i32 0, i32 1
  %68 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %67, i32 0, i32 8
  %69 = load i32 (%struct.buildcmd_control*, %struct.buildcmd_state*)*, i32 (%struct.buildcmd_control*, %struct.buildcmd_state*)** %68, align 8
  %70 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %71 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %70, i32 0, i32 1
  %72 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %73 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %72, i32 0, i32 2
  %74 = call i32 %69(%struct.buildcmd_control* %71, %struct.buildcmd_state* %73)
  %75 = icmp ne i32 %74, 0
  store i1 %75, i1* %1
  br label %76

; <label>:76                                      ; preds = %65, %21
  %77 = load i1, i1* %1
  ret i1 %77
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  %t = alloca %struct.timespec, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = getelementptr inbounds %struct.timespec, %struct.timespec* %t, i32 0, i32 0
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %struct.timespec, %struct.timespec* %t, i32 0, i32 1
  store i64 -1, i64* %4, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = bitcast %struct.timespec* %1 to i8*
  %7 = bitcast %struct.timespec* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 16, i32 8, i1 false)
  %8 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1
  ret { i64, i64 } %9
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_mtime(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 12
  %5 = bitcast %struct.timespec* %1 to i8*
  %6 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false)
  %7 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %8 = load { i64, i64 }, { i64, i64 }* %7, align 1
  ret { i64, i64 } %8
}

; Function Attrs: nounwind uwtable
define internal i8* @format_date(i64 %ts.coerce0, i64 %ts.coerce1, i32 %kind) #0 {
  %1 = alloca i8*, align 8
  %ts = alloca %struct.timespec, align 8
  %2 = alloca i32, align 4
  %ns_buf = alloca [32 x i8], align 16
  %charsprinted = alloca i32, align 4
  %need_ns_suffix = alloca i32, align 4
  %tm = alloca %struct.tm*, align 8
  %fmt = alloca [6 x i8], align 1
  %s = alloca i8*, align 8
  %w = alloca i64, align 8
  %used = alloca i64, align 8
  %len = alloca i64, align 8
  %remaining = alloca i64, align 8
  %p = alloca i8*, align 8
  %3 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %4 = getelementptr { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %ts.coerce0, i64* %4
  %5 = getelementptr { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %ts.coerce1, i64* %5
  store i32 %kind, i32* %2, align 4
  store i32 0, i32* %charsprinted, align 4
  store i32 0, i32* %need_ns_suffix, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 43
  br i1 %7, label %8, label %11

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds [6 x i8], [6 x i8]* %fmt, i32 0, i32 0
  %10 = call i8* @strcpy(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str3991, i32 0, i32 0)) #9
  store i32 1, i32* %need_ns_suffix, align 4
  br label %21

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds [6 x i8], [6 x i8]* %fmt, i32 0, i64 0
  store i8 37, i8* %12, align 1
  %13 = load i32, i32* %2, align 4
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds [6 x i8], [6 x i8]* %fmt, i32 0, i64 1
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds [6 x i8], [6 x i8]* %fmt, i32 0, i64 2
  store i8 0, i8* %16, align 1
  %17 = load i32, i32* %2, align 4
  switch i32 %17, label %19 [
    i32 83, label %18
    i32 84, label %18
    i32 88, label %18
    i32 64, label %18
  ]

; <label>:18                                      ; preds = %11, %11, %11, %11
  store i32 1, i32* %need_ns_suffix, align 4
  br label %20

; <label>:19                                      ; preds = %11
  store i32 0, i32* %need_ns_suffix, align 4
  br label %20

; <label>:20                                      ; preds = %19, %18
  br label %21

; <label>:21                                      ; preds = %20, %8
  %22 = load i32, i32* %need_ns_suffix, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %35

; <label>:24                                      ; preds = %21
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %ns_buf, i32 0, i32 0
  %26 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %25, i64 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str4092, i32 0, i32 0), i64 %27) #9
  store i32 %28, i32* %charsprinted, align 4
  %29 = load i32, i32* %charsprinted, align 4
  %30 = icmp slt i32 %29, 32
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %24
  br label %34

; <label>:32                                      ; preds = %24
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str4193, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2250, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.format_date, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %34

; <label>:34                                      ; preds = %33, %31
  br label %37

; <label>:35                                      ; preds = %21
  store i32 0, i32* %charsprinted, align 4
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %ns_buf, i32 0, i64 0
  store i8 0, i8* %36, align 1
  br label %37

; <label>:37                                      ; preds = %35, %34
  %38 = load i32, i32* %2, align 4
  %39 = icmp ne i32 %38, 64
  br i1 %39, label %40, label %58

; <label>:40                                      ; preds = %37
  %41 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %42 = call %struct.tm* @localtime(i64* %41) #9
  store %struct.tm* %42, %struct.tm** %tm, align 8
  %43 = load %struct.tm*, %struct.tm** %tm, align 8
  %44 = icmp ne %struct.tm* %43, null
  br i1 %44, label %45, label %57

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds [6 x i8], [6 x i8]* %fmt, i32 0, i32 0
  %47 = load %struct.tm*, %struct.tm** %tm, align 8
  %48 = getelementptr inbounds [32 x i8], [32 x i8]* %ns_buf, i32 0, i32 0
  %49 = load i32, i32* %charsprinted, align 4
  %50 = sext i32 %49 to i64
  %51 = call i8* @do_time_format(i8* %46, %struct.tm* %47, i8* %48, i64 %50)
  store i8* %51, i8** %s, align 8
  %52 = load i8*, i8** %s, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %56

; <label>:54                                      ; preds = %45
  %55 = load i8*, i8** %s, align 8
  store i8* %55, i8** %1
  br label %133

; <label>:56                                      ; preds = %45
  br label %57

; <label>:57                                      ; preds = %56, %40
  br label %58

; <label>:58                                      ; preds = %57, %37
  %59 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %w, align 8
  %61 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp slt i64 %62, 0
  br i1 %63, label %64, label %67

; <label>:64                                      ; preds = %58
  %65 = load i64, i64* %w, align 8
  %66 = sub i64 0, %65
  br label %69

; <label>:67                                      ; preds = %58
  %68 = load i64, i64* %w, align 8
  br label %69

; <label>:69                                      ; preds = %67, %64
  %70 = phi i64 [ %66, %64 ], [ %68, %67 ]
  %71 = call i8* @human_readable(i64 %70, i8* getelementptr inbounds ([791 x i8], [791 x i8]* @format_date.buf, i32 0, i64 1), i32 0, i64 1, i64 1)
  store i8* %71, i8** %p, align 8
  %72 = load i8*, i8** %p, align 8
  %73 = icmp ugt i8* %72, getelementptr inbounds ([791 x i8], [791 x i8]* @format_date.buf, i32 0, i32 0)
  br i1 %73, label %74, label %75

; <label>:74                                      ; preds = %69
  br label %77

; <label>:75                                      ; preds = %69
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str42, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2282, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.format_date, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %77

; <label>:77                                      ; preds = %76, %74
  %78 = load i8*, i8** %p, align 8
  %79 = icmp ult i8* %78, getelementptr inbounds (i8, i8* getelementptr inbounds ([791 x i8], [791 x i8]* @format_date.buf, i32 0, i32 0), i64 791)
  br i1 %79, label %80, label %81

; <label>:80                                      ; preds = %77
  br label %83

; <label>:81                                      ; preds = %77
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str43, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2283, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.format_date, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %83

; <label>:83                                      ; preds = %82, %80
  %84 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp slt i64 %85, 0
  br i1 %86, label %87, label %90

; <label>:87                                      ; preds = %83
  %88 = load i8*, i8** %p, align 8
  %89 = getelementptr inbounds i8, i8* %88, i32 -1
  store i8* %89, i8** %p, align 8
  store i8 45, i8* %89, align 1
  br label %90

; <label>:90                                      ; preds = %87, %83
  %91 = load i32, i32* %need_ns_suffix, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %131

; <label>:93                                      ; preds = %90
  %94 = load i8*, i8** %p, align 8
  %95 = call i64 @strlen(i8* %94) #14
  store i64 %95, i64* %len, align 8
  %96 = load i8*, i8** %p, align 8
  %97 = ptrtoint i8* %96 to i64
  %98 = sub i64 %97, ptrtoint ([791 x i8]* @format_date.buf to i64)
  %99 = load i64, i64* %len, align 8
  %100 = add i64 %98, %99
  store i64 %100, i64* %used, align 8
  %101 = load i64, i64* %used, align 8
  %102 = icmp ugt i64 791, %101
  br i1 %102, label %103, label %104

; <label>:103                                     ; preds = %93
  br label %106

; <label>:104                                     ; preds = %93
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2296, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.format_date, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %106

; <label>:106                                     ; preds = %105, %103
  %107 = load i64, i64* %used, align 8
  %108 = sub i64 791, %107
  %109 = sub i64 %108, 1
  store i64 %109, i64* %remaining, align 8
  %110 = getelementptr inbounds [32 x i8], [32 x i8]* %ns_buf, i32 0, i32 0
  %111 = call i64 @strlen(i8* %110) #14
  %112 = load i64, i64* %remaining, align 8
  %113 = icmp uge i64 %111, %112
  br i1 %113, label %114, label %119

; <label>:114                                     ; preds = %106
  %115 = load i32, i32* %charsprinted, align 4
  %116 = sext i32 %115 to i64
  %117 = load i64, i64* %remaining, align 8
  %118 = getelementptr inbounds [32 x i8], [32 x i8]* %ns_buf, i32 0, i32 0
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str45, i32 0, i32 0), i64 %116, i64 %117, i8* %118)
  br label %119

; <label>:119                                     ; preds = %114, %106
  %120 = getelementptr inbounds [32 x i8], [32 x i8]* %ns_buf, i32 0, i32 0
  %121 = call i64 @strlen(i8* %120) #14
  %122 = load i64, i64* %remaining, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %124, label %125

; <label>:124                                     ; preds = %119
  br label %127

; <label>:125                                     ; preds = %119
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str46, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2305, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__.format_date, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %127

; <label>:127                                     ; preds = %126, %124
  %128 = load i8*, i8** %p, align 8
  %129 = getelementptr inbounds [32 x i8], [32 x i8]* %ns_buf, i32 0, i32 0
  %130 = call i8* @strcat(i8* %128, i8* %129) #9
  br label %131

; <label>:131                                     ; preds = %127, %90
  %132 = load i8*, i8** %p, align 8
  store i8* %132, i8** %1
  br label %133

; <label>:133                                     ; preds = %131, %54
  %134 = load i8*, i8** %1
  ret i8* %134
}

; Function Attrs: nounwind uwtable
define internal void @checked_fprintf(%struct.format_val* %dest, i8* %fmt, ...) #0 {
  %1 = alloca %struct.format_val*, align 8
  %2 = alloca i8*, align 8
  %rv = alloca i32, align 4
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.format_val* %dest, %struct.format_val** %1, align 8
  store i8* %fmt, i8** %2, align 8
  %3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0
  %4 = bitcast %struct.__va_list_tag* %3 to i8*
  call void @llvm.va_start(i8* %4)
  %5 = load %struct.format_val*, %struct.format_val** %1, align 8
  %6 = getelementptr inbounds %struct.format_val, %struct.format_val* %5, i32 0, i32 1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0
  %10 = call i32 @vfprintf(%struct._IO_FILE* %7, i8* %8, %struct.__va_list_tag* %9)
  store i32 %10, i32* %rv, align 4
  %11 = load i32, i32* %rv, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %0
  %14 = load %struct.format_val*, %struct.format_val** %1, align 8
  %15 = getelementptr inbounds %struct.format_val, %struct.format_val* %14, i32 0, i32 2
  %16 = load i8*, i8** %15, align 8
  call void @nonfatal_file_error(i8* %16)
  br label %17

; <label>:17                                      ; preds = %13, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_fprintf(%struct.format_val* %dest, %struct.segment* %segment, i8* %pathname, %struct.stat* %stat_buf) #0 {
  %1 = alloca %struct.format_val*, align 8
  %2 = alloca %struct.segment*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat*, align 8
  %hbuf = alloca [652 x i8], align 16
  %cp = alloca i8*, align 8
  %5 = alloca %struct.timespec, align 8
  %6 = alloca %struct.timespec, align 8
  %base = alloca i8*, align 8
  %g = alloca %struct.group*, align 8
  %s = alloca i8*, align 8
  %s1 = alloca i8*, align 8
  %linkname = alloca i8*, align 8
  %modestring = alloca [16 x i8], align 16
  %m = alloca i32, align 4
  %traditional_numbering_scheme = alloca i8, align 1
  %7 = alloca %struct.timespec, align 8
  %p = alloca %struct.passwd*, align 8
  %sbuf = alloca %struct.stat, align 8
  store %struct.format_val* %dest, %struct.format_val** %1, align 8
  store %struct.segment* %segment, %struct.segment** %2, align 8
  store i8* %pathname, i8** %3, align 8
  store %struct.stat* %stat_buf, %struct.stat** %4, align 8
  %8 = load %struct.segment*, %struct.segment** %2, align 8
  %9 = getelementptr inbounds %struct.segment, %struct.segment* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %542 [
    i32 0, label %11
    i32 1, label %20
    i32 2, label %30
  ]

; <label>:11                                      ; preds = %0
  %12 = load %struct.segment*, %struct.segment** %2, align 8
  %13 = getelementptr inbounds %struct.segment, %struct.segment* %12, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = load %struct.segment*, %struct.segment** %2, align 8
  %16 = getelementptr inbounds %struct.segment, %struct.segment* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = load %struct.format_val*, %struct.format_val** %1, align 8
  call void @checked_fwrite(i8* %14, i64 1, i64 %18, %struct.format_val* %19)
  br label %542

; <label>:20                                      ; preds = %0
  %21 = load %struct.segment*, %struct.segment** %2, align 8
  %22 = getelementptr inbounds %struct.segment, %struct.segment* %21, i32 0, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = load %struct.segment*, %struct.segment** %2, align 8
  %25 = getelementptr inbounds %struct.segment, %struct.segment* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = load %struct.format_val*, %struct.format_val** %1, align 8
  call void @checked_fwrite(i8* %23, i64 1, i64 %27, %struct.format_val* %28)
  %29 = load %struct.format_val*, %struct.format_val** %1, align 8
  call void @checked_fflush(%struct.format_val* %29)
  br label %542

; <label>:30                                      ; preds = %0
  %31 = load %struct.segment*, %struct.segment** %2, align 8
  %32 = getelementptr inbounds %struct.segment, %struct.segment* %31, i32 0, i32 1
  %33 = getelementptr inbounds [2 x i8], [2 x i8]* %32, i32 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  switch i32 %35, label %541 [
    i32 97, label %36
    i32 98, label %54
    i32 99, label %79
    i32 100, label %97
    i32 68, label %103
    i32 102, label %113
    i32 70, label %122
    i32 103, label %130
    i32 71, label %155
    i32 104, label %166
    i32 72, label %193
    i32 105, label %212
    i32 107, label %222
    i32 108, label %247
    i32 77, label %278
    i32 109, label %287
    i32 110, label %362
    i32 112, label %372
    i32 80, label %378
    i32 115, label %401
    i32 83, label %411
    i32 116, label %418
    i32 117, label %436
    i32 85, label %460
    i32 89, label %471
    i32 121, label %531
  ]

; <label>:36                                      ; preds = %30
  %37 = load %struct.format_val*, %struct.format_val** %1, align 8
  %38 = load %struct.segment*, %struct.segment** %2, align 8
  %39 = getelementptr inbounds %struct.segment, %struct.segment* %38, i32 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = load %struct.stat*, %struct.stat** %4, align 8
  %42 = call { i64, i64 } @get_stat_atime(%struct.stat* %41)
  %43 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %44 = getelementptr { i64, i64 }, { i64, i64 }* %43, i32 0, i32 0
  %45 = extractvalue { i64, i64 } %42, 0
  store i64 %45, i64* %44, align 1
  %46 = getelementptr { i64, i64 }, { i64, i64 }* %43, i32 0, i32 1
  %47 = extractvalue { i64, i64 } %42, 1
  store i64 %47, i64* %46, align 1
  %48 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %49 = getelementptr { i64, i64 }, { i64, i64 }* %48, i32 0, i32 0
  %50 = load i64, i64* %49, align 1
  %51 = getelementptr { i64, i64 }, { i64, i64 }* %48, i32 0, i32 1
  %52 = load i64, i64* %51, align 1
  %53 = call i8* @ctime_format(i64 %50, i64 %52)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %37, i8* %40, i8* %53)
  br label %541

; <label>:54                                      ; preds = %30
  %55 = load %struct.format_val*, %struct.format_val** %1, align 8
  %56 = load %struct.segment*, %struct.segment** %2, align 8
  %57 = getelementptr inbounds %struct.segment, %struct.segment* %56, i32 0, i32 2
  %58 = load i8*, i8** %57, align 8
  %59 = load %struct.stat*, %struct.stat** %4, align 8
  %60 = getelementptr inbounds %struct.stat, %struct.stat* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 61440
  %63 = icmp eq i32 %62, 32768
  br i1 %63, label %70, label %64

; <label>:64                                      ; preds = %54
  %65 = load %struct.stat*, %struct.stat** %4, align 8
  %66 = getelementptr inbounds %struct.stat, %struct.stat* %65, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 61440
  %69 = icmp eq i32 %68, 16384
  br i1 %69, label %70, label %74

; <label>:70                                      ; preds = %64, %54
  %71 = load %struct.stat*, %struct.stat** %4, align 8
  %72 = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 10
  %73 = load i64, i64* %72, align 8
  br label %75

; <label>:74                                      ; preds = %64
  br label %75

; <label>:75                                      ; preds = %74, %70
  %76 = phi i64 [ %73, %70 ], [ 0, %74 ]
  %77 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %78 = call i8* @human_readable(i64 %76, i8* %77, i32 0, i64 512, i64 512)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %55, i8* %58, i8* %78)
  br label %541

; <label>:79                                      ; preds = %30
  %80 = load %struct.format_val*, %struct.format_val** %1, align 8
  %81 = load %struct.segment*, %struct.segment** %2, align 8
  %82 = getelementptr inbounds %struct.segment, %struct.segment* %81, i32 0, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = load %struct.stat*, %struct.stat** %4, align 8
  %85 = call { i64, i64 } @get_stat_ctime(%struct.stat* %84)
  %86 = bitcast %struct.timespec* %6 to { i64, i64 }*
  %87 = getelementptr { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0
  %88 = extractvalue { i64, i64 } %85, 0
  store i64 %88, i64* %87, align 1
  %89 = getelementptr { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1
  %90 = extractvalue { i64, i64 } %85, 1
  store i64 %90, i64* %89, align 1
  %91 = bitcast %struct.timespec* %6 to { i64, i64 }*
  %92 = getelementptr { i64, i64 }, { i64, i64 }* %91, i32 0, i32 0
  %93 = load i64, i64* %92, align 1
  %94 = getelementptr { i64, i64 }, { i64, i64 }* %91, i32 0, i32 1
  %95 = load i64, i64* %94, align 1
  %96 = call i8* @ctime_format(i64 %93, i64 %95)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %80, i8* %83, i8* %96)
  br label %541

; <label>:97                                      ; preds = %30
  %98 = load %struct.format_val*, %struct.format_val** %1, align 8
  %99 = load %struct.segment*, %struct.segment** %2, align 8
  %100 = getelementptr inbounds %struct.segment, %struct.segment* %99, i32 0, i32 2
  %101 = load i8*, i8** %100, align 8
  %102 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 0), align 4
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %98, i8* %101, i32 %102)
  br label %541

; <label>:103                                     ; preds = %30
  %104 = load %struct.format_val*, %struct.format_val** %1, align 8
  %105 = load %struct.segment*, %struct.segment** %2, align 8
  %106 = getelementptr inbounds %struct.segment, %struct.segment* %105, i32 0, i32 2
  %107 = load i8*, i8** %106, align 8
  %108 = load %struct.stat*, %struct.stat** %4, align 8
  %109 = getelementptr inbounds %struct.stat, %struct.stat* %108, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %112 = call i8* @human_readable(i64 %110, i8* %111, i32 0, i64 1, i64 1)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %104, i8* %107, i8* %112)
  br label %541

; <label>:113                                     ; preds = %30
  %114 = load i8*, i8** %3, align 8
  %115 = call i8* @base_name(i8* %114)
  store i8* %115, i8** %base, align 8
  %116 = load %struct.format_val*, %struct.format_val** %1, align 8
  %117 = load %struct.segment*, %struct.segment** %2, align 8
  %118 = getelementptr inbounds %struct.segment, %struct.segment* %117, i32 0, i32 2
  %119 = load i8*, i8** %118, align 8
  %120 = load i8*, i8** %base, align 8
  call void @checked_print_quoted(%struct.format_val* %116, i8* %119, i8* %120)
  %121 = load i8*, i8** %base, align 8
  call void @free(i8* %121) #9
  br label %541

; <label>:122                                     ; preds = %30
  %123 = load %struct.format_val*, %struct.format_val** %1, align 8
  %124 = load %struct.segment*, %struct.segment** %2, align 8
  %125 = getelementptr inbounds %struct.segment, %struct.segment* %124, i32 0, i32 2
  %126 = load i8*, i8** %125, align 8
  %127 = load %struct.stat*, %struct.stat** %4, align 8
  %128 = load i8*, i8** %3, align 8
  %129 = call i8* @filesystem_type(%struct.stat* %127, i8* %128)
  call void @checked_print_quoted(%struct.format_val* %123, i8* %126, i8* %129)
  br label %541

; <label>:130                                     ; preds = %30
  %131 = load %struct.stat*, %struct.stat** %4, align 8
  %132 = getelementptr inbounds %struct.stat, %struct.stat* %131, i32 0, i32 5
  %133 = load i32, i32* %132, align 4
  %134 = call %struct.group* @getgrgid(i32 %133)
  store %struct.group* %134, %struct.group** %g, align 8
  %135 = load %struct.group*, %struct.group** %g, align 8
  %136 = icmp ne %struct.group* %135, null
  br i1 %136, label %137, label %153

; <label>:137                                     ; preds = %130
  %138 = load %struct.segment*, %struct.segment** %2, align 8
  %139 = getelementptr inbounds %struct.segment, %struct.segment* %138, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = load %struct.segment*, %struct.segment** %2, align 8
  %143 = getelementptr inbounds %struct.segment, %struct.segment* %142, i32 0, i32 2
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 %141
  store i8 115, i8* %145, align 1
  %146 = load %struct.format_val*, %struct.format_val** %1, align 8
  %147 = load %struct.segment*, %struct.segment** %2, align 8
  %148 = getelementptr inbounds %struct.segment, %struct.segment* %147, i32 0, i32 2
  %149 = load i8*, i8** %148, align 8
  %150 = load %struct.group*, %struct.group** %g, align 8
  %151 = getelementptr inbounds %struct.group, %struct.group* %150, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %146, i8* %149, i8* %152)
  br label %541

; <label>:153                                     ; preds = %130
  br label %154

; <label>:154                                     ; preds = %153
  br label %155

; <label>:155                                     ; preds = %154, %30
  %156 = load %struct.format_val*, %struct.format_val** %1, align 8
  %157 = load %struct.segment*, %struct.segment** %2, align 8
  %158 = getelementptr inbounds %struct.segment, %struct.segment* %157, i32 0, i32 2
  %159 = load i8*, i8** %158, align 8
  %160 = load %struct.stat*, %struct.stat** %4, align 8
  %161 = getelementptr inbounds %struct.stat, %struct.stat* %160, i32 0, i32 5
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %165 = call i8* @human_readable(i64 %163, i8* %164, i32 0, i64 1, i64 1)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %156, i8* %159, i8* %165)
  br label %541

; <label>:166                                     ; preds = %30
  %167 = load i8*, i8** %3, align 8
  %168 = call i8* @strrchr(i8* %167, i32 47) #14
  store i8* %168, i8** %cp, align 8
  %169 = load i8*, i8** %cp, align 8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %171, label %176

; <label>:171                                     ; preds = %166
  %172 = load %struct.format_val*, %struct.format_val** %1, align 8
  %173 = load %struct.segment*, %struct.segment** %2, align 8
  %174 = getelementptr inbounds %struct.segment, %struct.segment* %173, i32 0, i32 2
  %175 = load i8*, i8** %174, align 8
  call void @checked_print_quoted(%struct.format_val* %172, i8* %175, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str254, i32 0, i32 0))
  br label %192

; <label>:176                                     ; preds = %166
  %177 = load i8*, i8** %3, align 8
  %178 = call noalias i8* @strdup(i8* %177) #9
  store i8* %178, i8** %s, align 8
  %179 = load i8*, i8** %cp, align 8
  %180 = load i8*, i8** %3, align 8
  %181 = ptrtoint i8* %179 to i64
  %182 = ptrtoint i8* %180 to i64
  %183 = sub i64 %181, %182
  %184 = load i8*, i8** %s, align 8
  %185 = getelementptr inbounds i8, i8* %184, i64 %183
  store i8 0, i8* %185, align 1
  %186 = load %struct.format_val*, %struct.format_val** %1, align 8
  %187 = load %struct.segment*, %struct.segment** %2, align 8
  %188 = getelementptr inbounds %struct.segment, %struct.segment* %187, i32 0, i32 2
  %189 = load i8*, i8** %188, align 8
  %190 = load i8*, i8** %s, align 8
  call void @checked_print_quoted(%struct.format_val* %186, i8* %189, i8* %190)
  %191 = load i8*, i8** %s, align 8
  call void @free(i8* %191) #9
  br label %192

; <label>:192                                     ; preds = %176, %171
  br label %541

; <label>:193                                     ; preds = %30
  %194 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 6), align 4
  %195 = add nsw i32 %194, 1
  %196 = sext i32 %195 to i64
  %197 = call noalias i8* @xmalloc(i64 %196)
  store i8* %197, i8** %s1, align 8
  %198 = load i8*, i8** %s1, align 8
  %199 = load i8*, i8** %3, align 8
  %200 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 6), align 4
  %201 = sext i32 %200 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %198, i8* %199, i64 %201, i32 1, i1 false)
  %202 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 6), align 4
  %203 = sext i32 %202 to i64
  %204 = load i8*, i8** %s1, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 %203
  store i8 0, i8* %205, align 1
  %206 = load %struct.format_val*, %struct.format_val** %1, align 8
  %207 = load %struct.segment*, %struct.segment** %2, align 8
  %208 = getelementptr inbounds %struct.segment, %struct.segment* %207, i32 0, i32 2
  %209 = load i8*, i8** %208, align 8
  %210 = load i8*, i8** %s1, align 8
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %206, i8* %209, i8* %210)
  %211 = load i8*, i8** %s1, align 8
  call void @free(i8* %211) #9
  br label %541

; <label>:212                                     ; preds = %30
  %213 = load %struct.format_val*, %struct.format_val** %1, align 8
  %214 = load %struct.segment*, %struct.segment** %2, align 8
  %215 = getelementptr inbounds %struct.segment, %struct.segment* %214, i32 0, i32 2
  %216 = load i8*, i8** %215, align 8
  %217 = load %struct.stat*, %struct.stat** %4, align 8
  %218 = getelementptr inbounds %struct.stat, %struct.stat* %217, i32 0, i32 1
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %221 = call i8* @human_readable(i64 %219, i8* %220, i32 0, i64 1, i64 1)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %213, i8* %216, i8* %221)
  br label %541

; <label>:222                                     ; preds = %30
  %223 = load %struct.format_val*, %struct.format_val** %1, align 8
  %224 = load %struct.segment*, %struct.segment** %2, align 8
  %225 = getelementptr inbounds %struct.segment, %struct.segment* %224, i32 0, i32 2
  %226 = load i8*, i8** %225, align 8
  %227 = load %struct.stat*, %struct.stat** %4, align 8
  %228 = getelementptr inbounds %struct.stat, %struct.stat* %227, i32 0, i32 3
  %229 = load i32, i32* %228, align 4
  %230 = and i32 %229, 61440
  %231 = icmp eq i32 %230, 32768
  br i1 %231, label %238, label %232

; <label>:232                                     ; preds = %222
  %233 = load %struct.stat*, %struct.stat** %4, align 8
  %234 = getelementptr inbounds %struct.stat, %struct.stat* %233, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, 61440
  %237 = icmp eq i32 %236, 16384
  br i1 %237, label %238, label %242

; <label>:238                                     ; preds = %232, %222
  %239 = load %struct.stat*, %struct.stat** %4, align 8
  %240 = getelementptr inbounds %struct.stat, %struct.stat* %239, i32 0, i32 10
  %241 = load i64, i64* %240, align 8
  br label %243

; <label>:242                                     ; preds = %232
  br label %243

; <label>:243                                     ; preds = %242, %238
  %244 = phi i64 [ %241, %238 ], [ 0, %242 ]
  %245 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %246 = call i8* @human_readable(i64 %244, i8* %245, i32 0, i64 512, i64 1024)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %223, i8* %226, i8* %246)
  br label %541

; <label>:247                                     ; preds = %30
  store i8* null, i8** %linkname, align 8
  %248 = load %struct.stat*, %struct.stat** %4, align 8
  %249 = getelementptr inbounds %struct.stat, %struct.stat* %248, i32 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = and i32 %250, 61440
  %252 = icmp eq i32 %251, 40960
  br i1 %252, label %253, label %262

; <label>:253                                     ; preds = %247
  %254 = load i8*, i8** %3, align 8
  %255 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %256 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %257 = call i8* @get_link_name_at(i8* %254, i32 %255, i8* %256)
  store i8* %257, i8** %linkname, align 8
  %258 = load i8*, i8** %linkname, align 8
  %259 = icmp eq i8* %258, null
  br i1 %259, label %260, label %261

; <label>:260                                     ; preds = %253
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  br label %261

; <label>:261                                     ; preds = %260, %253
  br label %262

; <label>:262                                     ; preds = %261, %247
  %263 = load i8*, i8** %linkname, align 8
  %264 = icmp ne i8* %263, null
  br i1 %264, label %265, label %272

; <label>:265                                     ; preds = %262
  %266 = load %struct.format_val*, %struct.format_val** %1, align 8
  %267 = load %struct.segment*, %struct.segment** %2, align 8
  %268 = getelementptr inbounds %struct.segment, %struct.segment* %267, i32 0, i32 2
  %269 = load i8*, i8** %268, align 8
  %270 = load i8*, i8** %linkname, align 8
  call void @checked_print_quoted(%struct.format_val* %266, i8* %269, i8* %270)
  %271 = load i8*, i8** %linkname, align 8
  call void @free(i8* %271) #9
  br label %277

; <label>:272                                     ; preds = %262
  %273 = load %struct.format_val*, %struct.format_val** %1, align 8
  %274 = load %struct.segment*, %struct.segment** %2, align 8
  %275 = getelementptr inbounds %struct.segment, %struct.segment* %274, i32 0, i32 2
  %276 = load i8*, i8** %275, align 8
  call void @checked_print_quoted(%struct.format_val* %273, i8* %276, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str860, i32 0, i32 0))
  br label %277

; <label>:277                                     ; preds = %272, %265
  br label %541

; <label>:278                                     ; preds = %30
  %279 = load %struct.stat*, %struct.stat** %4, align 8
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %modestring, i32 0, i32 0
  call void @filemodestring(%struct.stat* %279, i8* %280)
  %281 = getelementptr inbounds [16 x i8], [16 x i8]* %modestring, i32 0, i64 10
  store i8 0, i8* %281, align 1
  %282 = load %struct.format_val*, %struct.format_val** %1, align 8
  %283 = load %struct.segment*, %struct.segment** %2, align 8
  %284 = getelementptr inbounds %struct.segment, %struct.segment* %283, i32 0, i32 2
  %285 = load i8*, i8** %284, align 8
  %286 = getelementptr inbounds [16 x i8], [16 x i8]* %modestring, i32 0, i32 0
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %282, i8* %285, i8* %286)
  br label %541

; <label>:287                                     ; preds = %30
  %288 = load %struct.stat*, %struct.stat** %4, align 8
  %289 = getelementptr inbounds %struct.stat, %struct.stat* %288, i32 0, i32 3
  %290 = load i32, i32* %289, align 4
  store i32 %290, i32* %m, align 4
  store i8 1, i8* %traditional_numbering_scheme, align 1
  %291 = load %struct.format_val*, %struct.format_val** %1, align 8
  %292 = load %struct.segment*, %struct.segment** %2, align 8
  %293 = getelementptr inbounds %struct.segment, %struct.segment* %292, i32 0, i32 2
  %294 = load i8*, i8** %293, align 8
  %295 = load i8, i8* %traditional_numbering_scheme, align 1
  %296 = trunc i8 %295 to i1
  br i1 %296, label %297, label %300

; <label>:297                                     ; preds = %287
  %298 = load i32, i32* %m, align 4
  %299 = and i32 %298, 4095
  br label %360

; <label>:300                                     ; preds = %287
  %301 = load i32, i32* %m, align 4
  %302 = and i32 %301, 2048
  %303 = icmp ne i32 %302, 0
  %304 = select i1 %303, i32 2048, i32 0
  %305 = load i32, i32* %m, align 4
  %306 = and i32 %305, 1024
  %307 = icmp ne i32 %306, 0
  %308 = select i1 %307, i32 1024, i32 0
  %309 = or i32 %304, %308
  %310 = load i32, i32* %m, align 4
  %311 = and i32 %310, 512
  %312 = icmp ne i32 %311, 0
  %313 = select i1 %312, i32 512, i32 0
  %314 = or i32 %309, %313
  %315 = load i32, i32* %m, align 4
  %316 = and i32 %315, 256
  %317 = icmp ne i32 %316, 0
  %318 = select i1 %317, i32 256, i32 0
  %319 = or i32 %314, %318
  %320 = load i32, i32* %m, align 4
  %321 = and i32 %320, 128
  %322 = icmp ne i32 %321, 0
  %323 = select i1 %322, i32 128, i32 0
  %324 = or i32 %319, %323
  %325 = load i32, i32* %m, align 4
  %326 = and i32 %325, 64
  %327 = icmp ne i32 %326, 0
  %328 = select i1 %327, i32 64, i32 0
  %329 = or i32 %324, %328
  %330 = load i32, i32* %m, align 4
  %331 = and i32 %330, 32
  %332 = icmp ne i32 %331, 0
  %333 = select i1 %332, i32 32, i32 0
  %334 = or i32 %329, %333
  %335 = load i32, i32* %m, align 4
  %336 = and i32 %335, 16
  %337 = icmp ne i32 %336, 0
  %338 = select i1 %337, i32 16, i32 0
  %339 = or i32 %334, %338
  %340 = load i32, i32* %m, align 4
  %341 = and i32 %340, 8
  %342 = icmp ne i32 %341, 0
  %343 = select i1 %342, i32 8, i32 0
  %344 = or i32 %339, %343
  %345 = load i32, i32* %m, align 4
  %346 = and i32 %345, 4
  %347 = icmp ne i32 %346, 0
  %348 = select i1 %347, i32 4, i32 0
  %349 = or i32 %344, %348
  %350 = load i32, i32* %m, align 4
  %351 = and i32 %350, 2
  %352 = icmp ne i32 %351, 0
  %353 = select i1 %352, i32 2, i32 0
  %354 = or i32 %349, %353
  %355 = load i32, i32* %m, align 4
  %356 = and i32 %355, 1
  %357 = icmp ne i32 %356, 0
  %358 = select i1 %357, i32 1, i32 0
  %359 = or i32 %354, %358
  br label %360

; <label>:360                                     ; preds = %300, %297
  %361 = phi i32 [ %299, %297 ], [ %359, %300 ]
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %291, i8* %294, i32 %361)
  br label %541

; <label>:362                                     ; preds = %30
  %363 = load %struct.format_val*, %struct.format_val** %1, align 8
  %364 = load %struct.segment*, %struct.segment** %2, align 8
  %365 = getelementptr inbounds %struct.segment, %struct.segment* %364, i32 0, i32 2
  %366 = load i8*, i8** %365, align 8
  %367 = load %struct.stat*, %struct.stat** %4, align 8
  %368 = getelementptr inbounds %struct.stat, %struct.stat* %367, i32 0, i32 2
  %369 = load i64, i64* %368, align 8
  %370 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %371 = call i8* @human_readable(i64 %369, i8* %370, i32 0, i64 1, i64 1)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %363, i8* %366, i8* %371)
  br label %541

; <label>:372                                     ; preds = %30
  %373 = load %struct.format_val*, %struct.format_val** %1, align 8
  %374 = load %struct.segment*, %struct.segment** %2, align 8
  %375 = getelementptr inbounds %struct.segment, %struct.segment* %374, i32 0, i32 2
  %376 = load i8*, i8** %375, align 8
  %377 = load i8*, i8** %3, align 8
  call void @checked_print_quoted(%struct.format_val* %373, i8* %376, i8* %377)
  br label %541

; <label>:378                                     ; preds = %30
  %379 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 0), align 4
  %380 = icmp sgt i32 %379, 0
  br i1 %380, label %381, label %394

; <label>:381                                     ; preds = %378
  %382 = load i8*, i8** %3, align 8
  %383 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 6), align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds i8, i8* %382, i64 %384
  store i8* %385, i8** %cp, align 8
  %386 = load i8*, i8** %cp, align 8
  %387 = load i8, i8* %386, align 1
  %388 = sext i8 %387 to i32
  %389 = icmp eq i32 %388, 47
  br i1 %389, label %390, label %393

; <label>:390                                     ; preds = %381
  %391 = load i8*, i8** %cp, align 8
  %392 = getelementptr inbounds i8, i8* %391, i32 1
  store i8* %392, i8** %cp, align 8
  br label %393

; <label>:393                                     ; preds = %390, %381
  br label %395

; <label>:394                                     ; preds = %378
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str860, i32 0, i32 0), i8** %cp, align 8
  br label %395

; <label>:395                                     ; preds = %394, %393
  %396 = load %struct.format_val*, %struct.format_val** %1, align 8
  %397 = load %struct.segment*, %struct.segment** %2, align 8
  %398 = getelementptr inbounds %struct.segment, %struct.segment* %397, i32 0, i32 2
  %399 = load i8*, i8** %398, align 8
  %400 = load i8*, i8** %cp, align 8
  call void @checked_print_quoted(%struct.format_val* %396, i8* %399, i8* %400)
  br label %541

; <label>:401                                     ; preds = %30
  %402 = load %struct.format_val*, %struct.format_val** %1, align 8
  %403 = load %struct.segment*, %struct.segment** %2, align 8
  %404 = getelementptr inbounds %struct.segment, %struct.segment* %403, i32 0, i32 2
  %405 = load i8*, i8** %404, align 8
  %406 = load %struct.stat*, %struct.stat** %4, align 8
  %407 = getelementptr inbounds %struct.stat, %struct.stat* %406, i32 0, i32 8
  %408 = load i64, i64* %407, align 8
  %409 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %410 = call i8* @human_readable(i64 %408, i8* %409, i32 0, i64 1, i64 1)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %402, i8* %405, i8* %410)
  br label %541

; <label>:411                                     ; preds = %30
  %412 = load %struct.format_val*, %struct.format_val** %1, align 8
  %413 = load %struct.segment*, %struct.segment** %2, align 8
  %414 = getelementptr inbounds %struct.segment, %struct.segment* %413, i32 0, i32 2
  %415 = load i8*, i8** %414, align 8
  %416 = load %struct.stat*, %struct.stat** %4, align 8
  %417 = call double @file_sparseness(%struct.stat* %416)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %412, i8* %415, double %417)
  br label %541

; <label>:418                                     ; preds = %30
  %419 = load %struct.format_val*, %struct.format_val** %1, align 8
  %420 = load %struct.segment*, %struct.segment** %2, align 8
  %421 = getelementptr inbounds %struct.segment, %struct.segment* %420, i32 0, i32 2
  %422 = load i8*, i8** %421, align 8
  %423 = load %struct.stat*, %struct.stat** %4, align 8
  %424 = call { i64, i64 } @get_stat_mtime(%struct.stat* %423)
  %425 = bitcast %struct.timespec* %7 to { i64, i64 }*
  %426 = getelementptr { i64, i64 }, { i64, i64 }* %425, i32 0, i32 0
  %427 = extractvalue { i64, i64 } %424, 0
  store i64 %427, i64* %426, align 1
  %428 = getelementptr { i64, i64 }, { i64, i64 }* %425, i32 0, i32 1
  %429 = extractvalue { i64, i64 } %424, 1
  store i64 %429, i64* %428, align 1
  %430 = bitcast %struct.timespec* %7 to { i64, i64 }*
  %431 = getelementptr { i64, i64 }, { i64, i64 }* %430, i32 0, i32 0
  %432 = load i64, i64* %431, align 1
  %433 = getelementptr { i64, i64 }, { i64, i64 }* %430, i32 0, i32 1
  %434 = load i64, i64* %433, align 1
  %435 = call i8* @ctime_format(i64 %432, i64 %434)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %419, i8* %422, i8* %435)
  br label %541

; <label>:436                                     ; preds = %30
  %437 = load %struct.stat*, %struct.stat** %4, align 8
  %438 = getelementptr inbounds %struct.stat, %struct.stat* %437, i32 0, i32 4
  %439 = load i32, i32* %438, align 4
  %440 = call %struct.passwd* @getpwuid(i32 %439)
  store %struct.passwd* %440, %struct.passwd** %p, align 8
  %441 = load %struct.passwd*, %struct.passwd** %p, align 8
  %442 = icmp ne %struct.passwd* %441, null
  br i1 %442, label %443, label %459

; <label>:443                                     ; preds = %436
  %444 = load %struct.segment*, %struct.segment** %2, align 8
  %445 = getelementptr inbounds %struct.segment, %struct.segment* %444, i32 0, i32 3
  %446 = load i32, i32* %445, align 4
  %447 = sext i32 %446 to i64
  %448 = load %struct.segment*, %struct.segment** %2, align 8
  %449 = getelementptr inbounds %struct.segment, %struct.segment* %448, i32 0, i32 2
  %450 = load i8*, i8** %449, align 8
  %451 = getelementptr inbounds i8, i8* %450, i64 %447
  store i8 115, i8* %451, align 1
  %452 = load %struct.format_val*, %struct.format_val** %1, align 8
  %453 = load %struct.segment*, %struct.segment** %2, align 8
  %454 = getelementptr inbounds %struct.segment, %struct.segment* %453, i32 0, i32 2
  %455 = load i8*, i8** %454, align 8
  %456 = load %struct.passwd*, %struct.passwd** %p, align 8
  %457 = getelementptr inbounds %struct.passwd, %struct.passwd* %456, i32 0, i32 0
  %458 = load i8*, i8** %457, align 8
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %452, i8* %455, i8* %458)
  br label %541

; <label>:459                                     ; preds = %436
  br label %460

; <label>:460                                     ; preds = %459, %30
  %461 = load %struct.format_val*, %struct.format_val** %1, align 8
  %462 = load %struct.segment*, %struct.segment** %2, align 8
  %463 = getelementptr inbounds %struct.segment, %struct.segment* %462, i32 0, i32 2
  %464 = load i8*, i8** %463, align 8
  %465 = load %struct.stat*, %struct.stat** %4, align 8
  %466 = getelementptr inbounds %struct.stat, %struct.stat* %465, i32 0, i32 4
  %467 = load i32, i32* %466, align 4
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf, i32 0, i32 0
  %470 = call i8* @human_readable(i64 %468, i8* %469, i32 0, i64 1, i64 1)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %461, i8* %464, i8* %470)
  br label %541

; <label>:471                                     ; preds = %30
  %472 = load %struct.stat*, %struct.stat** %4, align 8
  %473 = getelementptr inbounds %struct.stat, %struct.stat* %472, i32 0, i32 3
  %474 = load i32, i32* %473, align 4
  %475 = and i32 %474, 61440
  %476 = icmp eq i32 %475, 40960
  br i1 %476, label %477, label %520

; <label>:477                                     ; preds = %471
  %478 = call i32 @following_links()
  %479 = icmp ne i32 %478, 0
  %480 = select i1 %479, i32 (i8*, %struct.stat*)* @lstat, i32 (i8*, %struct.stat*)* @stat
  %481 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %482 = call i32 %480(i8* %481, %struct.stat* %sbuf)
  %483 = icmp ne i32 %482, 0
  br i1 %483, label %484, label %511

; <label>:484                                     ; preds = %477
  %485 = call i32* @__errno_location() #13
  %486 = load i32, i32* %485, align 4
  %487 = icmp eq i32 %486, 2
  br i1 %487, label %488, label %493

; <label>:488                                     ; preds = %484
  %489 = load %struct.format_val*, %struct.format_val** %1, align 8
  %490 = load %struct.segment*, %struct.segment** %2, align 8
  %491 = getelementptr inbounds %struct.segment, %struct.segment* %490, i32 0, i32 2
  %492 = load i8*, i8** %491, align 8
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %489, i8* %492, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str53, i32 0, i32 0))
  br label %541

; <label>:493                                     ; preds = %484
  %494 = call i32* @__errno_location() #13
  %495 = load i32, i32* %494, align 4
  %496 = icmp eq i32 %495, 40
  br i1 %496, label %497, label %502

; <label>:497                                     ; preds = %493
  %498 = load %struct.format_val*, %struct.format_val** %1, align 8
  %499 = load %struct.segment*, %struct.segment** %2, align 8
  %500 = getelementptr inbounds %struct.segment, %struct.segment* %499, i32 0, i32 2
  %501 = load i8*, i8** %500, align 8
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %498, i8* %501, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str54, i32 0, i32 0))
  br label %541

; <label>:502                                     ; preds = %493
  %503 = load %struct.format_val*, %struct.format_val** %1, align 8
  %504 = load %struct.segment*, %struct.segment** %2, align 8
  %505 = getelementptr inbounds %struct.segment, %struct.segment* %504, i32 0, i32 2
  %506 = load i8*, i8** %505, align 8
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %503, i8* %506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str55, i32 0, i32 0))
  %507 = call i32* @__errno_location() #13
  %508 = load i32, i32* %507, align 4
  %509 = load i8*, i8** %3, align 8
  %510 = call i8* @safely_quote_err_filename(i32 0, i8* %509)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %508, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* %510)
  br label %541

; <label>:511                                     ; preds = %477
  %512 = load %struct.format_val*, %struct.format_val** %1, align 8
  %513 = load %struct.segment*, %struct.segment** %2, align 8
  %514 = getelementptr inbounds %struct.segment, %struct.segment* %513, i32 0, i32 2
  %515 = load i8*, i8** %514, align 8
  %516 = getelementptr inbounds %struct.stat, %struct.stat* %sbuf, i32 0, i32 3
  %517 = load i32, i32* %516, align 4
  %518 = and i32 %517, 61440
  %519 = call i8* @mode_to_filetype(i32 %518)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %512, i8* %515, i8* %519)
  br label %530

; <label>:520                                     ; preds = %471
  %521 = load %struct.format_val*, %struct.format_val** %1, align 8
  %522 = load %struct.segment*, %struct.segment** %2, align 8
  %523 = getelementptr inbounds %struct.segment, %struct.segment* %522, i32 0, i32 2
  %524 = load i8*, i8** %523, align 8
  %525 = load %struct.stat*, %struct.stat** %4, align 8
  %526 = getelementptr inbounds %struct.stat, %struct.stat* %525, i32 0, i32 3
  %527 = load i32, i32* %526, align 4
  %528 = and i32 %527, 61440
  %529 = call i8* @mode_to_filetype(i32 %528)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %521, i8* %524, i8* %529)
  br label %530

; <label>:530                                     ; preds = %520, %511
  br label %541

; <label>:531                                     ; preds = %30
  %532 = load %struct.format_val*, %struct.format_val** %1, align 8
  %533 = load %struct.segment*, %struct.segment** %2, align 8
  %534 = getelementptr inbounds %struct.segment, %struct.segment* %533, i32 0, i32 2
  %535 = load i8*, i8** %534, align 8
  %536 = load %struct.stat*, %struct.stat** %4, align 8
  %537 = getelementptr inbounds %struct.stat, %struct.stat* %536, i32 0, i32 3
  %538 = load i32, i32* %537, align 4
  %539 = and i32 %538, 61440
  %540 = call i8* @mode_to_filetype(i32 %539)
  call void (%struct.format_val*, i8*, ...) @checked_fprintf(%struct.format_val* %532, i8* %535, i8* %540)
  br label %541

; <label>:541                                     ; preds = %531, %530, %502, %497, %488, %460, %443, %418, %411, %401, %395, %372, %362, %360, %278, %277, %243, %212, %193, %192, %155, %137, %122, %113, %103, %97, %79, %75, %36, %30
  br label %542

; <label>:542                                     ; preds = %541, %20, %11, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @match_lname(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate.16* %pred_ptr, i1 zeroext %ignore_case) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca %struct.predicate.16*, align 8
  %4 = alloca i8, align 1
  %ret = alloca i8, align 1
  %linkname = alloca i8*, align 8
  store i8* %pathname, i8** %1, align 8
  store %struct.stat* %stat_buf, %struct.stat** %2, align 8
  store %struct.predicate.16* %pred_ptr, %struct.predicate.16** %3, align 8
  %5 = zext i1 %ignore_case to i8
  store i8 %5, i8* %4, align 1
  store i8 0, i8* %ret, align 1
  %6 = load %struct.stat*, %struct.stat** %2, align 8
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 61440
  %10 = icmp eq i32 %9, 40960
  br i1 %10, label %11, label %33

; <label>:11                                      ; preds = %0
  %12 = load i8*, i8** %1, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %14 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %15 = call i8* @get_link_name_at(i8* %12, i32 %13, i8* %14)
  store i8* %15, i8** %linkname, align 8
  %16 = load i8*, i8** %linkname, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %32

; <label>:18                                      ; preds = %11
  %19 = load %struct.predicate.16*, %struct.predicate.16** %3, align 8
  %20 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %19, i32 0, i32 13
  %21 = bitcast %union.anon* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = load i8*, i8** %linkname, align 8
  %24 = load i8, i8* %4, align 1
  %25 = trunc i8 %24 to i1
  %26 = select i1 %25, i32 16, i32 0
  %27 = call i32 @fnmatch(i8* %22, i8* %23, i32 %26)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %18
  store i8 1, i8* %ret, align 1
  br label %30

; <label>:30                                      ; preds = %29, %18
  %31 = load i8*, i8** %linkname, align 8
  call void @free(i8* %31) #9
  br label %32

; <label>:32                                      ; preds = %30, %11
  br label %33

; <label>:33                                      ; preds = %32, %0
  %34 = load i8, i8* %ret, align 1
  %35 = trunc i8 %34 to i1
  ret i1 %35
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @pred_name_common(i8* %pathname, i8* %str, i32 %flags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %b = alloca i8, align 1
  %base = alloca i8*, align 8
  store i8* %pathname, i8** %1, align 8
  store i8* %str, i8** %2, align 8
  store i32 %flags, i32* %3, align 4
  %4 = load i8*, i8** %1, align 8
  %5 = call i8* @base_name(i8* %4)
  store i8* %5, i8** %base, align 8
  %6 = load i8*, i8** %base, align 8
  %7 = call zeroext i1 @strip_trailing_slashes(i8* %6)
  %8 = load i8*, i8** %2, align 8
  %9 = load i8*, i8** %base, align 8
  %10 = load i32, i32* %3, align 4
  %11 = call i32 @fnmatch(i8* %8, i8* %9, i32 %10)
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %b, align 1
  %14 = load i8*, i8** %base, align 8
  call void @free(i8* %14) #9
  %15 = load i8, i8* %b, align 1
  %16 = trunc i8 %15 to i1
  ret i1 %16
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @is_ok(i8* %program, i8* %arg) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %program, i8** %1, align 8
  store i8* %arg, i8** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %4 = call i32 @fflush(%struct._IO_FILE* %3)
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str5294, i32 0, i32 0)) #9
  %7 = load i8*, i8** %1, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %6, i8* %7, i8* %8)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 @fflush(%struct._IO_FILE* %10)
  %12 = call zeroext i1 @yesno()
  ret i1 %12
}

; Function Attrs: nounwind uwtable
define internal i32 @can_access(i32 %access_type) #0 {
  %1 = alloca i32, align 4
  %args = alloca %struct.access_check_args, align 8
  store i32 %access_type, i32* %1, align 4
  %2 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %3 = getelementptr inbounds %struct.access_check_args, %struct.access_check_args* %args, i32 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = load i32, i32* %1, align 4
  %5 = getelementptr inbounds %struct.access_check_args, %struct.access_check_args* %args, i32 0, i32 1
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %struct.access_check_args, %struct.access_check_args* %args, i32 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %8 = bitcast %struct.access_check_args* %args to i8*
  %9 = call i32 @run_in_dir(i32 %7, i32 (i8*)* @access_callback, i8* %8)
  %10 = icmp eq i32 0, %9
  %11 = zext i1 %10 to i32
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @prep_child_for_exec(i1 zeroext %close_stdin, i32 %dir_fd) #0 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %ok = alloca i8, align 1
  %3 = zext i1 %close_stdin to i8
  store i8 %3, i8* %1, align 1
  store i32 %dir_fd, i32* %2, align 4
  store i8 1, i8* %ok, align 1
  %4 = load i8, i8* %1, align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %6, label %22

; <label>:6                                       ; preds = %0
  %7 = call i32 @close(i32 0)
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %6
  %10 = call i32* @__errno_location() #13
  %11 = load i32, i32* %10, align 4
  %12 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str49, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %12)
  store i8 0, i8* %ok, align 1
  br label %21

; <label>:13                                      ; preds = %6
  %14 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @prep_child_for_exec.inputfile, i32 0, i32 0), i32 0)
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %20

; <label>:16                                      ; preds = %13
  %17 = call i32* @__errno_location() #13
  %18 = load i32, i32* %17, align 4
  %19 = call i8* @safely_quote_err_filename(i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @prep_child_for_exec.inputfile, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* %19)
  br label %20

; <label>:20                                      ; preds = %16, %13
  br label %21

; <label>:21                                      ; preds = %20, %9
  br label %22

; <label>:22                                      ; preds = %21, %0
  %23 = load i32, i32* %2, align 4
  %24 = icmp ne i32 %23, -100
  br i1 %24, label %25, label %40

; <label>:25                                      ; preds = %22
  %26 = load i32, i32* %2, align 4
  %27 = icmp sge i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %25
  br label %31

; <label>:29                                      ; preds = %25
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str50, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 1904, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__.prep_child_for_exec, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %31

; <label>:31                                      ; preds = %30, %28
  %32 = load i32, i32* %2, align 4
  %33 = call i32 @fchdir(i32 %32) #9
  %34 = icmp ne i32 0, %33
  br i1 %34, label %35, label %39

; <label>:35                                      ; preds = %31
  %36 = call i32* @__errno_location() #13
  %37 = load i32, i32* %36, align 4
  %38 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str51, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %37, i8* %38)
  store i8 0, i8* %ok, align 1
  br label %39

; <label>:39                                      ; preds = %35, %31
  br label %40

; <label>:40                                      ; preds = %39, %22
  %41 = load i8, i8* %ok, align 1
  %42 = trunc i8 %41 to i1
  ret i1 %42
}

; Function Attrs: nounwind uwtable
define internal i8* @blank_rtrim(i8* %str, i8* %buf) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %str, i8** %2, align 8
  store i8* %buf, i8** %3, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  store i8* null, i8** %1
  br label %48

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %3, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = call i8* @strcpy(i8* %8, i8* %9) #9
  %11 = load i8*, i8** %3, align 8
  %12 = call i64 @strlen(i8* %11) #14
  %13 = sub i64 %12, 1
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %i, align 4
  br label %15

; <label>:15                                      ; preds = %38, %7
  %16 = load i32, i32* %i, align 4
  %17 = icmp sge i32 %16, 0
  br i1 %17, label %18, label %36

; <label>:18                                      ; preds = %15
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 32
  br i1 %25, label %34, label %26

; <label>:26                                      ; preds = %18
  %27 = load i32, i32* %i, align 4
  %28 = sext i32 %27 to i64
  %29 = load i8*, i8** %3, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %32, 9
  br label %34

; <label>:34                                      ; preds = %26, %18
  %35 = phi i1 [ true, %18 ], [ %33, %26 ]
  br label %36

; <label>:36                                      ; preds = %34, %15
  %37 = phi i1 [ false, %15 ], [ %35, %34 ]
  br i1 %37, label %38, label %41

; <label>:38                                      ; preds = %36
  %39 = load i32, i32* %i, align 4
  %40 = add nsw i32 %39, -1
  store i32 %40, i32* %i, align 4
  br label %15

; <label>:41                                      ; preds = %36
  %42 = load i32, i32* %i, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %i, align 4
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  store i8 0, i8* %46, align 1
  %47 = load i8*, i8** %3, align 8
  store i8* %47, i8** %1
  br label %48

; <label>:48                                      ; preds = %41, %6
  %49 = load i8*, i8** %1
  ret i8* %49
}

; Function Attrs: nounwind uwtable
define internal void @print_parenthesised(%struct._IO_FILE* %fp, %struct.predicate.16* %node) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct.predicate.16*, align 8
  %parens = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  store %struct.predicate.16* %node, %struct.predicate.16** %2, align 8
  store i32 0, i32* %parens, align 4
  %3 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %4 = icmp ne %struct.predicate.16* %3, null
  br i1 %4, label %5, label %54

; <label>:5                                       ; preds = %0
  %6 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %7 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %6, i32 0, i32 0
  %8 = bitcast {}** %7 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %9 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %8, align 8
  %10 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate.16*)* %9, @pred_or
  br i1 %10, label %17, label %11

; <label>:11                                      ; preds = %5
  %12 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %13 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %12, i32 0, i32 0
  %14 = bitcast {}** %13 to i1 (i8*, %struct.stat*, %struct.predicate.16*)**
  %15 = load i1 (i8*, %struct.stat*, %struct.predicate.16*)*, i1 (i8*, %struct.stat*, %struct.predicate.16*)** %14, align 8
  %16 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate.16*)* %15, @pred_and
  br i1 %16, label %17, label %27

; <label>:17                                      ; preds = %11, %5
  %18 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %19 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %18, i32 0, i32 15
  %20 = load %struct.predicate.16*, %struct.predicate.16** %19, align 8
  %21 = icmp eq %struct.predicate.16* %20, null
  br i1 %21, label %22, label %27

; <label>:22                                      ; preds = %17
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %24 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %25 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %24, i32 0, i32 16
  %26 = load %struct.predicate.16*, %struct.predicate.16** %25, align 8
  call void @print_parenthesised(%struct._IO_FILE* %23, %struct.predicate.16* %26)
  br label %53

; <label>:27                                      ; preds = %17, %11
  %28 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %29 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %28, i32 0, i32 15
  %30 = load %struct.predicate.16*, %struct.predicate.16** %29, align 8
  %31 = icmp ne %struct.predicate.16* %30, null
  br i1 %31, label %37, label %32

; <label>:32                                      ; preds = %27
  %33 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  %34 = getelementptr inbounds %struct.predicate.16, %struct.predicate.16* %33, i32 0, i32 16
  %35 = load %struct.predicate.16*, %struct.predicate.16** %34, align 8
  %36 = icmp ne %struct.predicate.16* %35, null
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %32, %27
  store i32 1, i32* %parens, align 4
  br label %38

; <label>:38                                      ; preds = %37, %32
  %39 = load i32, i32* %parens, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %38
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str3789, i32 0, i32 0))
  br label %44

; <label>:44                                      ; preds = %41, %38
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %46 = load %struct.predicate.16*, %struct.predicate.16** %2, align 8
  call void @print_optlist(%struct._IO_FILE* %45, %struct.predicate.16* %46)
  %47 = load i32, i32* %parens, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %52

; <label>:49                                      ; preds = %44
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str456, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str3890, i32 0, i32 0))
  br label %52

; <label>:52                                      ; preds = %49, %44
  br label %53

; <label>:53                                      ; preds = %52, %22
  br label %54

; <label>:54                                      ; preds = %53, %0
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #10 {
  %1 = alloca i8*, align 8
  %2 = alloca i64*, align 8
  %3 = alloca i64, align 8
  %n = alloca i64, align 8
  store i8* %p, i8** %1, align 8
  store i64* %pn, i64** %2, align 8
  store i64 %s, i64* %3, align 8
  %4 = load i64*, i64** %2, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %n, align 8
  %6 = load i8*, i8** %1, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %22, label %8

; <label>:8                                       ; preds = %0
  %9 = load i64, i64* %n, align 8
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %21, label %11

; <label>:11                                      ; preds = %8
  %12 = load i64, i64* %3, align 8
  %13 = udiv i64 64, %12
  store i64 %13, i64* %n, align 8
  %14 = load i64, i64* %n, align 8
  %15 = icmp ne i64 %14, 0
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i32
  %18 = sext i32 %17 to i64
  %19 = load i64, i64* %n, align 8
  %20 = add i64 %19, %18
  store i64 %20, i64* %n, align 8
  br label %21

; <label>:21                                      ; preds = %11, %8
  br label %34

; <label>:22                                      ; preds = %0
  %23 = load i64, i64* %3, align 8
  %24 = udiv i64 -6148914691236517206, %23
  %25 = load i64, i64* %n, align 8
  %26 = icmp ule i64 %24, %25
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %22
  call void @xalloc_die() #15
  unreachable

; <label>:28                                      ; preds = %22
  %29 = load i64, i64* %n, align 8
  %30 = add i64 %29, 1
  %31 = udiv i64 %30, 2
  %32 = load i64, i64* %n, align 8
  %33 = add i64 %32, %31
  store i64 %33, i64* %n, align 8
  br label %34

; <label>:34                                      ; preds = %28, %21
  %35 = load i64, i64* %n, align 8
  %36 = load i64*, i64** %2, align 8
  store i64 %35, i64* %36, align 8
  %37 = load i8*, i8** %1, align 8
  %38 = load i64, i64* %n, align 8
  %39 = load i64, i64* %3, align 8
  %40 = mul i64 %38, %39
  %41 = call i8* @xrealloc(i8* %37, i64 %40)
  ret i8* %41
}

; Function Attrs: nounwind uwtable
define internal i8* @do_time_format(i8* %fmt, %struct.tm* %p, i8* %ns, i64 %ns_size) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca %struct.tm*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %timefmt = alloca i8*, align 8
  %done = alloca i8, align 1
  %altered_time = alloca %struct.tm, align 8
  %buf_used = alloca i64, align 8
  %altbuf = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %final_len = alloca i64, align 8
  %end_of_seconds = alloca i64, align 8
  %suffix_len = alloca i64, align 8
  store i8* %fmt, i8** %2, align 8
  store %struct.tm* %p, %struct.tm** %3, align 8
  store i8* %ns, i8** %4, align 8
  store i64 %ns_size, i64* %5, align 8
  store i8* null, i8** %timefmt, align 8
  store i8 0, i8* %done, align 1
  %6 = load i8*, i8** %2, align 8
  %7 = call i64 @strlen(i8* %6) #14
  %8 = add i64 %7, 2
  %9 = call noalias i8* @xmalloc(i64 %8)
  store i8* %9, i8** %timefmt, align 8
  %10 = load i8*, i8** %timefmt, align 8
  %11 = load i8*, i8** %2, align 8
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str47, i32 0, i32 0), i8* %11) #9
  %13 = load %struct.tm*, %struct.tm** %3, align 8
  %14 = bitcast %struct.tm* %altered_time to i8*
  %15 = bitcast %struct.tm* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 56, i32 8, i1 false)
  %16 = getelementptr inbounds %struct.tm, %struct.tm* %altered_time, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sge i32 %17, 11
  br i1 %18, label %19, label %23

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %struct.tm, %struct.tm* %altered_time, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 %21, 11
  store i32 %22, i32* %20, align 4
  br label %27

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %struct.tm, %struct.tm* %altered_time, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 11
  store i32 %26, i32* %24, align 4
  br label %27

; <label>:27                                      ; preds = %23, %19
  store i64 1, i64* @do_time_format.buf_size, align 8
  %28 = load i64, i64* @do_time_format.buf_size, align 8
  %29 = call noalias i8* @xmalloc(i64 %28)
  store i8* %29, i8** @do_time_format.buf, align 8
  br label %30

; <label>:30                                      ; preds = %125, %27
  %31 = load i8, i8* %done, align 1
  %32 = trunc i8 %31 to i1
  %33 = xor i1 %32, true
  br i1 %33, label %34, label %126

; <label>:34                                      ; preds = %30
  %35 = load i8*, i8** @do_time_format.buf, align 8
  %36 = load i64, i64* @do_time_format.buf_size, align 8
  %37 = load i8*, i8** %timefmt, align 8
  %38 = load %struct.tm*, %struct.tm** %3, align 8
  %39 = call i64 @strftime(i8* %35, i64 %36, i8* %37, %struct.tm* %38) #9
  store i64 %39, i64* %buf_used, align 8
  %40 = load i64, i64* %buf_used, align 8
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %42, label %122

; <label>:42                                      ; preds = %34
  %43 = load i64, i64* %buf_used, align 8
  %44 = load i64, i64* @do_time_format.buf_size, align 8
  %45 = icmp ult i64 %43, %44
  br i1 %45, label %46, label %122

; <label>:46                                      ; preds = %42
  %47 = load i64, i64* %buf_used, align 8
  %48 = add i64 %47, 1
  %49 = load i64, i64* %5, align 8
  %50 = add i64 %48, %49
  store i64 %50, i64* %final_len, align 8
  %51 = load i8*, i8** @do_time_format.buf, align 8
  %52 = load i64, i64* %final_len, align 8
  %53 = call i8* @xrealloc(i8* %51, i64 %52)
  store i8* %53, i8** @do_time_format.buf, align 8
  %54 = load i64, i64* %final_len, align 8
  %55 = call noalias i8* @xmalloc(i64 %54)
  store i8* %55, i8** %altbuf, align 8
  %56 = load i8*, i8** %altbuf, align 8
  %57 = load i64, i64* @do_time_format.buf_size, align 8
  %58 = load i8*, i8** %timefmt, align 8
  %59 = call i64 @strftime(i8* %56, i64 %57, i8* %58, %struct.tm* %altered_time) #9
  %60 = load i8*, i8** @do_time_format.buf, align 8
  %61 = load i8*, i8** %altbuf, align 8
  %62 = call zeroext i1 @scan_for_digit_differences(i8* %60, i8* %61, i64* %i, i64* %n)
  br i1 %62, label %63, label %117

; <label>:63                                      ; preds = %46
  %64 = load i64, i64* %n, align 8
  %65 = icmp eq i64 2, %64
  br i1 %65, label %66, label %117

; <label>:66                                      ; preds = %63
  %67 = load i64, i64* %i, align 8
  %68 = load i64, i64* %n, align 8
  %69 = add i64 %67, %68
  %70 = load i8*, i8** @do_time_format.buf, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 %69
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i16** @__ctype_b_loc() #13
  %76 = load i16*, i16** %75, align 8
  %77 = getelementptr inbounds i16, i16* %76, i64 %74
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = and i32 %79, 2048
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %117, label %82

; <label>:82                                      ; preds = %66
  %83 = load i64, i64* %i, align 8
  %84 = load i64, i64* %n, align 8
  %85 = add i64 %83, %84
  store i64 %85, i64* %end_of_seconds, align 8
  %86 = load i64, i64* %buf_used, align 8
  %87 = load i64, i64* %end_of_seconds, align 8
  %88 = sub i64 %86, %87
  %89 = add i64 %88, 1
  store i64 %89, i64* %suffix_len, align 8
  %90 = load i64, i64* %end_of_seconds, align 8
  %91 = load i64, i64* %5, align 8
  %92 = add i64 %90, %91
  %93 = load i64, i64* %suffix_len, align 8
  %94 = add i64 %92, %93
  %95 = load i64, i64* %final_len, align 8
  %96 = icmp eq i64 %94, %95
  br i1 %96, label %97, label %98

; <label>:97                                      ; preds = %82
  br label %100

; <label>:98                                      ; preds = %82
  call void @__assert_fail(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2137, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__.do_time_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %100

; <label>:100                                     ; preds = %99, %97
  %101 = load i8*, i8** @do_time_format.buf, align 8
  %102 = load i64, i64* %end_of_seconds, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 %102
  %104 = load i64, i64* %5, align 8
  %105 = getelementptr inbounds i8, i8* %103, i64 %104
  %106 = load i8*, i8** @do_time_format.buf, align 8
  %107 = load i64, i64* %end_of_seconds, align 8
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  %109 = load i64, i64* %suffix_len, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %105, i8* %108, i64 %109, i32 1, i1 false)
  %110 = load i8*, i8** @do_time_format.buf, align 8
  %111 = load i64, i64* %i, align 8
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = load i64, i64* %n, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = load i8*, i8** %4, align 8
  %116 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 %116, i32 1, i1 false)
  br label %118

; <label>:117                                     ; preds = %66, %63, %46
  br label %118

; <label>:118                                     ; preds = %117, %100
  %119 = load i8*, i8** %timefmt, align 8
  call void @free(i8* %119) #9
  %120 = load i8*, i8** @do_time_format.buf, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 1
  store i8* %121, i8** %1
  br label %126

; <label>:122                                     ; preds = %42, %34
  %123 = load i8*, i8** @do_time_format.buf, align 8
  %124 = call i8* @x2nrealloc(i8* %123, i64* @do_time_format.buf_size, i64 2)
  store i8* %124, i8** @do_time_format.buf, align 8
  br label %125

; <label>:125                                     ; preds = %122
  br label %30

; <label>:126                                     ; preds = %118, %30
  %127 = load i8*, i8** %1
  ret i8* %127
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @scan_for_digit_differences(i8* %p, i8* %q, i64* %first, i64* %n) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %ok = alloca i8, align 1
  %seen = alloca i8, align 1
  %i = alloca i64, align 8
  store i8* %p, i8** %2, align 8
  store i8* %q, i8** %3, align 8
  store i64* %first, i64** %4, align 8
  store i64* %n, i64** %5, align 8
  store i8 1, i8* %ok, align 1
  store i8 0, i8* %seen, align 1
  store i64 0, i64* %i, align 8
  br label %6

; <label>:6                                       ; preds = %84, %0
  %7 = load i64, i64* %i, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %87

; <label>:13                                      ; preds = %6
  %14 = load i64, i64* %i, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %87

; <label>:20                                      ; preds = %13
  %21 = load i64, i64* %i, align 8
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = load i64, i64* %i, align 8
  %27 = load i8*, i8** %3, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %26
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp ne i32 %25, %30
  br i1 %31, label %32, label %83

; <label>:32                                      ; preds = %20
  %33 = load i64, i64* %i, align 8
  %34 = load i8*, i8** %3, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = sext i32 %37 to i64
  %39 = call i16** @__ctype_b_loc() #13
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds i16, i16* %40, i64 %38
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = and i32 %43, 2048
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %60

; <label>:46                                      ; preds = %32
  %47 = load i64, i64* %i, align 8
  %48 = load i8*, i8** %3, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i16** @__ctype_b_loc() #13
  %54 = load i16*, i16** %53, align 8
  %55 = getelementptr inbounds i16, i16* %54, i64 %52
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = and i32 %57, 2048
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %61, label %60

; <label>:60                                      ; preds = %46, %32
  store i1 false, i1* %1
  br label %103

; <label>:61                                      ; preds = %46
  %62 = load i8, i8* %seen, align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %68, label %64

; <label>:64                                      ; preds = %61
  %65 = load i64, i64* %i, align 8
  %66 = load i64*, i64** %4, align 8
  store i64 %65, i64* %66, align 8
  %67 = load i64*, i64** %5, align 8
  store i64 1, i64* %67, align 8
  store i8 1, i8* %seen, align 1
  br label %82

; <label>:68                                      ; preds = %61
  %69 = load i64, i64* %i, align 8
  %70 = load i64*, i64** %4, align 8
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = load i64*, i64** %5, align 8
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %72, %74
  br i1 %75, label %76, label %80

; <label>:76                                      ; preds = %68
  %77 = load i64*, i64** %5, align 8
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  br label %81

; <label>:80                                      ; preds = %68
  store i1 false, i1* %1
  br label %103

; <label>:81                                      ; preds = %76
  br label %82

; <label>:82                                      ; preds = %81, %64
  br label %83

; <label>:83                                      ; preds = %82, %20
  br label %84

; <label>:84                                      ; preds = %83
  %85 = load i64, i64* %i, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %i, align 8
  br label %6

; <label>:87                                      ; preds = %13, %6
  %88 = load i64, i64* %i, align 8
  %89 = load i8*, i8** %2, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %101, label %94

; <label>:94                                      ; preds = %87
  %95 = load i64, i64* %i, align 8
  %96 = load i8*, i8** %3, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %95
  %98 = load i8, i8* %97, align 1
  %99 = sext i8 %98 to i32
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %102

; <label>:101                                     ; preds = %94, %87
  store i1 false, i1* %1
  br label %103

; <label>:102                                     ; preds = %94
  store i1 true, i1* %1
  br label %103

; <label>:103                                     ; preds = %102, %101, %80, %60
  %104 = load i1, i1* %1
  ret i1 %104
}

; Function Attrs: nounwind uwtable
define internal i32 @access_callback(i8* %context) #0 {
  %1 = alloca i8*, align 8
  %rv = alloca i32, align 4
  %args = alloca %struct.access_check_args*, align 8
  store i8* %context, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %3 = bitcast i8* %2 to %struct.access_check_args*
  store %struct.access_check_args* %3, %struct.access_check_args** %args, align 8
  %4 = load %struct.access_check_args*, %struct.access_check_args** %args, align 8
  %5 = getelementptr inbounds %struct.access_check_args, %struct.access_check_args* %4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = load %struct.access_check_args*, %struct.access_check_args** %args, align 8
  %8 = getelementptr inbounds %struct.access_check_args, %struct.access_check_args* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = call i32 @access(i8* %6, i32 %9) #9
  store i32 %10, i32* %rv, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %17

; <label>:12                                      ; preds = %0
  %13 = call i32* @__errno_location() #13
  %14 = load i32, i32* %13, align 4
  %15 = load %struct.access_check_args*, %struct.access_check_args** %args, align 8
  %16 = getelementptr inbounds %struct.access_check_args, %struct.access_check_args* %15, i32 0, i32 2
  store i32 %14, i32* %16, align 4
  br label %17

; <label>:17                                      ; preds = %12, %0
  %18 = load i32, i32* %rv, align 4
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal i8* @mode_to_filetype(i32 %m) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  store i32 %m, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 32768
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str56, i32 0, i32 0), i8** %1
  br label %31

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %2, align 4
  %8 = icmp eq i32 %7, 16384
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str57, i32 0, i32 0), i8** %1
  br label %31

; <label>:10                                      ; preds = %6
  %11 = load i32, i32* %2, align 4
  %12 = icmp eq i32 %11, 40960
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %10
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str58, i32 0, i32 0), i8** %1
  br label %31

; <label>:14                                      ; preds = %10
  %15 = load i32, i32* %2, align 4
  %16 = icmp eq i32 %15, 49152
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str59, i32 0, i32 0), i8** %1
  br label %31

; <label>:18                                      ; preds = %14
  %19 = load i32, i32* %2, align 4
  %20 = icmp eq i32 %19, 24576
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %18
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str60, i32 0, i32 0), i8** %1
  br label %31

; <label>:22                                      ; preds = %18
  %23 = load i32, i32* %2, align 4
  %24 = icmp eq i32 %23, 8192
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %22
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str61, i32 0, i32 0), i8** %1
  br label %31

; <label>:26                                      ; preds = %22
  %27 = load i32, i32* %2, align 4
  %28 = icmp eq i32 %27, 4096
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %26
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str62, i32 0, i32 0), i8** %1
  br label %31

; <label>:30                                      ; preds = %26
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str63, i32 0, i32 0), i8** %1
  br label %31

; <label>:31                                      ; preds = %30, %29, %25, %21, %17, %13, %9, %5
  %32 = load i8*, i8** %1
  ret i8* %32
}

; Function Attrs: nounwind uwtable
define internal double @file_sparseness(%struct.stat* %p) #0 {
  %1 = alloca double, align 8
  %2 = alloca %struct.stat*, align 8
  %blklen = alloca double, align 8
  store %struct.stat* %p, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 0, %5
  br i1 %6, label %7, label %19

; <label>:7                                       ; preds = %0
  %8 = load %struct.stat*, %struct.stat** %2, align 8
  %9 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 10
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 0, %10
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %7
  store double 1.000000e+00, double* %1
  br label %34

; <label>:13                                      ; preds = %7
  %14 = load %struct.stat*, %struct.stat** %2, align 8
  %15 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 10
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %16, 0
  %18 = select i1 %17, double 0xFFF0000000000000, double 0x7FF0000000000000
  store double %18, double* %1
  br label %34

; <label>:19                                      ; preds = %0
  %20 = load %struct.stat*, %struct.stat** %2, align 8
  %21 = call i64 @file_blocksize(%struct.stat* %20)
  %22 = uitofp i64 %21 to double
  %23 = load %struct.stat*, %struct.stat** %2, align 8
  %24 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 10
  %25 = load i64, i64* %24, align 8
  %26 = sitofp i64 %25 to double
  %27 = fmul double %22, %26
  store double %27, double* %blklen, align 8
  %28 = load double, double* %blklen, align 8
  %29 = load %struct.stat*, %struct.stat** %2, align 8
  %30 = getelementptr inbounds %struct.stat, %struct.stat* %29, i32 0, i32 8
  %31 = load i64, i64* %30, align 8
  %32 = sitofp i64 %31 to double
  %33 = fdiv double %28, %32
  store double %33, double* %1
  br label %34

; <label>:34                                      ; preds = %19, %13, %12
  %35 = load double, double* %1
  ret double %35
}

; Function Attrs: nounwind uwtable
define internal void @checked_print_quoted(%struct.format_val* %dest, i8* %format, i8* %s) #0 {
  %1 = alloca %struct.format_val*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %rv = alloca i32, align 4
  store %struct.format_val* %dest, %struct.format_val** %1, align 8
  store i8* %format, i8** %2, align 8
  store i8* %s, i8** %3, align 8
  %4 = load %struct.format_val*, %struct.format_val** %1, align 8
  %5 = getelementptr inbounds %struct.format_val, %struct.format_val* %4, i32 0, i32 1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %7 = load %struct.format_val*, %struct.format_val** %1, align 8
  %8 = getelementptr inbounds %struct.format_val, %struct.format_val* %7, i32 0, i32 4
  %9 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %10 = load %struct.format_val*, %struct.format_val** %1, align 8
  %11 = getelementptr inbounds %struct.format_val, %struct.format_val* %10, i32 0, i32 3
  %12 = load i8, i8* %11, align 1
  %13 = trunc i8 %12 to i1
  %14 = load i8*, i8** %2, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = call i32 @print_quoted(%struct._IO_FILE* %6, %struct.quoting_options* %9, i1 zeroext %13, i8* %14, i8* %15)
  store i32 %16, i32* %rv, align 4
  %17 = load i32, i32* %rv, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %23

; <label>:19                                      ; preds = %0
  %20 = load %struct.format_val*, %struct.format_val** %1, align 8
  %21 = getelementptr inbounds %struct.format_val, %struct.format_val* %20, i32 0, i32 2
  %22 = load i8*, i8** %21, align 8
  call void @nonfatal_file_error(i8* %22)
  br label %23

; <label>:23                                      ; preds = %19, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @ctime_format(i64 %ts.coerce0, i64 %ts.coerce1) #0 {
  %1 = alloca i8*, align 8
  %ts = alloca %struct.timespec, align 8
  %ptm = alloca %struct.tm*, align 8
  %nout = alloca i32, align 4
  %2 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %3 = getelementptr { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %ts.coerce0, i64* %3
  %4 = getelementptr { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %ts.coerce1, i64* %4
  %5 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %6 = call %struct.tm* @localtime(i64* %5) #9
  store %struct.tm* %6, %struct.tm** %ptm, align 8
  %7 = load %struct.tm*, %struct.tm** %ptm, align 8
  %8 = icmp ne %struct.tm* %7, null
  br i1 %8, label %9, label %111

; <label>:9                                       ; preds = %0
  %10 = load %struct.tm*, %struct.tm** %ptm, align 8
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = icmp sge i32 %12, 0
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %9
  br label %17

; <label>:15                                      ; preds = %9
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str64, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2334, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %17

; <label>:17                                      ; preds = %16, %14
  %18 = load %struct.tm*, %struct.tm** %ptm, align 8
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 7
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %17
  br label %25

; <label>:23                                      ; preds = %17
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str65, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2335, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %22
  %26 = load %struct.tm*, %struct.tm** %ptm, align 8
  %27 = getelementptr inbounds %struct.tm, %struct.tm* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = icmp sge i32 %28, 0
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %25
  br label %33

; <label>:31                                      ; preds = %25
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str66, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2336, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %33

; <label>:33                                      ; preds = %32, %30
  %34 = load %struct.tm*, %struct.tm** %ptm, align 8
  %35 = getelementptr inbounds %struct.tm, %struct.tm* %34, i32 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 12
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %33
  br label %41

; <label>:39                                      ; preds = %33
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2337, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %41

; <label>:41                                      ; preds = %40, %38
  %42 = load %struct.tm*, %struct.tm** %ptm, align 8
  %43 = getelementptr inbounds %struct.tm, %struct.tm* %42, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp sge i32 %44, 0
  br i1 %45, label %46, label %47

; <label>:46                                      ; preds = %41
  br label %49

; <label>:47                                      ; preds = %41
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2338, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %49

; <label>:49                                      ; preds = %48, %46
  %50 = load %struct.tm*, %struct.tm** %ptm, align 8
  %51 = getelementptr inbounds %struct.tm, %struct.tm* %50, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 24
  br i1 %53, label %54, label %55

; <label>:54                                      ; preds = %49
  br label %57

; <label>:55                                      ; preds = %49
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str69, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2339, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %57

; <label>:57                                      ; preds = %56, %54
  %58 = load %struct.tm*, %struct.tm** %ptm, align 8
  %59 = getelementptr inbounds %struct.tm, %struct.tm* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, 60
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %57
  br label %65

; <label>:63                                      ; preds = %57
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str70, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2340, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %65

; <label>:65                                      ; preds = %64, %62
  %66 = load %struct.tm*, %struct.tm** %ptm, align 8
  %67 = getelementptr inbounds %struct.tm, %struct.tm* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp sle i32 %68, 61
  br i1 %69, label %70, label %71

; <label>:70                                      ; preds = %65
  br label %73

; <label>:71                                      ; preds = %65
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str71, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2341, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %73

; <label>:73                                      ; preds = %72, %70
  %74 = load %struct.tm*, %struct.tm** %ptm, align 8
  %75 = getelementptr inbounds %struct.tm, %struct.tm* %74, i32 0, i32 6
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [7 x i8*], [7 x i8*]* @weekdays, i32 0, i64 %77
  %79 = load i8*, i8** %78, align 8
  %80 = load %struct.tm*, %struct.tm** %ptm, align 8
  %81 = getelementptr inbounds %struct.tm, %struct.tm* %80, i32 0, i32 4
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [12 x i8*], [12 x i8*]* @months, i32 0, i64 %83
  %85 = load i8*, i8** %84, align 8
  %86 = load %struct.tm*, %struct.tm** %ptm, align 8
  %87 = getelementptr inbounds %struct.tm, %struct.tm* %86, i32 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = load %struct.tm*, %struct.tm** %ptm, align 8
  %90 = getelementptr inbounds %struct.tm, %struct.tm* %89, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = load %struct.tm*, %struct.tm** %ptm, align 8
  %93 = getelementptr inbounds %struct.tm, %struct.tm* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = load %struct.tm*, %struct.tm** %ptm, align 8
  %96 = getelementptr inbounds %struct.tm, %struct.tm* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = load %struct.tm*, %struct.tm** %ptm, align 8
  %101 = getelementptr inbounds %struct.tm, %struct.tm* %100, i32 0, i32 5
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 1900, %102
  %104 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ctime_format.resultbuf, i32 0, i32 0), i64 1024, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str72, i32 0, i32 0), i8* %79, i8* %85, i32 %88, i32 %91, i32 %94, i32 %97, i64 %99, i32 %103) #9
  store i32 %104, i32* %nout, align 4
  %105 = load i32, i32* %nout, align 4
  %106 = icmp ult i32 %105, 1024
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %73
  br label %110

; <label>:108                                     ; preds = %73
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str73, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str153, i32 0, i32 0), i32 2355, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.ctime_format, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %110

; <label>:110                                     ; preds = %109, %107
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ctime_format.resultbuf, i32 0, i32 0), i8** %1
  br label %118

; <label>:111                                     ; preds = %0
  %112 = bitcast %struct.timespec* %ts to { i64, i64 }*
  %113 = getelementptr { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0
  %114 = load i64, i64* %113, align 1
  %115 = getelementptr { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1
  %116 = load i64, i64* %115, align 1
  %117 = call i8* @format_date(i64 %114, i64 %116, i32 64)
  store i8* %117, i8** %1
  br label %118

; <label>:118                                     ; preds = %111, %110
  %119 = load i8*, i8** %1
  ret i8* %119
}

; Function Attrs: nounwind uwtable
define internal void @checked_fflush(%struct.format_val* %dest) #0 {
  %1 = alloca %struct.format_val*, align 8
  store %struct.format_val* %dest, %struct.format_val** %1, align 8
  %2 = load %struct.format_val*, %struct.format_val** %1, align 8
  %3 = getelementptr inbounds %struct.format_val, %struct.format_val* %2, i32 0, i32 1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %5 = call i32 @fflush(%struct._IO_FILE* %4)
  %6 = icmp ne i32 0, %5
  br i1 %6, label %7, label %11

; <label>:7                                       ; preds = %0
  %8 = load %struct.format_val*, %struct.format_val** %1, align 8
  %9 = getelementptr inbounds %struct.format_val, %struct.format_val* %8, i32 0, i32 2
  %10 = load i8*, i8** %9, align 8
  call void @nonfatal_file_error(i8* %10)
  br label %11

; <label>:11                                      ; preds = %7, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @checked_fwrite(i8* %p, i64 %siz, i64 %nmemb, %struct.format_val* %dest) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct.format_val*, align 8
  %items_written = alloca i32, align 4
  store i8* %p, i8** %1, align 8
  store i64 %siz, i64* %2, align 8
  store i64 %nmemb, i64* %3, align 8
  store %struct.format_val* %dest, %struct.format_val** %4, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load i64, i64* %2, align 8
  %7 = load i64, i64* %3, align 8
  %8 = load %struct.format_val*, %struct.format_val** %4, align 8
  %9 = getelementptr inbounds %struct.format_val, %struct.format_val* %8, i32 0, i32 1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %11 = call i64 @fwrite(i8* %5, i64 %6, i64 %7, %struct._IO_FILE* %10)
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %items_written, align 4
  %13 = load i32, i32* %items_written, align 4
  %14 = sext i32 %13 to i64
  %15 = load i64, i64* %3, align 8
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %17, label %21

; <label>:17                                      ; preds = %0
  %18 = load %struct.format_val*, %struct.format_val** %4, align 8
  %19 = getelementptr inbounds %struct.format_val, %struct.format_val* %18, i32 0, i32 2
  %20 = load i8*, i8** %19, align 8
  call void @nonfatal_file_error(i8* %20)
  br label %21

; <label>:21                                      ; preds = %17, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @ts_difference(i64 %ts1.coerce0, i64 %ts1.coerce1, i64 %ts2.coerce0, i64 %ts2.coerce1) #0 {
  %ts1 = alloca %struct.timespec, align 8
  %ts2 = alloca %struct.timespec, align 8
  %d = alloca double, align 8
  %1 = bitcast %struct.timespec* %ts1 to { i64, i64 }*
  %2 = getelementptr { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %ts1.coerce0, i64* %2
  %3 = getelementptr { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %ts1.coerce1, i64* %3
  %4 = bitcast %struct.timespec* %ts2 to { i64, i64 }*
  %5 = getelementptr { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  store i64 %ts2.coerce0, i64* %5
  %6 = getelementptr { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  store i64 %ts2.coerce1, i64* %6
  %7 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = call double @difftime(i64 %8, i64 %10) #13
  %12 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts2, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %13, %15
  %17 = sitofp i64 %16 to double
  %18 = fmul double 1.000000e-09, %17
  %19 = fadd double %11, %18
  store double %19, double* %d, align 8
  %20 = load double, double* %d, align 8
  ret double %20
}

; Function Attrs: nounwind uwtable
define %struct.predicate* @get_expr(%struct.predicate** %input, i16 signext %prev_prec, %struct.predicate* %prev_pred) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca %struct.predicate**, align 8
  %3 = alloca i16, align 2
  %4 = alloca %struct.predicate*, align 8
  %next = alloca %struct.predicate*, align 8
  %this_pred = alloca %struct.predicate*, align 8
  store %struct.predicate** %input, %struct.predicate*** %2, align 8
  store i16 %prev_prec, i16* %3, align 2
  store %struct.predicate* %prev_pred, %struct.predicate** %4, align 8
  store %struct.predicate* null, %struct.predicate** %next, align 8
  %5 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %6 = load %struct.predicate*, %struct.predicate** %5, align 8
  store %struct.predicate* %6, %struct.predicate** %this_pred, align 8
  %7 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %8 = load %struct.predicate*, %struct.predicate** %7, align 8
  %9 = icmp eq %struct.predicate* %8, null
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %0
  %11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str101, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %11)
  br label %12

; <label>:12                                      ; preds = %10, %0
  %13 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %14 = load %struct.predicate*, %struct.predicate** %13, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %135 [
    i32 0, label %17
    i32 3, label %19
    i32 5, label %24
    i32 1, label %59
    i32 2, label %67
    i32 4, label %80
  ]

; <label>:17                                      ; preds = %12
  %18 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str101, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %18)
  br label %137

; <label>:19                                      ; preds = %12
  %20 = call i8* @gettext(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str1102, i32 0, i32 0)) #9
  %21 = load %struct.predicate*, %struct.predicate** %this_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %20, i8* %23)
  br label %137

; <label>:24                                      ; preds = %12
  %25 = load %struct.predicate*, %struct.predicate** %4, align 8
  %26 = getelementptr inbounds %struct.predicate, %struct.predicate* %25, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 2, %27
  br i1 %28, label %34, label %29

; <label>:29                                      ; preds = %24
  %30 = load %struct.predicate*, %struct.predicate** %4, align 8
  %31 = getelementptr inbounds %struct.predicate, %struct.predicate* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 3, %32
  br i1 %33, label %34, label %44

; <label>:34                                      ; preds = %29, %24
  %35 = load %struct.predicate*, %struct.predicate** %this_pred, align 8
  %36 = getelementptr inbounds %struct.predicate, %struct.predicate* %35, i32 0, i32 11
  %37 = load i8, i8* %36, align 1
  %38 = trunc i8 %37 to i1
  br i1 %38, label %44, label %39

; <label>:39                                      ; preds = %34
  %40 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str2103, i32 0, i32 0)) #9
  %41 = load %struct.predicate*, %struct.predicate** %4, align 8
  %42 = getelementptr inbounds %struct.predicate, %struct.predicate* %41, i32 0, i32 1
  %43 = load i8*, i8** %42, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %40, i8* %43)
  br label %58

; <label>:44                                      ; preds = %34, %29
  %45 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %46 = load %struct.predicate*, %struct.predicate** %45, align 8
  %47 = getelementptr inbounds %struct.predicate, %struct.predicate* %46, i32 0, i32 11
  %48 = load i8, i8* %47, align 1
  %49 = trunc i8 %48 to i1
  br i1 %49, label %50, label %55

; <label>:50                                      ; preds = %44
  %51 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str3104, i32 0, i32 0)) #9
  %52 = load %struct.predicate*, %struct.predicate** %4, align 8
  %53 = getelementptr inbounds %struct.predicate, %struct.predicate* %52, i32 0, i32 1
  %54 = load i8*, i8** %53, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %51, i8* %54)
  br label %57

; <label>:55                                      ; preds = %44
  %56 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str4105, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %56)
  br label %57

; <label>:57                                      ; preds = %55, %50
  br label %58

; <label>:58                                      ; preds = %57, %39
  br label %137

; <label>:59                                      ; preds = %12
  %60 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %61 = load %struct.predicate*, %struct.predicate** %60, align 8
  store %struct.predicate* %61, %struct.predicate** %next, align 8
  %62 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %63 = load %struct.predicate*, %struct.predicate** %62, align 8
  %64 = getelementptr inbounds %struct.predicate, %struct.predicate* %63, i32 0, i32 14
  %65 = load %struct.predicate*, %struct.predicate** %64, align 8
  %66 = load %struct.predicate**, %struct.predicate*** %2, align 8
  store %struct.predicate* %65, %struct.predicate** %66, align 8
  br label %137

; <label>:67                                      ; preds = %12
  %68 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %69 = load %struct.predicate*, %struct.predicate** %68, align 8
  store %struct.predicate* %69, %struct.predicate** %next, align 8
  %70 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %71 = load %struct.predicate*, %struct.predicate** %70, align 8
  %72 = getelementptr inbounds %struct.predicate, %struct.predicate* %71, i32 0, i32 14
  %73 = load %struct.predicate*, %struct.predicate** %72, align 8
  %74 = load %struct.predicate**, %struct.predicate*** %2, align 8
  store %struct.predicate* %73, %struct.predicate** %74, align 8
  %75 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %76 = load %struct.predicate*, %struct.predicate** %next, align 8
  %77 = call %struct.predicate* @get_expr(%struct.predicate** %75, i16 signext 4, %struct.predicate* %76)
  %78 = load %struct.predicate*, %struct.predicate** %next, align 8
  %79 = getelementptr inbounds %struct.predicate, %struct.predicate* %78, i32 0, i32 16
  store %struct.predicate* %77, %struct.predicate** %79, align 8
  br label %137

; <label>:80                                      ; preds = %12
  %81 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %82 = load %struct.predicate*, %struct.predicate** %81, align 8
  %83 = getelementptr inbounds %struct.predicate, %struct.predicate* %82, i32 0, i32 14
  %84 = load %struct.predicate*, %struct.predicate** %83, align 8
  %85 = icmp eq %struct.predicate* null, %84
  br i1 %85, label %94, label %86

; <label>:86                                      ; preds = %80
  %87 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %88 = load %struct.predicate*, %struct.predicate** %87, align 8
  %89 = getelementptr inbounds %struct.predicate, %struct.predicate* %88, i32 0, i32 14
  %90 = load %struct.predicate*, %struct.predicate** %89, align 8
  %91 = getelementptr inbounds %struct.predicate, %struct.predicate* %90, i32 0, i32 11
  %92 = load i8, i8* %91, align 1
  %93 = trunc i8 %92 to i1
  br i1 %93, label %94, label %99

; <label>:94                                      ; preds = %86, %80
  %95 = call i8* @gettext(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str5106, i32 0, i32 0)) #9
  %96 = load %struct.predicate*, %struct.predicate** %this_pred, align 8
  %97 = getelementptr inbounds %struct.predicate, %struct.predicate* %96, i32 0, i32 1
  %98 = load i8*, i8** %97, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %95, i8* %98)
  br label %99

; <label>:99                                      ; preds = %94, %86
  %100 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %101 = load %struct.predicate*, %struct.predicate** %100, align 8
  store %struct.predicate* %101, %struct.predicate** %4, align 8
  %102 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %103 = load %struct.predicate*, %struct.predicate** %102, align 8
  %104 = getelementptr inbounds %struct.predicate, %struct.predicate* %103, i32 0, i32 14
  %105 = load %struct.predicate*, %struct.predicate** %104, align 8
  %106 = load %struct.predicate**, %struct.predicate*** %2, align 8
  store %struct.predicate* %105, %struct.predicate** %106, align 8
  %107 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %108 = load %struct.predicate*, %struct.predicate** %107, align 8
  %109 = getelementptr inbounds %struct.predicate, %struct.predicate* %108, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 5
  br i1 %111, label %112, label %114

; <label>:112                                     ; preds = %99
  %113 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str6107, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %113)
  br label %114

; <label>:114                                     ; preds = %112, %99
  %115 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %116 = load %struct.predicate*, %struct.predicate** %4, align 8
  %117 = call %struct.predicate* @get_expr(%struct.predicate** %115, i16 signext 0, %struct.predicate* %116)
  store %struct.predicate* %117, %struct.predicate** %next, align 8
  %118 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %119 = load %struct.predicate*, %struct.predicate** %118, align 8
  %120 = icmp eq %struct.predicate* %119, null
  br i1 %120, label %127, label %121

; <label>:121                                     ; preds = %114
  %122 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %123 = load %struct.predicate*, %struct.predicate** %122, align 8
  %124 = getelementptr inbounds %struct.predicate, %struct.predicate* %123, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp ne i32 %125, 5
  br i1 %126, label %127, label %129

; <label>:127                                     ; preds = %121, %114
  %128 = call i8* @gettext(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str7108, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %128)
  br label %129

; <label>:129                                     ; preds = %127, %121
  %130 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %131 = load %struct.predicate*, %struct.predicate** %130, align 8
  %132 = getelementptr inbounds %struct.predicate, %struct.predicate* %131, i32 0, i32 14
  %133 = load %struct.predicate*, %struct.predicate** %132, align 8
  %134 = load %struct.predicate**, %struct.predicate*** %2, align 8
  store %struct.predicate* %133, %struct.predicate** %134, align 8
  br label %137

; <label>:135                                     ; preds = %12
  %136 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str8109, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %136)
  br label %137

; <label>:137                                     ; preds = %135, %129, %67, %59, %58, %19, %17
  %138 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %139 = load %struct.predicate*, %struct.predicate** %138, align 8
  %140 = icmp eq %struct.predicate* %139, null
  br i1 %140, label %141, label %143

; <label>:141                                     ; preds = %137
  %142 = load %struct.predicate*, %struct.predicate** %next, align 8
  store %struct.predicate* %142, %struct.predicate** %1
  br label %163

; <label>:143                                     ; preds = %137
  %144 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %145 = load %struct.predicate*, %struct.predicate** %144, align 8
  %146 = getelementptr inbounds %struct.predicate, %struct.predicate* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = load i16, i16* %3, align 2
  %149 = sext i16 %148 to i32
  %150 = icmp sgt i32 %147, %149
  br i1 %150, label %151, label %161

; <label>:151                                     ; preds = %143
  %152 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %153 = load %struct.predicate*, %struct.predicate** %next, align 8
  %154 = load i16, i16* %3, align 2
  %155 = call %struct.predicate* @scan_rest(%struct.predicate** %152, %struct.predicate* %153, i16 signext %154)
  store %struct.predicate* %155, %struct.predicate** %next, align 8
  %156 = load %struct.predicate*, %struct.predicate** %next, align 8
  %157 = icmp eq %struct.predicate* %156, null
  br i1 %157, label %158, label %160

; <label>:158                                     ; preds = %151
  %159 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str101, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %159)
  br label %160

; <label>:160                                     ; preds = %158, %151
  br label %161

; <label>:161                                     ; preds = %160, %143
  %162 = load %struct.predicate*, %struct.predicate** %next, align 8
  store %struct.predicate* %162, %struct.predicate** %1
  br label %163

; <label>:163                                     ; preds = %161, %141
  %164 = load %struct.predicate*, %struct.predicate** %1
  ret %struct.predicate* %164
}

; Function Attrs: nounwind uwtable
define void @print_predicate(%struct._IO_FILE* %fp, %struct.predicate* %p) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct.predicate*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %4 = load %struct.predicate*, %struct.predicate** %2, align 8
  %5 = getelementptr inbounds %struct.predicate, %struct.predicate* %4, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = load %struct.predicate*, %struct.predicate** %2, align 8
  %8 = getelementptr inbounds %struct.predicate, %struct.predicate* %7, i32 0, i32 12
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  %11 = select i1 %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str10111, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str11112, i32 0, i32 0)
  %12 = load %struct.predicate*, %struct.predicate** %2, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 12
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %20

; <label>:16                                      ; preds = %0
  %17 = load %struct.predicate*, %struct.predicate** %2, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 12
  %19 = load i8*, i8** %18, align 8
  br label %21

; <label>:20                                      ; preds = %0
  br label %21

; <label>:21                                      ; preds = %20, %16
  %22 = phi i8* [ %19, %16 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str11112, i32 0, i32 0), %20 ]
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str9110, i32 0, i32 0), i8* %6, i8* %11, i8* %22)
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.predicate* @get_eval_tree() #0 {
  %1 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  ret %struct.predicate* %1
}

; Function Attrs: nounwind uwtable
define float @calculate_derived_rates(%struct.predicate* %p) #0 {
  %1 = alloca float, align 4
  %2 = alloca %struct.predicate*, align 8
  %rate = alloca float, align 4
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = icmp ne %struct.predicate* null, %3
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  br label %8

; <label>:6                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str12113, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1102, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %8

; <label>:8                                       ; preds = %7, %5
  %9 = load %struct.predicate*, %struct.predicate** %2, align 8
  %10 = getelementptr inbounds %struct.predicate, %struct.predicate* %9, i32 0, i32 16
  %11 = load %struct.predicate*, %struct.predicate** %10, align 8
  %12 = icmp ne %struct.predicate* %11, null
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %8
  %14 = load %struct.predicate*, %struct.predicate** %2, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 16
  %16 = load %struct.predicate*, %struct.predicate** %15, align 8
  %17 = call float @calculate_derived_rates(%struct.predicate* %16)
  br label %18

; <label>:18                                      ; preds = %13, %8
  %19 = load %struct.predicate*, %struct.predicate** %2, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 15
  %21 = load %struct.predicate*, %struct.predicate** %20, align 8
  %22 = icmp ne %struct.predicate* %21, null
  br i1 %22, label %23, label %28

; <label>:23                                      ; preds = %18
  %24 = load %struct.predicate*, %struct.predicate** %2, align 8
  %25 = getelementptr inbounds %struct.predicate, %struct.predicate* %24, i32 0, i32 15
  %26 = load %struct.predicate*, %struct.predicate** %25, align 8
  %27 = call float @calculate_derived_rates(%struct.predicate* %26)
  br label %28

; <label>:28                                      ; preds = %23, %18
  %29 = load %struct.predicate*, %struct.predicate** %2, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp ne i32 %31, 5
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %28
  br label %36

; <label>:34                                      ; preds = %28
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str14115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1109, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %36

; <label>:36                                      ; preds = %35, %33
  %37 = load %struct.predicate*, %struct.predicate** %2, align 8
  %38 = getelementptr inbounds %struct.predicate, %struct.predicate* %37, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp ne i32 %39, 4
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %36
  br label %44

; <label>:42                                      ; preds = %36
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str15116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1110, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %44

; <label>:44                                      ; preds = %43, %41
  %45 = load %struct.predicate*, %struct.predicate** %2, align 8
  %46 = getelementptr inbounds %struct.predicate, %struct.predicate* %45, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  switch i32 %47, label %171 [
    i32 0, label %48
    i32 1, label %68
    i32 2, label %88
    i32 3, label %118
    i32 4, label %165
    i32 5, label %165
  ]

; <label>:48                                      ; preds = %44
  %49 = load %struct.predicate*, %struct.predicate** %2, align 8
  %50 = getelementptr inbounds %struct.predicate, %struct.predicate* %49, i32 0, i32 16
  %51 = load %struct.predicate*, %struct.predicate** %50, align 8
  %52 = icmp eq %struct.predicate* null, %51
  br i1 %52, label %53, label %54

; <label>:53                                      ; preds = %48
  br label %56

; <label>:54                                      ; preds = %48
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str16117, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1115, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %56

; <label>:56                                      ; preds = %55, %53
  %57 = load %struct.predicate*, %struct.predicate** %2, align 8
  %58 = getelementptr inbounds %struct.predicate, %struct.predicate* %57, i32 0, i32 15
  %59 = load %struct.predicate*, %struct.predicate** %58, align 8
  %60 = icmp eq %struct.predicate* null, %59
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %56
  br label %64

; <label>:62                                      ; preds = %56
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str17118, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1116, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %64

; <label>:64                                      ; preds = %63, %61
  %65 = load %struct.predicate*, %struct.predicate** %2, align 8
  %66 = getelementptr inbounds %struct.predicate, %struct.predicate* %65, i32 0, i32 9
  %67 = load float, float* %66, align 4
  store float %67, float* %1
  br label %172

; <label>:68                                      ; preds = %44
  %69 = load %struct.predicate*, %struct.predicate** %2, align 8
  %70 = getelementptr inbounds %struct.predicate, %struct.predicate* %69, i32 0, i32 16
  %71 = load %struct.predicate*, %struct.predicate** %70, align 8
  %72 = icmp eq %struct.predicate* null, %71
  br i1 %72, label %73, label %74

; <label>:73                                      ; preds = %68
  br label %76

; <label>:74                                      ; preds = %68
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str16117, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1120, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %76

; <label>:76                                      ; preds = %75, %73
  %77 = load %struct.predicate*, %struct.predicate** %2, align 8
  %78 = getelementptr inbounds %struct.predicate, %struct.predicate* %77, i32 0, i32 15
  %79 = load %struct.predicate*, %struct.predicate** %78, align 8
  %80 = icmp eq %struct.predicate* null, %79
  br i1 %80, label %81, label %82

; <label>:81                                      ; preds = %76
  br label %84

; <label>:82                                      ; preds = %76
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str17118, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1121, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %84

; <label>:84                                      ; preds = %83, %81
  %85 = load %struct.predicate*, %struct.predicate** %2, align 8
  %86 = getelementptr inbounds %struct.predicate, %struct.predicate* %85, i32 0, i32 9
  %87 = load float, float* %86, align 4
  store float %87, float* %1
  br label %172

; <label>:88                                      ; preds = %44
  %89 = load %struct.predicate*, %struct.predicate** %2, align 8
  %90 = getelementptr inbounds %struct.predicate, %struct.predicate* %89, i32 0, i32 0
  %91 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %90, align 8
  %92 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %91, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_negate to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %88
  br label %96

; <label>:94                                      ; preds = %88
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str18119, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1126, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %96

; <label>:96                                      ; preds = %95, %93
  %97 = load %struct.predicate*, %struct.predicate** %2, align 8
  %98 = getelementptr inbounds %struct.predicate, %struct.predicate* %97, i32 0, i32 15
  %99 = load %struct.predicate*, %struct.predicate** %98, align 8
  %100 = icmp eq %struct.predicate* null, %99
  br i1 %100, label %101, label %102

; <label>:101                                     ; preds = %96
  br label %104

; <label>:102                                     ; preds = %96
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str17118, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1127, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %104

; <label>:104                                     ; preds = %103, %101
  %105 = load %struct.predicate*, %struct.predicate** %2, align 8
  %106 = getelementptr inbounds %struct.predicate, %struct.predicate* %105, i32 0, i32 16
  %107 = load %struct.predicate*, %struct.predicate** %106, align 8
  %108 = getelementptr inbounds %struct.predicate, %struct.predicate* %107, i32 0, i32 9
  %109 = load float, float* %108, align 4
  %110 = fpext float %109 to double
  %111 = fsub double 1.000000e+00, %110
  %112 = fptrunc double %111 to float
  %113 = load %struct.predicate*, %struct.predicate** %2, align 8
  %114 = getelementptr inbounds %struct.predicate, %struct.predicate* %113, i32 0, i32 9
  store float %112, float* %114, align 4
  %115 = load %struct.predicate*, %struct.predicate** %2, align 8
  %116 = getelementptr inbounds %struct.predicate, %struct.predicate* %115, i32 0, i32 9
  %117 = load float, float* %116, align 4
  store float %117, float* %1
  br label %172

; <label>:118                                     ; preds = %44
  %119 = load %struct.predicate*, %struct.predicate** %2, align 8
  %120 = getelementptr inbounds %struct.predicate, %struct.predicate* %119, i32 0, i32 0
  %121 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %120, align 8
  %122 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %121, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %122, label %123, label %133

; <label>:123                                     ; preds = %118
  %124 = load %struct.predicate*, %struct.predicate** %2, align 8
  %125 = getelementptr inbounds %struct.predicate, %struct.predicate* %124, i32 0, i32 16
  %126 = load %struct.predicate*, %struct.predicate** %125, align 8
  %127 = call float @getrate(%struct.predicate* %126)
  %128 = load %struct.predicate*, %struct.predicate** %2, align 8
  %129 = getelementptr inbounds %struct.predicate, %struct.predicate* %128, i32 0, i32 15
  %130 = load %struct.predicate*, %struct.predicate** %129, align 8
  %131 = call float @getrate(%struct.predicate* %130)
  %132 = fmul float %127, %131
  store float %132, float* %rate, align 4
  br label %157

; <label>:133                                     ; preds = %118
  %134 = load %struct.predicate*, %struct.predicate** %2, align 8
  %135 = getelementptr inbounds %struct.predicate, %struct.predicate* %134, i32 0, i32 0
  %136 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %135, align 8
  %137 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %136, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_comma to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %137, label %138, label %139

; <label>:138                                     ; preds = %133
  store float 1.000000e+00, float* %rate, align 4
  br label %156

; <label>:139                                     ; preds = %133
  %140 = load %struct.predicate*, %struct.predicate** %2, align 8
  %141 = getelementptr inbounds %struct.predicate, %struct.predicate* %140, i32 0, i32 0
  %142 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %141, align 8
  %143 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %142, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %143, label %144, label %154

; <label>:144                                     ; preds = %139
  %145 = load %struct.predicate*, %struct.predicate** %2, align 8
  %146 = getelementptr inbounds %struct.predicate, %struct.predicate* %145, i32 0, i32 16
  %147 = load %struct.predicate*, %struct.predicate** %146, align 8
  %148 = call float @getrate(%struct.predicate* %147)
  %149 = load %struct.predicate*, %struct.predicate** %2, align 8
  %150 = getelementptr inbounds %struct.predicate, %struct.predicate* %149, i32 0, i32 15
  %151 = load %struct.predicate*, %struct.predicate** %150, align 8
  %152 = call float @getrate(%struct.predicate* %151)
  %153 = fadd float %148, %152
  store float %153, float* %rate, align 4
  br label %155

; <label>:154                                     ; preds = %139
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str19120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1150, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable

; <label>:155                                     ; preds = %144
  br label %156

; <label>:156                                     ; preds = %155, %138
  br label %157

; <label>:157                                     ; preds = %156, %123
  %158 = load float, float* %rate, align 4
  %159 = call float @constrain_rate(float %158)
  %160 = load %struct.predicate*, %struct.predicate** %2, align 8
  %161 = getelementptr inbounds %struct.predicate, %struct.predicate* %160, i32 0, i32 9
  store float %159, float* %161, align 4
  %162 = load %struct.predicate*, %struct.predicate** %2, align 8
  %163 = getelementptr inbounds %struct.predicate, %struct.predicate* %162, i32 0, i32 9
  %164 = load float, float* %163, align 4
  store float %164, float* %1
  br label %172

; <label>:165                                     ; preds = %44, %44
  %166 = load %struct.predicate*, %struct.predicate** %2, align 8
  %167 = getelementptr inbounds %struct.predicate, %struct.predicate* %166, i32 0, i32 9
  store float 1.000000e+00, float* %167, align 4
  %168 = load %struct.predicate*, %struct.predicate** %2, align 8
  %169 = getelementptr inbounds %struct.predicate, %struct.predicate* %168, i32 0, i32 9
  %170 = load float, float* %169, align 4
  store float %170, float* %1
  br label %172

; <label>:171                                     ; preds = %44
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str19120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1162, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.calculate_derived_rates, i32 0, i32 0)) #12
  unreachable

; <label>:172                                     ; preds = %165, %157, %104, %84, %64
  %173 = load float, float* %1
  ret float %173
}

; Function Attrs: nounwind uwtable
define %struct.predicate* @build_expression_tree(i32 %argc, i8** %argv, i32 %end_of_leading_options) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  %parse_entry = alloca %struct.parser_table*, align 8
  %predicate_name = alloca i8*, align 8
  %cur_pred = alloca %struct.predicate*, align 8
  %entry_close = alloca %struct.parser_table*, align 8
  %entry_print = alloca %struct.parser_table*, align 8
  %entry_open = alloca %struct.parser_table*, align 8
  %i = alloca i32, align 4
  %oldi = alloca i32, align 4
  store i32 %argc, i32* %1, align 4
  store i8** %argv, i8*** %2, align 8
  store i32 %end_of_leading_options, i32* %3, align 4
  store %struct.predicate* null, %struct.predicate** @predicates, align 8
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %i, align 4
  br label %5

; <label>:5                                       ; preds = %17, %0
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %1, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %20

; <label>:9                                       ; preds = %5
  %10 = load i32, i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = load i8**, i8*** %2, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 %11
  %14 = load i8*, i8** %13, align 8
  %15 = call zeroext i1 @looks_like_expression(i8* %14, i1 zeroext true)
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %9
  br label %17

; <label>:17                                      ; preds = %16
  %18 = load i32, i32* %i, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %5

; <label>:20                                      ; preds = %9, %5
  %21 = call %struct.parser_table* @find_parser(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str20121, i32 0, i32 0))
  store %struct.parser_table* %21, %struct.parser_table** %entry_open, align 8
  %22 = call %struct.parser_table* @find_parser(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str21122, i32 0, i32 0))
  store %struct.parser_table* %22, %struct.parser_table** %entry_close, align 8
  %23 = call %struct.parser_table* @find_parser(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str22123, i32 0, i32 0))
  store %struct.parser_table* %23, %struct.parser_table** %entry_print, align 8
  %24 = load %struct.parser_table*, %struct.parser_table** %entry_open, align 8
  %25 = icmp ne %struct.parser_table* %24, null
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %20
  br label %29

; <label>:27                                      ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str23124, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1213, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__.build_expression_tree, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %29

; <label>:29                                      ; preds = %28, %26
  %30 = load %struct.parser_table*, %struct.parser_table** %entry_close, align 8
  %31 = icmp ne %struct.parser_table* %30, null
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %29
  br label %35

; <label>:33                                      ; preds = %29
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str24125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1214, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__.build_expression_tree, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %35

; <label>:35                                      ; preds = %34, %32
  %36 = load %struct.parser_table*, %struct.parser_table** %entry_print, align 8
  %37 = icmp ne %struct.parser_table* %36, null
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %35
  br label %41

; <label>:39                                      ; preds = %35
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str25126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1215, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__.build_expression_tree, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %41

; <label>:41                                      ; preds = %40, %38
  %42 = load %struct.parser_table*, %struct.parser_table** %entry_open, align 8
  %43 = load i8**, i8*** %2, align 8
  %44 = call zeroext i1 @parse_openparen(%struct.parser_table* %42, i8** %43, i32* %1)
  %45 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %46 = getelementptr inbounds %struct.predicate, %struct.predicate* %45, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str20121, i32 0, i32 0), i8** %46, align 8
  %47 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  %48 = getelementptr inbounds %struct.predicate, %struct.predicate* %47, i32 0, i32 11
  store i8 1, i8* %48, align 1
  %49 = load i8**, i8*** %2, align 8
  %50 = load i32, i32* %1, align 4
  %51 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %52 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void @parse_begin_user_args(i8** %49, i32 %50, %struct.predicate* %51, %struct.predicate* %52)
  %53 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %53)
  br label %54

; <label>:54                                      ; preds = %153, %41
  %55 = load i32, i32* %i, align 4
  %56 = load i32, i32* %1, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %156

; <label>:58                                      ; preds = %54
  %59 = load i32, i32* %i, align 4
  %60 = sext i32 %59 to i64
  %61 = load i8**, i8*** %2, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 %60
  %63 = load i8*, i8** %62, align 8
  %64 = call zeroext i1 @looks_like_expression(i8* %63, i1 zeroext false)
  br i1 %64, label %73, label %65

; <label>:65                                      ; preds = %58
  %66 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str26127, i32 0, i32 0)) #9
  %67 = load i32, i32* %i, align 4
  %68 = sext i32 %67 to i64
  %69 = load i8**, i8*** %2, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 %68
  %71 = load i8*, i8** %70, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %66, i8* %71)
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  call void @usage(%struct._IO_FILE* %72, i32 1, i8* null)
  br label %73

; <label>:73                                      ; preds = %65, %58
  %74 = load i32, i32* %i, align 4
  %75 = sext i32 %74 to i64
  %76 = load i8**, i8*** %2, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i64 %75
  %78 = load i8*, i8** %77, align 8
  store i8* %78, i8** %predicate_name, align 8
  %79 = load i8*, i8** %predicate_name, align 8
  %80 = call %struct.parser_table* @find_parser(i8* %79)
  store %struct.parser_table* %80, %struct.parser_table** %parse_entry, align 8
  %81 = load %struct.parser_table*, %struct.parser_table** %parse_entry, align 8
  %82 = icmp eq %struct.parser_table* %81, null
  br i1 %82, label %83, label %86

; <label>:83                                      ; preds = %73
  %84 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str27128, i32 0, i32 0)) #9
  %85 = load i8*, i8** %predicate_name, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %84, i8* %85)
  br label %86

; <label>:86                                      ; preds = %83, %73
  %87 = load %struct.parser_table*, %struct.parser_table** %parse_entry, align 8
  %88 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp ne i32 %89, 4
  br i1 %90, label %91, label %94

; <label>:91                                      ; preds = %86
  %92 = load i32, i32* %i, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %i, align 4
  br label %94

; <label>:94                                      ; preds = %91, %86
  %95 = load i32, i32* %i, align 4
  store i32 %95, i32* %oldi, align 4
  %96 = load %struct.parser_table*, %struct.parser_table** %parse_entry, align 8
  %97 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %96, i32 0, i32 2
  %98 = load i1 (%struct.parser_table*, i8**, i32*)*, i1 (%struct.parser_table*, i8**, i32*)** %97, align 8
  %99 = load %struct.parser_table*, %struct.parser_table** %parse_entry, align 8
  %100 = load i8**, i8*** %2, align 8
  %101 = call zeroext i1 %98(%struct.parser_table* %99, i8** %100, i32* %i)
  br i1 %101, label %134, label %102

; <label>:102                                     ; preds = %94
  %103 = load i32, i32* %i, align 4
  %104 = sext i32 %103 to i64
  %105 = load i8**, i8*** %2, align 8
  %106 = getelementptr inbounds i8*, i8** %105, i64 %104
  %107 = load i8*, i8** %106, align 8
  %108 = icmp ne i8* %107, null
  br i1 %108, label %109, label %130

; <label>:109                                     ; preds = %102
  %110 = load %struct.parser_table*, %struct.parser_table** %parse_entry, align 8
  %111 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 4, %112
  br i1 %113, label %114, label %121

; <label>:114                                     ; preds = %109
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %oldi, align 4
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %118, label %121

; <label>:118                                     ; preds = %114
  %119 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str28129, i32 0, i32 0)) #9
  %120 = load i8*, i8** %predicate_name, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %119, i8* %120)
  br label %129

; <label>:121                                     ; preds = %114, %109
  %122 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str29130, i32 0, i32 0)) #9
  %123 = load i32, i32* %i, align 4
  %124 = sext i32 %123 to i64
  %125 = load i8**, i8*** %2, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 %124
  %127 = load i8*, i8** %126, align 8
  %128 = load i8*, i8** %predicate_name, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %122, i8* %127, i8* %128)
  br label %129

; <label>:129                                     ; preds = %121, %118
  br label %133

; <label>:130                                     ; preds = %102
  %131 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str30131, i32 0, i32 0)) #9
  %132 = load i8*, i8** %predicate_name, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %131, i8* %132)
  br label %133

; <label>:133                                     ; preds = %130, %129
  br label %153

; <label>:134                                     ; preds = %94
  %135 = load i8*, i8** %predicate_name, align 8
  %136 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %137 = getelementptr inbounds %struct.predicate, %struct.predicate* %136, i32 0, i32 1
  store i8* %135, i8** %137, align 8
  %138 = load i32, i32* %i, align 4
  %139 = load i32, i32* %oldi, align 4
  %140 = icmp ne i32 %138, %139
  br i1 %140, label %141, label %149

; <label>:141                                     ; preds = %134
  %142 = load i32, i32* %oldi, align 4
  %143 = sext i32 %142 to i64
  %144 = load i8**, i8*** %2, align 8
  %145 = getelementptr inbounds i8*, i8** %144, i64 %143
  %146 = load i8*, i8** %145, align 8
  %147 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %148 = getelementptr inbounds %struct.predicate, %struct.predicate* %147, i32 0, i32 12
  store i8* %146, i8** %148, align 8
  br label %152

; <label>:149                                     ; preds = %134
  %150 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %151 = getelementptr inbounds %struct.predicate, %struct.predicate* %150, i32 0, i32 12
  store i8* null, i8** %151, align 8
  br label %152

; <label>:152                                     ; preds = %149, %141
  br label %153

; <label>:153                                     ; preds = %152, %133
  %154 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %154)
  %155 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %155)
  br label %54

; <label>:156                                     ; preds = %54
  %157 = load i8**, i8*** %2, align 8
  %158 = load i32, i32* %1, align 4
  %159 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %160 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void @parse_end_user_args(i8** %157, i32 %158, %struct.predicate* %159, %struct.predicate* %160)
  %161 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  %162 = getelementptr inbounds %struct.predicate, %struct.predicate* %161, i32 0, i32 14
  %163 = load %struct.predicate*, %struct.predicate** %162, align 8
  %164 = icmp eq %struct.predicate* %163, null
  br i1 %164, label %165, label %179

; <label>:165                                     ; preds = %156
  %166 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  store %struct.predicate* %166, %struct.predicate** %cur_pred, align 8
  %167 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  %168 = getelementptr inbounds %struct.predicate, %struct.predicate* %167, i32 0, i32 14
  %169 = load %struct.predicate*, %struct.predicate** %168, align 8
  store %struct.predicate* %169, %struct.predicate** @last_pred, align 8
  store %struct.predicate* %169, %struct.predicate** @predicates, align 8
  %170 = load %struct.predicate*, %struct.predicate** %cur_pred, align 8
  %171 = bitcast %struct.predicate* %170 to i8*
  call void @free(i8* %171) #9
  %172 = load %struct.parser_table*, %struct.parser_table** %entry_print, align 8
  %173 = load i8**, i8*** %2, align 8
  %174 = call zeroext i1 @parse_print(%struct.parser_table* %172, i8** %173, i32* %1)
  %175 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %176 = getelementptr inbounds %struct.predicate, %struct.predicate* %175, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str31132, i32 0, i32 0), i8** %176, align 8
  %177 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %177)
  %178 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %178)
  br label %211

; <label>:179                                     ; preds = %156
  %180 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  %181 = getelementptr inbounds %struct.predicate, %struct.predicate* %180, i32 0, i32 14
  %182 = load %struct.predicate*, %struct.predicate** %181, align 8
  %183 = call zeroext i1 @default_prints(%struct.predicate* %182)
  br i1 %183, label %192, label %184

; <label>:184                                     ; preds = %179
  %185 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  store %struct.predicate* %185, %struct.predicate** %cur_pred, align 8
  %186 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  %187 = getelementptr inbounds %struct.predicate, %struct.predicate* %186, i32 0, i32 14
  %188 = load %struct.predicate*, %struct.predicate** %187, align 8
  store %struct.predicate* %188, %struct.predicate** @predicates, align 8
  %189 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %189)
  %190 = load %struct.predicate*, %struct.predicate** %cur_pred, align 8
  %191 = bitcast %struct.predicate* %190 to i8*
  call void @free(i8* %191) #9
  br label %210

; <label>:192                                     ; preds = %179
  %193 = load %struct.parser_table*, %struct.parser_table** %entry_close, align 8
  %194 = load i8**, i8*** %2, align 8
  %195 = call zeroext i1 @parse_closeparen(%struct.parser_table* %193, i8** %194, i32* %1)
  %196 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %197 = getelementptr inbounds %struct.predicate, %struct.predicate* %196, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str21122, i32 0, i32 0), i8** %197, align 8
  %198 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %199 = getelementptr inbounds %struct.predicate, %struct.predicate* %198, i32 0, i32 11
  store i8 1, i8* %199, align 1
  %200 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %200)
  %201 = load %struct.parser_table*, %struct.parser_table** %entry_print, align 8
  %202 = load i8**, i8*** %2, align 8
  %203 = call zeroext i1 @parse_print(%struct.parser_table* %201, i8** %202, i32* %1)
  %204 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %205 = getelementptr inbounds %struct.predicate, %struct.predicate* %204, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str31132, i32 0, i32 0), i8** %205, align 8
  %206 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %207 = getelementptr inbounds %struct.predicate, %struct.predicate* %206, i32 0, i32 11
  store i8 1, i8* %207, align 1
  %208 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %208)
  %209 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %209)
  br label %210

; <label>:210                                     ; preds = %192, %184
  br label %211

; <label>:211                                     ; preds = %210, %165
  %212 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %213 = and i64 %212, 9
  %214 = icmp ne i64 %213, 0
  br i1 %214, label %215, label %220

; <label>:215                                     ; preds = %211
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %217 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %216, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str32133, i32 0, i32 0))
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %219 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void bitcast (void (%struct._IO_FILE*, %struct.predicate.16*)* @print_list to void (%struct._IO_FILE*, %struct.predicate*)*)(%struct._IO_FILE* %218, %struct.predicate* %219)
  br label %220

; <label>:220                                     ; preds = %215, %211
  %221 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void @check_option_combinations(%struct.predicate* %221)
  %222 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  call void bitcast (void (%struct.predicate.16*)* @pred_sanity_check to void (%struct.predicate*)*)(%struct.predicate* %222)
  %223 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  store %struct.predicate* %223, %struct.predicate** %cur_pred, align 8
  %224 = call %struct.predicate* @get_expr(%struct.predicate** %cur_pred, i16 signext 0, %struct.predicate* null)
  store %struct.predicate* %224, %struct.predicate** @eval_tree, align 8
  %225 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  %226 = call float @calculate_derived_rates(%struct.predicate* %225)
  %227 = load %struct.predicate*, %struct.predicate** %cur_pred, align 8
  %228 = icmp ne %struct.predicate* %227, null
  br i1 %228, label %229, label %250

; <label>:229                                     ; preds = %220
  %230 = load %struct.predicate*, %struct.predicate** %cur_pred, align 8
  %231 = getelementptr inbounds %struct.predicate, %struct.predicate* %230, i32 0, i32 0
  %232 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %231, align 8
  %233 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %232, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_closeparen to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %233, label %234, label %236

; <label>:234                                     ; preds = %229
  %235 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str33134, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %235)
  br label %249

; <label>:236                                     ; preds = %229
  %237 = load %struct.predicate*, %struct.predicate** %cur_pred, align 8
  %238 = getelementptr inbounds %struct.predicate, %struct.predicate* %237, i32 0, i32 1
  %239 = load i8*, i8** %238, align 8
  %240 = icmp ne i8* %239, null
  br i1 %240, label %241, label %246

; <label>:241                                     ; preds = %236
  %242 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str34135, i32 0, i32 0)) #9
  %243 = load %struct.predicate*, %struct.predicate** %cur_pred, align 8
  %244 = getelementptr inbounds %struct.predicate, %struct.predicate* %243, i32 0, i32 1
  %245 = load i8*, i8** %244, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %242, i8* %245)
  br label %248

; <label>:246                                     ; preds = %236
  %247 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str35136, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %247)
  br label %248

; <label>:248                                     ; preds = %246, %241
  br label %249

; <label>:249                                     ; preds = %248, %234
  br label %250

; <label>:250                                     ; preds = %249, %220
  %251 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %252 = and i64 %251, 9
  %253 = icmp ne i64 %252, 0
  br i1 %253, label %254, label %259

; <label>:254                                     ; preds = %250
  %255 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %256 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %255, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str36137, i32 0, i32 0))
  %257 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %258 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  call void @print_tree(%struct._IO_FILE* %257, %struct.predicate* %258, i32 0)
  br label %259

; <label>:259                                     ; preds = %254, %250
  %260 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  call void @estimate_costs(%struct.predicate* %260)
  %261 = call zeroext i1 @opt_expr(%struct.predicate** @eval_tree)
  %262 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  call void @check_normalization(%struct.predicate* %262, i1 zeroext true)
  %263 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  %264 = call zeroext i1 @do_arm_swaps(%struct.predicate* %263)
  %265 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  call void @check_normalization(%struct.predicate* %265, i1 zeroext true)
  %266 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %267 = and i64 %266, 9
  %268 = icmp ne i64 %267, 0
  br i1 %268, label %269, label %280

; <label>:269                                     ; preds = %259
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %271 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %270, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str37138, i32 0, i32 0))
  %272 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %273 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  call void @print_tree(%struct._IO_FILE* %272, %struct.predicate* %273, i32 0)
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %275 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %274, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str38139, i32 0, i32 0))
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %277 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  call void bitcast (void (%struct._IO_FILE*, %struct.predicate.16*)* @print_optlist to void (%struct._IO_FILE*, %struct.predicate*)*)(%struct._IO_FILE* %276, %struct.predicate* %277)
  %278 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %279 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %278, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str39140, i32 0, i32 0))
  br label %280

; <label>:280                                     ; preds = %269, %259
  %281 = load %struct.predicate*, %struct.predicate** @eval_tree, align 8
  ret %struct.predicate* %281
}

; Function Attrs: nounwind uwtable
define void @print_tree(%struct._IO_FILE* %fp, %struct.predicate* %node, i32 %indent) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct.predicate*, align 8
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  %comma = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  store %struct.predicate* %node, %struct.predicate** %2, align 8
  store i32 %indent, i32* %3, align 4
  %4 = load %struct.predicate*, %struct.predicate** %2, align 8
  %5 = icmp eq %struct.predicate* %4, null
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %151

; <label>:7                                       ; preds = %0
  store i32 0, i32* %i, align 4
  br label %8

; <label>:8                                       ; preds = %15, %7
  %9 = load i32, i32* %i, align 4
  %10 = load i32, i32* %3, align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %18

; <label>:12                                      ; preds = %8
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str56157, i32 0, i32 0))
  br label %15

; <label>:15                                      ; preds = %12
  %16 = load i32, i32* %i, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %i, align 4
  br label %8

; <label>:18                                      ; preds = %8
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str57158, i32 0, i32 0))
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %22 = load %struct.predicate*, %struct.predicate** %2, align 8
  call void @print_predicate(%struct._IO_FILE* %21, %struct.predicate* %22)
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %24 = load %struct.predicate*, %struct.predicate** %2, align 8
  %25 = getelementptr inbounds %struct.predicate, %struct.predicate* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = call i8* @type_name(i32 %26)
  %28 = load %struct.predicate*, %struct.predicate** %2, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = call i8* @prec_name(i32 %30)
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str58159, i32 0, i32 0), i8* %27, i8* %31)
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %34 = load %struct.predicate*, %struct.predicate** %2, align 8
  %35 = getelementptr inbounds %struct.predicate, %struct.predicate* %34, i32 0, i32 8
  %36 = load i32, i32* %35, align 4
  %37 = call i8* @cost_name(i32 %36)
  %38 = load %struct.predicate*, %struct.predicate** %2, align 8
  %39 = getelementptr inbounds %struct.predicate, %struct.predicate* %38, i32 0, i32 9
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  %42 = load %struct.predicate*, %struct.predicate** %2, align 8
  %43 = getelementptr inbounds %struct.predicate, %struct.predicate* %42, i32 0, i32 4
  %44 = load i8, i8* %43, align 1
  %45 = trunc i8 %44 to i1
  %46 = select i1 %45, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str11112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str60161, i32 0, i32 0)
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str59160, i32 0, i32 0), i8* %37, double %41, i8* %46)
  %48 = load %struct.predicate*, %struct.predicate** %2, align 8
  %49 = getelementptr inbounds %struct.predicate, %struct.predicate* %48, i32 0, i32 6
  %50 = load i8, i8* %49, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %57, label %52

; <label>:52                                      ; preds = %18
  %53 = load %struct.predicate*, %struct.predicate** %2, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 7
  %55 = load i8, i8* %54, align 1
  %56 = trunc i8 %55 to i1
  br i1 %56, label %57, label %79

; <label>:57                                      ; preds = %52, %18
  store i32 0, i32* %comma, align 4
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str61162, i32 0, i32 0))
  %60 = load %struct.predicate*, %struct.predicate** %2, align 8
  %61 = getelementptr inbounds %struct.predicate, %struct.predicate* %60, i32 0, i32 6
  %62 = load i8, i8* %61, align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %64, label %67

; <label>:64                                      ; preds = %57
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str62163, i32 0, i32 0))
  store i32 1, i32* %comma, align 4
  br label %67

; <label>:67                                      ; preds = %64, %57
  %68 = load %struct.predicate*, %struct.predicate** %2, align 8
  %69 = getelementptr inbounds %struct.predicate, %struct.predicate* %68, i32 0, i32 7
  %70 = load i8, i8* %69, align 1
  %71 = trunc i8 %70 to i1
  br i1 %71, label %72, label %78

; <label>:72                                      ; preds = %67
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %74 = load i32, i32* %comma, align 4
  %75 = icmp ne i32 %74, 0
  %76 = select i1 %75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str64165, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str11112, i32 0, i32 0)
  %77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str63164, i32 0, i32 0), i8* %76)
  br label %78

; <label>:78                                      ; preds = %72, %67
  br label %79

; <label>:79                                      ; preds = %78, %52
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str39140, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %82

; <label>:82                                      ; preds = %89, %79
  %83 = load i32, i32* %i, align 4
  %84 = load i32, i32* %3, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %86, label %92

; <label>:86                                      ; preds = %82
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str56157, i32 0, i32 0))
  br label %89

; <label>:89                                      ; preds = %86
  %90 = load i32, i32* %i, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %i, align 4
  br label %82

; <label>:92                                      ; preds = %82
  %93 = load %struct.predicate*, %struct.predicate** %2, align 8
  %94 = getelementptr inbounds %struct.predicate, %struct.predicate* %93, i32 0, i32 15
  %95 = load %struct.predicate*, %struct.predicate** %94, align 8
  %96 = icmp eq %struct.predicate* null, %95
  br i1 %96, label %97, label %105

; <label>:97                                      ; preds = %92
  %98 = load %struct.predicate*, %struct.predicate** %2, align 8
  %99 = getelementptr inbounds %struct.predicate, %struct.predicate* %98, i32 0, i32 16
  %100 = load %struct.predicate*, %struct.predicate** %99, align 8
  %101 = icmp eq %struct.predicate* null, %100
  br i1 %101, label %102, label %105

; <label>:102                                     ; preds = %97
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %103, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str65166, i32 0, i32 0))
  br label %151

; <label>:105                                     ; preds = %97, %92
  %106 = load %struct.predicate*, %struct.predicate** %2, align 8
  %107 = getelementptr inbounds %struct.predicate, %struct.predicate* %106, i32 0, i32 15
  %108 = load %struct.predicate*, %struct.predicate** %107, align 8
  %109 = icmp ne %struct.predicate* %108, null
  br i1 %109, label %110, label %119

; <label>:110                                     ; preds = %105
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str66167, i32 0, i32 0))
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %114 = load %struct.predicate*, %struct.predicate** %2, align 8
  %115 = getelementptr inbounds %struct.predicate, %struct.predicate* %114, i32 0, i32 15
  %116 = load %struct.predicate*, %struct.predicate** %115, align 8
  %117 = load i32, i32* %3, align 4
  %118 = add nsw i32 %117, 1
  call void @print_tree(%struct._IO_FILE* %113, %struct.predicate* %116, i32 %118)
  br label %122

; <label>:119                                     ; preds = %105
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %120, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str67168, i32 0, i32 0))
  br label %122

; <label>:122                                     ; preds = %119, %110
  store i32 0, i32* %i, align 4
  br label %123

; <label>:123                                     ; preds = %130, %122
  %124 = load i32, i32* %i, align 4
  %125 = load i32, i32* %3, align 4
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %127, label %133

; <label>:127                                     ; preds = %123
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str56157, i32 0, i32 0))
  br label %130

; <label>:130                                     ; preds = %127
  %131 = load i32, i32* %i, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %i, align 4
  br label %123

; <label>:133                                     ; preds = %123
  %134 = load %struct.predicate*, %struct.predicate** %2, align 8
  %135 = getelementptr inbounds %struct.predicate, %struct.predicate* %134, i32 0, i32 16
  %136 = load %struct.predicate*, %struct.predicate** %135, align 8
  %137 = icmp ne %struct.predicate* %136, null
  br i1 %137, label %138, label %147

; <label>:138                                     ; preds = %133
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str68169, i32 0, i32 0))
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %142 = load %struct.predicate*, %struct.predicate** %2, align 8
  %143 = getelementptr inbounds %struct.predicate, %struct.predicate* %142, i32 0, i32 16
  %144 = load %struct.predicate*, %struct.predicate** %143, align 8
  %145 = load i32, i32* %3, align 4
  %146 = add nsw i32 %145, 1
  call void @print_tree(%struct._IO_FILE* %141, %struct.predicate* %144, i32 %146)
  br label %150

; <label>:147                                     ; preds = %133
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %148, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str69170, i32 0, i32 0))
  br label %150

; <label>:150                                     ; preds = %147, %138
  br label %151

; <label>:151                                     ; preds = %150, %102, %6
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.predicate* @get_new_pred(%struct.parser_table* %entry) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %new_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  %2 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %3 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %4 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str40141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1412, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.get_new_pred, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %12 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 2
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %10
  br label %18

; <label>:16                                      ; preds = %10
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str41142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1413, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.get_new_pred, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %18

; <label>:18                                      ; preds = %17, %15
  %19 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  %20 = icmp eq %struct.predicate* %19, null
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %18
  %22 = call noalias i8* @xmalloc(i64 280)
  %23 = bitcast i8* %22 to %struct.predicate*
  store %struct.predicate* %23, %struct.predicate** @predicates, align 8
  %24 = load %struct.predicate*, %struct.predicate** @predicates, align 8
  store %struct.predicate* %24, %struct.predicate** @last_pred, align 8
  br label %32

; <label>:25                                      ; preds = %18
  %26 = call noalias i8* @xmalloc(i64 280)
  %27 = bitcast i8* %26 to %struct.predicate*
  store %struct.predicate* %27, %struct.predicate** %new_pred, align 8
  %28 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %29 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 14
  store %struct.predicate* %28, %struct.predicate** %30, align 8
  %31 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  store %struct.predicate* %31, %struct.predicate** @last_pred, align 8
  br label %32

; <label>:32                                      ; preds = %25, %21
  %33 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %34 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %35 = getelementptr inbounds %struct.predicate, %struct.predicate* %34, i32 0, i32 18
  store %struct.parser_table* %33, %struct.parser_table** %35, align 8
  %36 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %37 = getelementptr inbounds %struct.predicate, %struct.predicate* %36, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* null, i1 (i8*, %struct.stat*, %struct.predicate*)** %37, align 8
  %38 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %39 = getelementptr inbounds %struct.predicate, %struct.predicate* %38, i32 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %41 = getelementptr inbounds %struct.predicate, %struct.predicate* %40, i32 0, i32 2
  store i32 0, i32* %41, align 4
  %42 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %43 = getelementptr inbounds %struct.predicate, %struct.predicate* %42, i32 0, i32 3
  store i32 0, i32* %43, align 4
  %44 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %45 = getelementptr inbounds %struct.predicate, %struct.predicate* %44, i32 0, i32 4
  store i8 0, i8* %45, align 1
  %46 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %47 = getelementptr inbounds %struct.predicate, %struct.predicate* %46, i32 0, i32 5
  store i8 0, i8* %47, align 1
  %48 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %49 = getelementptr inbounds %struct.predicate, %struct.predicate* %48, i32 0, i32 6
  store i8 1, i8* %49, align 1
  %50 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %51 = getelementptr inbounds %struct.predicate, %struct.predicate* %50, i32 0, i32 7
  store i8 1, i8* %51, align 1
  %52 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %53 = getelementptr inbounds %struct.predicate, %struct.predicate* %52, i32 0, i32 13
  %54 = bitcast %union.anon* %53 to i8**
  store i8* null, i8** %54, align 8
  %55 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %56 = getelementptr inbounds %struct.predicate, %struct.predicate* %55, i32 0, i32 14
  store %struct.predicate* null, %struct.predicate** %56, align 8
  %57 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %58 = getelementptr inbounds %struct.predicate, %struct.predicate* %57, i32 0, i32 15
  store %struct.predicate* null, %struct.predicate** %58, align 8
  %59 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %60 = getelementptr inbounds %struct.predicate, %struct.predicate* %59, i32 0, i32 16
  store %struct.predicate* null, %struct.predicate** %60, align 8
  %61 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 7), align 1
  %62 = trunc i8 %61 to i1
  %63 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %64 = getelementptr inbounds %struct.predicate, %struct.predicate* %63, i32 0, i32 10
  %65 = zext i1 %62 to i8
  store i8 %65, i8* %64, align 1
  %66 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %67 = getelementptr inbounds %struct.predicate, %struct.predicate* %66, i32 0, i32 11
  store i8 0, i8* %67, align 1
  %68 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %69 = getelementptr inbounds %struct.predicate, %struct.predicate* %68, i32 0, i32 9
  store float 1.000000e+00, float* %69, align 4
  %70 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  call void @init_pred_perf(%struct.predicate* %70)
  %71 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  ret %struct.predicate* %71
}

; Function Attrs: nounwind uwtable
define %struct.predicate* @get_new_pred_chk_op(%struct.parser_table* %entry) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %new_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  %2 = load %struct.parser_table*, %struct.parser_table** @get_new_pred_chk_op.entry_and, align 8
  %3 = icmp eq %struct.parser_table* null, %2
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = call %struct.parser_table* @find_parser(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str42143, i32 0, i32 0))
  store %struct.parser_table* %5, %struct.parser_table** @get_new_pred_chk_op.entry_and, align 8
  br label %6

; <label>:6                                       ; preds = %4, %0
  %7 = load %struct.parser_table*, %struct.parser_table** @get_new_pred_chk_op.entry_and, align 8
  %8 = icmp ne %struct.parser_table* %7, null
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str43144, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1462, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.get_new_pred_chk_op, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %14 = icmp ne %struct.predicate* %13, null
  br i1 %14, label %15, label %45

; <label>:15                                      ; preds = %12
  %16 = load %struct.predicate*, %struct.predicate** @last_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %43 [
    i32 0, label %19
    i32 1, label %21
    i32 5, label %21
  ]

; <label>:19                                      ; preds = %15
  %20 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str44145, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %20)
  br label %44

; <label>:21                                      ; preds = %15, %15
  %22 = load %struct.parser_table*, %struct.parser_table** @get_new_pred_chk_op.entry_and, align 8
  %23 = call %struct.predicate* @get_new_pred(%struct.parser_table* %22)
  store %struct.predicate* %23, %struct.predicate** %new_pred, align 8
  %24 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %25 = getelementptr inbounds %struct.predicate, %struct.predicate* %24, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %25, align 8
  %26 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %27 = getelementptr inbounds %struct.predicate, %struct.predicate* %26, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str45146, i32 0, i32 0), i8** %27, align 8
  %28 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 2
  store i32 3, i32* %29, align 4
  %30 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %31 = getelementptr inbounds %struct.predicate, %struct.predicate* %30, i32 0, i32 3
  store i32 3, i32* %31, align 4
  %32 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %33 = getelementptr inbounds %struct.predicate, %struct.predicate* %32, i32 0, i32 6
  store i8 0, i8* %33, align 1
  %34 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %35 = getelementptr inbounds %struct.predicate, %struct.predicate* %34, i32 0, i32 7
  store i8 0, i8* %35, align 1
  %36 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %37 = getelementptr inbounds %struct.predicate, %struct.predicate* %36, i32 0, i32 13
  %38 = bitcast %union.anon* %37 to i8**
  store i8* null, i8** %38, align 8
  %39 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %40 = getelementptr inbounds %struct.predicate, %struct.predicate* %39, i32 0, i32 4
  store i8 0, i8* %40, align 1
  %41 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %42 = getelementptr inbounds %struct.predicate, %struct.predicate* %41, i32 0, i32 5
  store i8 0, i8* %42, align 1
  br label %44

; <label>:43                                      ; preds = %15
  br label %44

; <label>:44                                      ; preds = %43, %21, %19
  br label %45

; <label>:45                                      ; preds = %44, %12
  %46 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %47 = call %struct.predicate* @get_new_pred(%struct.parser_table* %46)
  store %struct.predicate* %47, %struct.predicate** %new_pred, align 8
  %48 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %49 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %50 = getelementptr inbounds %struct.predicate, %struct.predicate* %49, i32 0, i32 18
  store %struct.parser_table* %48, %struct.parser_table** %50, align 8
  %51 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  ret %struct.predicate* %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #7

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

declare i8* @bsearch(i8*, i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: nounwind uwtable
define internal %struct.predicate* @scan_rest(%struct.predicate** %input, %struct.predicate* %head, i16 signext %prev_prec) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca %struct.predicate**, align 8
  %3 = alloca %struct.predicate*, align 8
  %4 = alloca i16, align 2
  %tree = alloca %struct.predicate*, align 8
  %prev = alloca %struct.predicate*, align 8
  store %struct.predicate** %input, %struct.predicate*** %2, align 8
  store %struct.predicate* %head, %struct.predicate** %3, align 8
  store i16 %prev_prec, i16* %4, align 2
  %5 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %6 = load %struct.predicate*, %struct.predicate** %5, align 8
  %7 = icmp eq %struct.predicate* %6, null
  br i1 %7, label %14, label %8

; <label>:8                                       ; preds = %0
  %9 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %10 = load %struct.predicate*, %struct.predicate** %9, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %8, %0
  store %struct.predicate* null, %struct.predicate** %1
  br label %72

; <label>:15                                      ; preds = %8
  %16 = load %struct.predicate*, %struct.predicate** %3, align 8
  store %struct.predicate* %16, %struct.predicate** %tree, align 8
  br label %17

; <label>:17                                      ; preds = %69, %15
  %18 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %19 = load %struct.predicate*, %struct.predicate** %18, align 8
  %20 = icmp ne %struct.predicate* %19, null
  br i1 %20, label %21, label %29

; <label>:21                                      ; preds = %17
  %22 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %23 = load %struct.predicate*, %struct.predicate** %22, align 8
  %24 = getelementptr inbounds %struct.predicate, %struct.predicate* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = load i16, i16* %4, align 2
  %27 = sext i16 %26 to i32
  %28 = icmp sgt i32 %25, %27
  br label %29

; <label>:29                                      ; preds = %21, %17
  %30 = phi i1 [ false, %17 ], [ %28, %21 ]
  br i1 %30, label %31, label %70

; <label>:31                                      ; preds = %29
  %32 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %33 = load %struct.predicate*, %struct.predicate** %32, align 8
  %34 = getelementptr inbounds %struct.predicate, %struct.predicate* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  switch i32 %35, label %63 [
    i32 0, label %36
    i32 1, label %36
    i32 2, label %36
    i32 4, label %36
    i32 3, label %38
    i32 5, label %61
  ]

; <label>:36                                      ; preds = %31, %31, %31, %31
  %37 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str101, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %37)
  br label %69

; <label>:38                                      ; preds = %31
  %39 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %40 = load %struct.predicate*, %struct.predicate** %39, align 8
  store %struct.predicate* %40, %struct.predicate** %prev, align 8
  %41 = load %struct.predicate*, %struct.predicate** %tree, align 8
  %42 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %43 = load %struct.predicate*, %struct.predicate** %42, align 8
  %44 = getelementptr inbounds %struct.predicate, %struct.predicate* %43, i32 0, i32 15
  store %struct.predicate* %41, %struct.predicate** %44, align 8
  %45 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %46 = load %struct.predicate*, %struct.predicate** %45, align 8
  store %struct.predicate* %46, %struct.predicate** %tree, align 8
  %47 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %48 = load %struct.predicate*, %struct.predicate** %47, align 8
  %49 = getelementptr inbounds %struct.predicate, %struct.predicate* %48, i32 0, i32 14
  %50 = load %struct.predicate*, %struct.predicate** %49, align 8
  %51 = load %struct.predicate**, %struct.predicate*** %2, align 8
  store %struct.predicate* %50, %struct.predicate** %51, align 8
  %52 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %53 = load %struct.predicate*, %struct.predicate** %tree, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = trunc i32 %55 to i16
  %57 = load %struct.predicate*, %struct.predicate** %prev, align 8
  %58 = call %struct.predicate* @get_expr(%struct.predicate** %52, i16 signext %56, %struct.predicate* %57)
  %59 = load %struct.predicate*, %struct.predicate** %tree, align 8
  %60 = getelementptr inbounds %struct.predicate, %struct.predicate* %59, i32 0, i32 16
  store %struct.predicate* %58, %struct.predicate** %60, align 8
  br label %69

; <label>:61                                      ; preds = %31
  %62 = load %struct.predicate*, %struct.predicate** %tree, align 8
  store %struct.predicate* %62, %struct.predicate** %1
  br label %72

; <label>:63                                      ; preds = %31
  %64 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str108, i32 0, i32 0)) #9
  %65 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %66 = load %struct.predicate*, %struct.predicate** %65, align 8
  %67 = getelementptr inbounds %struct.predicate, %struct.predicate* %66, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %64, i32 %68)
  br label %69

; <label>:69                                      ; preds = %63, %38, %36
  br label %17

; <label>:70                                      ; preds = %29
  %71 = load %struct.predicate*, %struct.predicate** %tree, align 8
  store %struct.predicate* %71, %struct.predicate** %1
  br label %72

; <label>:72                                      ; preds = %70, %61, %14
  %73 = load %struct.predicate*, %struct.predicate** %1
  ret %struct.predicate* %73
}

; Function Attrs: nounwind uwtable
define internal float @getrate(%struct.predicate* %p) #0 {
  %1 = alloca float, align 4
  %2 = alloca %struct.predicate*, align 8
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = icmp ne %struct.predicate* %3, null
  br i1 %4, label %5, label %9

; <label>:5                                       ; preds = %0
  %6 = load %struct.predicate*, %struct.predicate** %2, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 9
  %8 = load float, float* %7, align 4
  store float %8, float* %1
  br label %10

; <label>:9                                       ; preds = %0
  store float 1.000000e+00, float* %1
  br label %10

; <label>:10                                      ; preds = %9, %5
  %11 = load float, float* %1
  ret float %11
}

; Function Attrs: nounwind uwtable
define internal float @constrain_rate(float %rate) #0 {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  store float %rate, float* %2, align 4
  %3 = load float, float* %2, align 4
  %4 = fcmp ogt float %3, 1.000000e+00
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store float 1.000000e+00, float* %1
  br label %13

; <label>:6                                       ; preds = %0
  %7 = load float, float* %2, align 4
  %8 = fpext float %7 to double
  %9 = fcmp olt double %8, 0.000000e+00
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %6
  store float 0.000000e+00, float* %1
  br label %13

; <label>:11                                      ; preds = %6
  %12 = load float, float* %2, align 4
  store float %12, float* %1
  br label %13

; <label>:13                                      ; preds = %11, %10, %5
  %14 = load float, float* %1
  ret float %14
}

; Function Attrs: nounwind uwtable
define internal void @estimate_costs(%struct.predicate* %tree) #0 {
  %1 = alloca %struct.predicate*, align 8
  store %struct.predicate* %tree, %struct.predicate** %1, align 8
  %2 = load %struct.predicate*, %struct.predicate** %1, align 8
  %3 = icmp ne %struct.predicate* %2, null
  br i1 %3, label %4, label %15

; <label>:4                                       ; preds = %0
  %5 = load %struct.predicate*, %struct.predicate** %1, align 8
  %6 = getelementptr inbounds %struct.predicate, %struct.predicate* %5, i32 0, i32 16
  %7 = load %struct.predicate*, %struct.predicate** %6, align 8
  call void @estimate_costs(%struct.predicate* %7)
  %8 = load %struct.predicate*, %struct.predicate** %1, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 15
  %10 = load %struct.predicate*, %struct.predicate** %9, align 8
  call void @estimate_costs(%struct.predicate* %10)
  %11 = load %struct.predicate*, %struct.predicate** %1, align 8
  %12 = call i32 @get_pred_cost(%struct.predicate* %11)
  %13 = load %struct.predicate*, %struct.predicate** %1, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 8
  store i32 %12, i32* %14, align 4
  br label %15

; <label>:15                                      ; preds = %4, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @opt_expr(%struct.predicate** %eval_treep) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.predicate**, align 8
  %regex_list = alloca %struct.predlist, align 8
  %name_list = alloca %struct.predlist, align 8
  %cbo_list = alloca [10 x %struct.predlist], align 16
  %i = alloca i32, align 4
  %curr = alloca %struct.predicate*, align 8
  %prevp = alloca %struct.predicate**, align 8
  %last_sidep = alloca %struct.predicate**, align 8
  %pred_func = alloca i1 (i8*, %struct.stat*, %struct.predicate*)*, align 8
  %p_type = alloca i32, align 4
  %has_side_effects = alloca i8, align 1
  %prev_prec = alloca i32, align 4
  %biop_prec = alloca i32, align 4
  %reorder = alloca i8, align 1
  store %struct.predicate** %eval_treep, %struct.predicate*** %2, align 8
  %3 = bitcast %struct.predlist* %regex_list to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 16, i32 8, i1 false)
  %4 = bitcast %struct.predlist* %name_list to i8*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 16, i32 8, i1 false)
  store i8 0, i8* %has_side_effects, align 1
  %5 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %6 = icmp eq %struct.predicate** %5, null
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %0
  %8 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %9 = load %struct.predicate*, %struct.predicate** %8, align 8
  %10 = icmp eq %struct.predicate* %9, null
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %7, %0
  store i1 false, i1* %1
  br label %255

; <label>:12                                      ; preds = %7
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %20, %12
  %14 = load i32, i32* %i, align 4
  %15 = icmp slt i32 %14, 10
  br i1 %15, label %16, label %23

; <label>:16                                      ; preds = %13
  %17 = load i32, i32* %i, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [10 x %struct.predlist], [10 x %struct.predlist]* %cbo_list, i32 0, i64 %18
  call void @predlist_init(%struct.predlist* %19)
  br label %20

; <label>:20                                      ; preds = %16
  %21 = load i32, i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %13

; <label>:23                                      ; preds = %13
  %24 = load %struct.predicate**, %struct.predicate*** %2, align 8
  store %struct.predicate** %24, %struct.predicate*** %prevp, align 8
  store i32 3, i32* %prev_prec, align 4
  %25 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  %26 = load %struct.predicate*, %struct.predicate** %25, align 8
  store %struct.predicate* %26, %struct.predicate** %curr, align 8
  br label %27

; <label>:27                                      ; preds = %32, %23
  %28 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 15
  %30 = load %struct.predicate*, %struct.predicate** %29, align 8
  %31 = icmp ne %struct.predicate* %30, null
  br i1 %31, label %32, label %41

; <label>:32                                      ; preds = %27
  %33 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %34 = getelementptr inbounds %struct.predicate, %struct.predicate* %33, i32 0, i32 15
  store %struct.predicate** %34, %struct.predicate*** %prevp, align 8
  %35 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %36 = getelementptr inbounds %struct.predicate, %struct.predicate* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %prev_prec, align 4
  %38 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %39 = getelementptr inbounds %struct.predicate, %struct.predicate* %38, i32 0, i32 15
  %40 = load %struct.predicate*, %struct.predicate** %39, align 8
  store %struct.predicate* %40, %struct.predicate** %curr, align 8
  br label %27

; <label>:41                                      ; preds = %27
  %42 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %43 = getelementptr inbounds %struct.predicate, %struct.predicate* %42, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 3
  br i1 %45, label %46, label %51

; <label>:46                                      ; preds = %41
  %47 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %48 = load i32, i32* %prev_prec, align 4
  %49 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  %50 = call %struct.predicate* @set_new_parent(%struct.predicate* %47, i32 %48, %struct.predicate** %49)
  br label %51

; <label>:51                                      ; preds = %46, %41
  %52 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %53 = and i64 %52, 9
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %55, label %61

; <label>:55                                      ; preds = %51
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str96, i32 0, i32 0))
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %59 = load %struct.predicate**, %struct.predicate*** %2, align 8
  %60 = load %struct.predicate*, %struct.predicate** %59, align 8
  call void @print_tree(%struct._IO_FILE* %58, %struct.predicate* %60, i32 0)
  br label %61

; <label>:61                                      ; preds = %55, %51
  %62 = load %struct.predicate**, %struct.predicate*** %2, align 8
  store %struct.predicate** %62, %struct.predicate*** %prevp, align 8
  store i32 0, i32* %biop_prec, align 4
  %63 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  %64 = load %struct.predicate*, %struct.predicate** %63, align 8
  %65 = icmp ne %struct.predicate* %64, null
  br i1 %65, label %66, label %77

; <label>:66                                      ; preds = %61
  %67 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  %68 = load %struct.predicate*, %struct.predicate** %67, align 8
  %69 = getelementptr inbounds %struct.predicate, %struct.predicate* %68, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 3
  br i1 %71, label %72, label %77

; <label>:72                                      ; preds = %66
  %73 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  %74 = load %struct.predicate*, %struct.predicate** %73, align 8
  %75 = getelementptr inbounds %struct.predicate, %struct.predicate* %74, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %biop_prec, align 4
  br label %77

; <label>:77                                      ; preds = %72, %66, %61
  br label %78

; <label>:78                                      ; preds = %246, %199, %148, %142, %77
  %79 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  %80 = load %struct.predicate*, %struct.predicate** %79, align 8
  store %struct.predicate* %80, %struct.predicate** %curr, align 8
  %81 = icmp ne %struct.predicate* %80, null
  br i1 %81, label %82, label %249

; <label>:82                                      ; preds = %78
  %83 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %84 = getelementptr inbounds %struct.predicate, %struct.predicate* %83, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 3
  br i1 %86, label %87, label %99

; <label>:87                                      ; preds = %82
  %88 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %89 = getelementptr inbounds %struct.predicate, %struct.predicate* %88, i32 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %biop_prec, align 4
  %92 = icmp ne i32 %90, %91
  br i1 %92, label %93, label %98

; <label>:93                                      ; preds = %87
  %94 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %95 = load i32, i32* %biop_prec, align 4
  %96 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  %97 = call %struct.predicate* @set_new_parent(%struct.predicate* %94, i32 %95, %struct.predicate** %96)
  store %struct.predicate* %97, %struct.predicate** %curr, align 8
  br label %98

; <label>:98                                      ; preds = %93, %87
  br label %99

; <label>:99                                      ; preds = %98, %82
  %100 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %101 = getelementptr inbounds %struct.predicate, %struct.predicate* %100, i32 0, i32 16
  %102 = load %struct.predicate*, %struct.predicate** %101, align 8
  %103 = getelementptr inbounds %struct.predicate, %struct.predicate* %102, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %p_type, align 4
  %105 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %106 = getelementptr inbounds %struct.predicate, %struct.predicate* %105, i32 0, i32 16
  %107 = load %struct.predicate*, %struct.predicate** %106, align 8
  %108 = getelementptr inbounds %struct.predicate, %struct.predicate* %107, i32 0, i32 0
  %109 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %108, align 8
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %109, i1 (i8*, %struct.stat*, %struct.predicate*)** %pred_func, align 8
  %110 = load i32, i32* %p_type, align 4
  switch i32 %110, label %231 [
    i32 0, label %111
    i32 1, label %111
    i32 2, label %211
    i32 3, label %222
  ]

; <label>:111                                     ; preds = %99, %99
  %112 = load i32, i32* %biop_prec, align 4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %111
  br label %233

; <label>:115                                     ; preds = %111
  %116 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %117 = getelementptr inbounds %struct.predicate, %struct.predicate* %116, i32 0, i32 16
  %118 = load %struct.predicate*, %struct.predicate** %117, align 8
  %119 = getelementptr inbounds %struct.predicate, %struct.predicate* %118, i32 0, i32 4
  %120 = load i8, i8* %119, align 1
  %121 = trunc i8 %120 to i1
  br i1 %121, label %210, label %122

; <label>:122                                     ; preds = %115
  %123 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %124 = getelementptr inbounds %struct.predicate, %struct.predicate* %123, i32 0, i32 16
  %125 = load %struct.predicate*, %struct.predicate** %124, align 8
  %126 = call zeroext i1 @predicate_is_cost_free(%struct.predicate* %125)
  br i1 %126, label %127, label %145

; <label>:127                                     ; preds = %122
  %128 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %129 = and i64 %128, 8
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %142

; <label>:131                                     ; preds = %127
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %133 = load i16, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %134 = zext i16 %133 to i32
  %135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str97, i32 0, i32 0), i32 %134)
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %137 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %138 = getelementptr inbounds %struct.predicate, %struct.predicate* %137, i32 0, i32 16
  %139 = load %struct.predicate*, %struct.predicate** %138, align 8
  call void @print_predicate(%struct._IO_FILE* %136, %struct.predicate* %139)
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str98, i32 0, i32 0))
  br label %142

; <label>:142                                     ; preds = %131, %127
  %143 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %144 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  call void @predlist_insert(%struct.predlist* %name_list, %struct.predicate* %143, %struct.predicate** %144)
  br label %78

; <label>:145                                     ; preds = %122
  %146 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %pred_func, align 8
  %147 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %146, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_regex to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %147, label %148, label %151

; <label>:148                                     ; preds = %145
  %149 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %150 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  call void @predlist_insert(%struct.predlist* %regex_list, %struct.predicate* %149, %struct.predicate** %150)
  br label %78

; <label>:151                                     ; preds = %145
  %152 = load i16, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %153 = zext i16 %152 to i32
  %154 = icmp sgt i32 %153, 1
  br i1 %154, label %155, label %169

; <label>:155                                     ; preds = %151
  %156 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %157 = getelementptr inbounds %struct.predicate, %struct.predicate* %156, i32 0, i32 16
  %158 = load %struct.predicate*, %struct.predicate** %157, align 8
  %159 = getelementptr inbounds %struct.predicate, %struct.predicate* %158, i32 0, i32 8
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 1, %160
  br i1 %161, label %162, label %169

; <label>:162                                     ; preds = %155
  %163 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %164 = getelementptr inbounds %struct.predicate, %struct.predicate* %163, i32 0, i32 16
  %165 = load %struct.predicate*, %struct.predicate** %164, align 8
  %166 = getelementptr inbounds %struct.predicate, %struct.predicate* %165, i32 0, i32 6
  %167 = load i8, i8* %166, align 1
  %168 = trunc i8 %167 to i1
  br i1 %168, label %169, label %173

; <label>:169                                     ; preds = %162, %155, %151
  %170 = load i16, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %171 = zext i16 %170 to i32
  %172 = icmp sgt i32 %171, 2
  br label %173

; <label>:173                                     ; preds = %169, %162
  %174 = phi i1 [ true, %162 ], [ %172, %169 ]
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %reorder, align 1
  %176 = load i8, i8* %reorder, align 1
  %177 = trunc i8 %176 to i1
  br i1 %177, label %178, label %209

; <label>:178                                     ; preds = %173
  %179 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %180 = and i64 %179, 8
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %199

; <label>:182                                     ; preds = %178
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %184 = load i16, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %185 = zext i16 %184 to i32
  %186 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %183, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str99, i32 0, i32 0), i32 %185)
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %188 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %189 = getelementptr inbounds %struct.predicate, %struct.predicate* %188, i32 0, i32 16
  %190 = load %struct.predicate*, %struct.predicate** %189, align 8
  call void @print_predicate(%struct._IO_FILE* %187, %struct.predicate* %190)
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %192 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %193 = getelementptr inbounds %struct.predicate, %struct.predicate* %192, i32 0, i32 16
  %194 = load %struct.predicate*, %struct.predicate** %193, align 8
  %195 = getelementptr inbounds %struct.predicate, %struct.predicate* %194, i32 0, i32 8
  %196 = load i32, i32* %195, align 4
  %197 = call i8* @cost_name(i32 %196)
  %198 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str100, i32 0, i32 0), i8* %197)
  br label %199

; <label>:199                                     ; preds = %182, %178
  %200 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %201 = getelementptr inbounds %struct.predicate, %struct.predicate* %200, i32 0, i32 16
  %202 = load %struct.predicate*, %struct.predicate** %201, align 8
  %203 = getelementptr inbounds %struct.predicate, %struct.predicate* %202, i32 0, i32 8
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds [10 x %struct.predlist], [10 x %struct.predlist]* %cbo_list, i32 0, i64 %205
  %207 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %208 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  call void @predlist_insert(%struct.predlist* %206, %struct.predicate* %207, %struct.predicate** %208)
  br label %78

; <label>:209                                     ; preds = %173
  br label %210

; <label>:210                                     ; preds = %209, %115
  br label %233

; <label>:211                                     ; preds = %99
  %212 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %213 = getelementptr inbounds %struct.predicate, %struct.predicate* %212, i32 0, i32 16
  %214 = load %struct.predicate*, %struct.predicate** %213, align 8
  %215 = getelementptr inbounds %struct.predicate, %struct.predicate* %214, i32 0, i32 16
  %216 = call zeroext i1 @opt_expr(%struct.predicate** %215)
  %217 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %218 = getelementptr inbounds %struct.predicate, %struct.predicate* %217, i32 0, i32 16
  %219 = load %struct.predicate*, %struct.predicate** %218, align 8
  %220 = getelementptr inbounds %struct.predicate, %struct.predicate* %219, i32 0, i32 4
  %221 = zext i1 %216 to i8
  store i8 %221, i8* %220, align 1
  br label %233

; <label>:222                                     ; preds = %99
  %223 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %224 = getelementptr inbounds %struct.predicate, %struct.predicate* %223, i32 0, i32 16
  %225 = call zeroext i1 @opt_expr(%struct.predicate** %224)
  %226 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %227 = getelementptr inbounds %struct.predicate, %struct.predicate* %226, i32 0, i32 16
  %228 = load %struct.predicate*, %struct.predicate** %227, align 8
  %229 = getelementptr inbounds %struct.predicate, %struct.predicate* %228, i32 0, i32 4
  %230 = zext i1 %225 to i8
  store i8 %230, i8* %229, align 1
  br label %233

; <label>:231                                     ; preds = %99
  %232 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str8109, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %232)
  br label %233

; <label>:233                                     ; preds = %231, %222, %211, %210, %114
  %234 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %235 = getelementptr inbounds %struct.predicate, %struct.predicate* %234, i32 0, i32 16
  %236 = load %struct.predicate*, %struct.predicate** %235, align 8
  %237 = getelementptr inbounds %struct.predicate, %struct.predicate* %236, i32 0, i32 4
  %238 = load i8, i8* %237, align 1
  %239 = trunc i8 %238 to i1
  %240 = zext i1 %239 to i32
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %242, label %246

; <label>:242                                     ; preds = %233
  %243 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  store %struct.predicate** %243, %struct.predicate*** %last_sidep, align 8
  %244 = getelementptr inbounds [10 x %struct.predlist], [10 x %struct.predlist]* %cbo_list, i32 0, i32 0
  %245 = load %struct.predicate**, %struct.predicate*** %last_sidep, align 8
  call void @merge_lists(%struct.predlist* %244, i32 10, %struct.predlist* %name_list, %struct.predlist* %regex_list, %struct.predicate** %245)
  store i8 1, i8* %has_side_effects, align 1
  br label %246

; <label>:246                                     ; preds = %242, %233
  %247 = load %struct.predicate*, %struct.predicate** %curr, align 8
  %248 = getelementptr inbounds %struct.predicate, %struct.predicate* %247, i32 0, i32 15
  store %struct.predicate** %248, %struct.predicate*** %prevp, align 8
  br label %78

; <label>:249                                     ; preds = %78
  %250 = load %struct.predicate**, %struct.predicate*** %prevp, align 8
  store %struct.predicate** %250, %struct.predicate*** %last_sidep, align 8
  %251 = getelementptr inbounds [10 x %struct.predlist], [10 x %struct.predlist]* %cbo_list, i32 0, i32 0
  %252 = load %struct.predicate**, %struct.predicate*** %last_sidep, align 8
  call void @merge_lists(%struct.predlist* %251, i32 10, %struct.predlist* %name_list, %struct.predlist* %regex_list, %struct.predicate** %252)
  %253 = load i8, i8* %has_side_effects, align 1
  %254 = trunc i8 %253 to i1
  store i1 %254, i1* %1
  br label %255

; <label>:255                                     ; preds = %249, %11
  %256 = load i1, i1* %1
  ret i1 %256
}

; Function Attrs: nounwind uwtable
define internal void @check_normalization(%struct.predicate* %p, i1 zeroext %at_root) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca i8, align 1
  store %struct.predicate* %p, %struct.predicate** %1, align 8
  %3 = zext i1 %at_root to i8
  store i8 %3, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %6, label %15

; <label>:6                                       ; preds = %0
  %7 = load %struct.predicate*, %struct.predicate** %1, align 8
  %8 = getelementptr inbounds %struct.predicate, %struct.predicate* %7, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 3, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %6
  br label %14

; <label>:12                                      ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str94, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1175, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__.check_normalization, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  br label %15

; <label>:15                                      ; preds = %14, %0
  %16 = load %struct.predicate*, %struct.predicate** %1, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 15
  %18 = load %struct.predicate*, %struct.predicate** %17, align 8
  %19 = icmp ne %struct.predicate* %18, null
  br i1 %19, label %20, label %34

; <label>:20                                      ; preds = %15
  %21 = load %struct.predicate*, %struct.predicate** %1, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 15
  %23 = load %struct.predicate*, %struct.predicate** %22, align 8
  %24 = getelementptr inbounds %struct.predicate, %struct.predicate* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 3, %25
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %20
  br label %30

; <label>:28                                      ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 1180, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__.check_normalization, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %30

; <label>:30                                      ; preds = %29, %27
  %31 = load %struct.predicate*, %struct.predicate** %1, align 8
  %32 = getelementptr inbounds %struct.predicate, %struct.predicate* %31, i32 0, i32 15
  %33 = load %struct.predicate*, %struct.predicate** %32, align 8
  call void @check_normalization(%struct.predicate* %33, i1 zeroext false)
  br label %34

; <label>:34                                      ; preds = %30, %15
  %35 = load %struct.predicate*, %struct.predicate** %1, align 8
  %36 = getelementptr inbounds %struct.predicate, %struct.predicate* %35, i32 0, i32 16
  %37 = load %struct.predicate*, %struct.predicate** %36, align 8
  %38 = icmp ne %struct.predicate* %37, null
  br i1 %38, label %39, label %43

; <label>:39                                      ; preds = %34
  %40 = load %struct.predicate*, %struct.predicate** %1, align 8
  %41 = getelementptr inbounds %struct.predicate, %struct.predicate* %40, i32 0, i32 16
  %42 = load %struct.predicate*, %struct.predicate** %41, align 8
  call void @check_normalization(%struct.predicate* %42, i1 zeroext false)
  br label %43

; <label>:43                                      ; preds = %39, %34
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @do_arm_swaps(%struct.predicate* %p) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.predicate*, align 8
  %swapped = alloca i8, align 1
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = icmp ne %struct.predicate* %3, null
  br i1 %4, label %5, label %27

; <label>:5                                       ; preds = %0
  br label %6

; <label>:6                                       ; preds = %21, %5
  store i8 0, i8* %swapped, align 1
  %7 = load %struct.predicate*, %struct.predicate** %2, align 8
  %8 = call zeroext i1 @consider_arm_swap(%struct.predicate* %7)
  br i1 %8, label %19, label %9

; <label>:9                                       ; preds = %6
  %10 = load %struct.predicate*, %struct.predicate** %2, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 15
  %12 = load %struct.predicate*, %struct.predicate** %11, align 8
  %13 = call zeroext i1 @do_arm_swaps(%struct.predicate* %12)
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %9
  %15 = load %struct.predicate*, %struct.predicate** %2, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 16
  %17 = load %struct.predicate*, %struct.predicate** %16, align 8
  %18 = call zeroext i1 @do_arm_swaps(%struct.predicate* %17)
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %14, %9, %6
  store i8 1, i8* %swapped, align 1
  br label %20

; <label>:20                                      ; preds = %19, %14
  br label %21

; <label>:21                                      ; preds = %20
  %22 = load i8, i8* %swapped, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %6, label %24

; <label>:24                                      ; preds = %21
  %25 = load i8, i8* %swapped, align 1
  %26 = trunc i8 %25 to i1
  store i1 %26, i1* %1
  br label %28

; <label>:27                                      ; preds = %0
  store i1 false, i1* %1
  br label %28

; <label>:28                                      ; preds = %27, %24
  %29 = load i1, i1* %1
  ret i1 %29
}

; Function Attrs: nounwind uwtable
define internal i8* @type_name(i32) #0 {
  %2 = alloca i16, align 2
  %i = alloca i32, align 4
  %type = trunc i32 %0 to i16
  store i16 %type, i16* %2, align 2
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %23, %1
  %4 = load i32, i32* %i, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [7 x %struct.op_assoc], [7 x %struct.op_assoc]* @type_table, i32 0, i64 %5
  %7 = getelementptr inbounds %struct.op_assoc, %struct.op_assoc* %6, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i32
  %10 = icmp ne i32 %9, -1
  br i1 %10, label %11, label %26

; <label>:11                                      ; preds = %3
  %12 = load i32, i32* %i, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [7 x %struct.op_assoc], [7 x %struct.op_assoc]* @type_table, i32 0, i64 %13
  %15 = getelementptr inbounds %struct.op_assoc, %struct.op_assoc* %14, i32 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = sext i16 %16 to i32
  %18 = load i16, i16* %2, align 2
  %19 = sext i16 %18 to i32
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %11
  br label %26

; <label>:22                                      ; preds = %11
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i32, i32* %i, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %i, align 4
  br label %3

; <label>:26                                      ; preds = %21, %3
  %27 = load i32, i32* %i, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [7 x %struct.op_assoc], [7 x %struct.op_assoc]* @type_table, i32 0, i64 %28
  %30 = getelementptr inbounds %struct.op_assoc, %struct.op_assoc* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  ret i8* %31
}

; Function Attrs: nounwind uwtable
define internal i8* @prec_name(i32) #0 {
  %2 = alloca i16, align 2
  %i = alloca i32, align 4
  %prec = trunc i32 %0 to i16
  store i16 %prec, i16* %2, align 2
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %23, %1
  %4 = load i32, i32* %i, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [7 x %struct.prec_assoc], [7 x %struct.prec_assoc]* @prec_table, i32 0, i64 %5
  %7 = getelementptr inbounds %struct.prec_assoc, %struct.prec_assoc* %6, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i32
  %10 = icmp ne i32 %9, -1
  br i1 %10, label %11, label %26

; <label>:11                                      ; preds = %3
  %12 = load i32, i32* %i, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [7 x %struct.prec_assoc], [7 x %struct.prec_assoc]* @prec_table, i32 0, i64 %13
  %15 = getelementptr inbounds %struct.prec_assoc, %struct.prec_assoc* %14, i32 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = sext i16 %16 to i32
  %18 = load i16, i16* %2, align 2
  %19 = sext i16 %18 to i32
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %11
  br label %26

; <label>:22                                      ; preds = %11
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i32, i32* %i, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %i, align 4
  br label %3

; <label>:26                                      ; preds = %21, %3
  %27 = load i32, i32* %i, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [7 x %struct.prec_assoc], [7 x %struct.prec_assoc]* @prec_table, i32 0, i64 %28
  %30 = getelementptr inbounds %struct.prec_assoc, %struct.prec_assoc* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  ret i8* %31
}

; Function Attrs: nounwind uwtable
define internal i8* @cost_name(i32 %cost) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %cost, i32* %2, align 4
  store i32 10, i32* %n, align 4
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %22, %0
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* %n, align 4
  %6 = icmp ult i32 %4, %5
  br i1 %6, label %7, label %25

; <label>:7                                       ; preds = %3
  %8 = load i32, i32* %i, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [10 x %struct.cost_assoc], [10 x %struct.cost_assoc]* @cost_table, i32 0, i64 %9
  %11 = getelementptr inbounds %struct.cost_assoc, %struct.cost_assoc* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = load i32, i32* %2, align 4
  %14 = icmp eq i32 %12, %13
  br i1 %14, label %15, label %21

; <label>:15                                      ; preds = %7
  %16 = load i32, i32* %i, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [10 x %struct.cost_assoc], [10 x %struct.cost_assoc]* @cost_table, i32 0, i64 %17
  %19 = getelementptr inbounds %struct.cost_assoc, %struct.cost_assoc* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %1
  br label %26

; <label>:21                                      ; preds = %7
  br label %22

; <label>:22                                      ; preds = %21
  %23 = load i32, i32* %i, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %3

; <label>:25                                      ; preds = %3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str70171, i32 0, i32 0), i8** %1
  br label %26

; <label>:26                                      ; preds = %25, %15
  %27 = load i8*, i8** %1
  ret i8* %27
}

; Function Attrs: nounwind uwtable
define internal void @init_pred_perf(%struct.predicate* %pred) #0 {
  %1 = alloca %struct.predicate*, align 8
  %p = alloca %struct.predicate_performance_info*, align 8
  store %struct.predicate* %pred, %struct.predicate** %1, align 8
  %2 = load %struct.predicate*, %struct.predicate** %1, align 8
  %3 = getelementptr inbounds %struct.predicate, %struct.predicate* %2, i32 0, i32 17
  store %struct.predicate_performance_info* %3, %struct.predicate_performance_info** %p, align 8
  %4 = load %struct.predicate_performance_info*, %struct.predicate_performance_info** %p, align 8
  %5 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %4, i32 0, i32 1
  store i64 0, i64* %5, align 8
  %6 = load %struct.predicate_performance_info*, %struct.predicate_performance_info** %p, align 8
  %7 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %6, i32 0, i32 0
  store i64 0, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @consider_arm_swap(%struct.predicate* %p) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.predicate*, align 8
  %left_cost = alloca i32, align 4
  %right_cost = alloca i32, align 4
  %reason = alloca i8*, align 8
  %pl = alloca %struct.predicate**, align 8
  %pr = alloca %struct.predicate**, align 8
  %want_swap = alloca i8, align 1
  %succ_rate_l = alloca float, align 4
  %succ_rate_r = alloca float, align 4
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  store i8* null, i8** %reason, align 8
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = getelementptr inbounds %struct.predicate, %struct.predicate* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 3, %5
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str82183, i32 0, i32 0), i8** %reason, align 8
  br label %8

; <label>:8                                       ; preds = %7, %0
  %9 = load i8*, i8** %reason, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %23, label %11

; <label>:11                                      ; preds = %8
  %12 = load %struct.predicate*, %struct.predicate** %2, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 15
  %14 = load %struct.predicate*, %struct.predicate** %13, align 8
  %15 = icmp eq %struct.predicate* null, %14
  br i1 %15, label %21, label %16

; <label>:16                                      ; preds = %11
  %17 = load %struct.predicate*, %struct.predicate** %2, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 16
  %19 = load %struct.predicate*, %struct.predicate** %18, align 8
  %20 = icmp eq %struct.predicate* null, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %16, %11
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str83184, i32 0, i32 0), i8** %reason, align 8
  br label %22

; <label>:22                                      ; preds = %21, %16
  br label %23

; <label>:23                                      ; preds = %22, %8
  %24 = load i8*, i8** %reason, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %35, label %26

; <label>:26                                      ; preds = %23
  %27 = load %struct.predicate*, %struct.predicate** %2, align 8
  %28 = getelementptr inbounds %struct.predicate, %struct.predicate* %27, i32 0, i32 15
  %29 = load %struct.predicate*, %struct.predicate** %28, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 16
  %31 = load %struct.predicate*, %struct.predicate** %30, align 8
  %32 = icmp eq %struct.predicate* null, %31
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %26
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str84185, i32 0, i32 0), i8** %reason, align 8
  br label %34

; <label>:34                                      ; preds = %33, %26
  br label %35

; <label>:35                                      ; preds = %34, %23
  %36 = load %struct.predicate*, %struct.predicate** %2, align 8
  %37 = getelementptr inbounds %struct.predicate, %struct.predicate* %36, i32 0, i32 16
  store %struct.predicate** %37, %struct.predicate*** %pr, align 8
  %38 = load %struct.predicate*, %struct.predicate** %2, align 8
  %39 = getelementptr inbounds %struct.predicate, %struct.predicate* %38, i32 0, i32 15
  %40 = load %struct.predicate*, %struct.predicate** %39, align 8
  %41 = getelementptr inbounds %struct.predicate, %struct.predicate* %40, i32 0, i32 16
  store %struct.predicate** %41, %struct.predicate*** %pl, align 8
  %42 = load i8*, i8** %reason, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %50, label %44

; <label>:44                                      ; preds = %35
  %45 = load %struct.predicate**, %struct.predicate*** %pl, align 8
  %46 = load %struct.predicate*, %struct.predicate** %45, align 8
  %47 = call zeroext i1 @subtree_has_side_effects(%struct.predicate* %46)
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %44
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str85186, i32 0, i32 0), i8** %reason, align 8
  br label %49

; <label>:49                                      ; preds = %48, %44
  br label %50

; <label>:50                                      ; preds = %49, %35
  %51 = load i8*, i8** %reason, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %59, label %53

; <label>:53                                      ; preds = %50
  %54 = load %struct.predicate**, %struct.predicate*** %pr, align 8
  %55 = load %struct.predicate*, %struct.predicate** %54, align 8
  %56 = call zeroext i1 @subtree_has_side_effects(%struct.predicate* %55)
  br i1 %56, label %57, label %58

; <label>:57                                      ; preds = %53
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str86187, i32 0, i32 0), i8** %reason, align 8
  br label %58

; <label>:58                                      ; preds = %57, %53
  br label %59

; <label>:59                                      ; preds = %58, %50
  %60 = load i8*, i8** %reason, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %74, label %62

; <label>:62                                      ; preds = %59
  %63 = load %struct.predicate**, %struct.predicate*** %pl, align 8
  %64 = load %struct.predicate*, %struct.predicate** %63, align 8
  %65 = call i32 @worst_cost(%struct.predicate* %64)
  store i32 %65, i32* %left_cost, align 4
  %66 = load %struct.predicate**, %struct.predicate*** %pr, align 8
  %67 = load %struct.predicate*, %struct.predicate** %66, align 8
  %68 = call i32 @worst_cost(%struct.predicate* %67)
  store i32 %68, i32* %right_cost, align 4
  %69 = load i32, i32* %left_cost, align 4
  %70 = load i32, i32* %right_cost, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %73

; <label>:72                                      ; preds = %62
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str87188, i32 0, i32 0), i8** %reason, align 8
  br label %73

; <label>:73                                      ; preds = %72, %62
  br label %74

; <label>:74                                      ; preds = %73, %59
  %75 = load i8*, i8** %reason, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %147, label %77

; <label>:77                                      ; preds = %74
  %78 = load i32, i32* %left_cost, align 4
  %79 = load i32, i32* %right_cost, align 4
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %81, label %131

; <label>:81                                      ; preds = %77
  %82 = load %struct.predicate**, %struct.predicate*** %pl, align 8
  %83 = load %struct.predicate*, %struct.predicate** %82, align 8
  %84 = getelementptr inbounds %struct.predicate, %struct.predicate* %83, i32 0, i32 9
  %85 = load float, float* %84, align 4
  store float %85, float* %succ_rate_l, align 4
  %86 = load %struct.predicate**, %struct.predicate*** %pr, align 8
  %87 = load %struct.predicate*, %struct.predicate** %86, align 8
  %88 = getelementptr inbounds %struct.predicate, %struct.predicate* %87, i32 0, i32 9
  %89 = load float, float* %88, align 4
  store float %89, float* %succ_rate_r, align 4
  %90 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %91 = and i64 %90, 8
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %93, label %100

; <label>:93                                      ; preds = %81
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %95 = load float, float* %succ_rate_l, align 4
  %96 = fpext float %95 to double
  %97 = load float, float* %succ_rate_r, align 4
  %98 = fpext float %97 to double
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str88189, i32 0, i32 0), double %96, double %98)
  br label %100

; <label>:100                                     ; preds = %93, %81
  %101 = load %struct.predicate*, %struct.predicate** %2, align 8
  %102 = getelementptr inbounds %struct.predicate, %struct.predicate* %101, i32 0, i32 0
  %103 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %102, align 8
  %104 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %103, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %104, label %105, label %114

; <label>:105                                     ; preds = %100
  %106 = load float, float* %succ_rate_r, align 4
  %107 = load float, float* %succ_rate_l, align 4
  %108 = fcmp olt float %106, %107
  %109 = zext i1 %108 to i8
  store i8 %109, i8* %want_swap, align 1
  %110 = load i8, i8* %want_swap, align 1
  %111 = trunc i8 %110 to i1
  br i1 %111, label %113, label %112

; <label>:112                                     ; preds = %105
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str89190, i32 0, i32 0), i8** %reason, align 8
  br label %113

; <label>:113                                     ; preds = %112, %105
  br label %130

; <label>:114                                     ; preds = %100
  %115 = load %struct.predicate*, %struct.predicate** %2, align 8
  %116 = getelementptr inbounds %struct.predicate, %struct.predicate* %115, i32 0, i32 0
  %117 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %116, align 8
  %118 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %117, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %118, label %119, label %128

; <label>:119                                     ; preds = %114
  %120 = load float, float* %succ_rate_r, align 4
  %121 = load float, float* %succ_rate_l, align 4
  %122 = fcmp ogt float %120, %121
  %123 = zext i1 %122 to i8
  store i8 %123, i8* %want_swap, align 1
  %124 = load i8, i8* %want_swap, align 1
  %125 = trunc i8 %124 to i1
  br i1 %125, label %127, label %126

; <label>:126                                     ; preds = %119
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str90191, i32 0, i32 0), i8** %reason, align 8
  br label %127

; <label>:127                                     ; preds = %126, %119
  br label %129

; <label>:128                                     ; preds = %114
  store i8 0, i8* %want_swap, align 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str91192, i32 0, i32 0), i8** %reason, align 8
  br label %129

; <label>:129                                     ; preds = %128, %127
  br label %130

; <label>:130                                     ; preds = %129, %113
  br label %132

; <label>:131                                     ; preds = %77
  store i8 1, i8* %want_swap, align 1
  br label %132

; <label>:132                                     ; preds = %131, %130
  %133 = load i8, i8* %want_swap, align 1
  %134 = trunc i8 %133 to i1
  br i1 %134, label %135, label %146

; <label>:135                                     ; preds = %132
  %136 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %137 = and i64 %136, 8
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %139, label %144

; <label>:139                                     ; preds = %135
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str92193, i32 0, i32 0))
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %143 = load %struct.predicate*, %struct.predicate** %2, align 8
  call void @print_tree(%struct._IO_FILE* %142, %struct.predicate* %143, i32 0)
  br label %144

; <label>:144                                     ; preds = %139, %135
  %145 = load %struct.predicate*, %struct.predicate** %2, align 8
  call void @perform_arm_swap(%struct.predicate* %145)
  store i1 true, i1* %1
  br label %158

; <label>:146                                     ; preds = %132
  br label %147

; <label>:147                                     ; preds = %146, %74
  %148 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %149 = and i64 %148, 8
  %150 = icmp ne i64 %149, 0
  br i1 %150, label %151, label %157

; <label>:151                                     ; preds = %147
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %153 = load i8*, i8** %reason, align 8
  %154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str93, i32 0, i32 0), i8* %153)
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %156 = load %struct.predicate*, %struct.predicate** %2, align 8
  call void @print_tree(%struct._IO_FILE* %155, %struct.predicate* %156, i32 0)
  br label %157

; <label>:157                                     ; preds = %151, %147
  store i1 false, i1* %1
  br label %158

; <label>:158                                     ; preds = %157, %144
  %159 = load i1, i1* %1
  ret i1 %159
}

; Function Attrs: nounwind uwtable
define internal void @perform_arm_swap(%struct.predicate* %p) #0 {
  %1 = alloca %struct.predicate*, align 8
  %tmp = alloca %struct.predicate*, align 8
  store %struct.predicate* %p, %struct.predicate** %1, align 8
  %2 = load %struct.predicate*, %struct.predicate** %1, align 8
  %3 = getelementptr inbounds %struct.predicate, %struct.predicate* %2, i32 0, i32 15
  %4 = load %struct.predicate*, %struct.predicate** %3, align 8
  %5 = getelementptr inbounds %struct.predicate, %struct.predicate* %4, i32 0, i32 16
  %6 = load %struct.predicate*, %struct.predicate** %5, align 8
  store %struct.predicate* %6, %struct.predicate** %tmp, align 8
  %7 = load %struct.predicate*, %struct.predicate** %1, align 8
  %8 = getelementptr inbounds %struct.predicate, %struct.predicate* %7, i32 0, i32 16
  %9 = load %struct.predicate*, %struct.predicate** %8, align 8
  %10 = load %struct.predicate*, %struct.predicate** %1, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 15
  %12 = load %struct.predicate*, %struct.predicate** %11, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 16
  store %struct.predicate* %9, %struct.predicate** %13, align 8
  %14 = load %struct.predicate*, %struct.predicate** %tmp, align 8
  %15 = load %struct.predicate*, %struct.predicate** %1, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 16
  store %struct.predicate* %14, %struct.predicate** %16, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @worst_cost(%struct.predicate* %p) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.predicate*, align 8
  %cost_r = alloca i32, align 4
  %cost_l = alloca i32, align 4
  %worst = alloca i32, align 4
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = icmp ne %struct.predicate* %3, null
  br i1 %4, label %5, label %34

; <label>:5                                       ; preds = %0
  %6 = load %struct.predicate*, %struct.predicate** %2, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 15
  %8 = load %struct.predicate*, %struct.predicate** %7, align 8
  %9 = call i32 @worst_cost(%struct.predicate* %8)
  store i32 %9, i32* %cost_l, align 4
  %10 = load %struct.predicate*, %struct.predicate** %2, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 16
  %12 = load %struct.predicate*, %struct.predicate** %11, align 8
  %13 = call i32 @worst_cost(%struct.predicate* %12)
  store i32 %13, i32* %cost_r, align 4
  %14 = load i32, i32* %cost_l, align 4
  %15 = load i32, i32* %cost_r, align 4
  %16 = icmp ugt i32 %14, %15
  br i1 %16, label %17, label %19

; <label>:17                                      ; preds = %5
  %18 = load i32, i32* %cost_l, align 4
  br label %21

; <label>:19                                      ; preds = %5
  %20 = load i32, i32* %cost_r, align 4
  br label %21

; <label>:21                                      ; preds = %19, %17
  %22 = phi i32 [ %18, %17 ], [ %20, %19 ]
  store i32 %22, i32* %worst, align 4
  %23 = load i32, i32* %worst, align 4
  %24 = load %struct.predicate*, %struct.predicate** %2, align 8
  %25 = getelementptr inbounds %struct.predicate, %struct.predicate* %24, i32 0, i32 8
  %26 = load i32, i32* %25, align 4
  %27 = icmp ult i32 %23, %26
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %21
  %29 = load %struct.predicate*, %struct.predicate** %2, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 8
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %worst, align 4
  br label %32

; <label>:32                                      ; preds = %28, %21
  %33 = load i32, i32* %worst, align 4
  store i32 %33, i32* %1
  br label %35

; <label>:34                                      ; preds = %0
  store i32 0, i32* %1
  br label %35

; <label>:35                                      ; preds = %34, %32
  %36 = load i32, i32* %1
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @subtree_has_side_effects(%struct.predicate* %p) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.predicate*, align 8
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = icmp ne %struct.predicate* %3, null
  br i1 %4, label %5, label %22

; <label>:5                                       ; preds = %0
  %6 = load %struct.predicate*, %struct.predicate** %2, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 4
  %8 = load i8, i8* %7, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %20, label %10

; <label>:10                                      ; preds = %5
  %11 = load %struct.predicate*, %struct.predicate** %2, align 8
  %12 = getelementptr inbounds %struct.predicate, %struct.predicate* %11, i32 0, i32 15
  %13 = load %struct.predicate*, %struct.predicate** %12, align 8
  %14 = call zeroext i1 @subtree_has_side_effects(%struct.predicate* %13)
  br i1 %14, label %20, label %15

; <label>:15                                      ; preds = %10
  %16 = load %struct.predicate*, %struct.predicate** %2, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 16
  %18 = load %struct.predicate*, %struct.predicate** %17, align 8
  %19 = call zeroext i1 @subtree_has_side_effects(%struct.predicate* %18)
  br label %20

; <label>:20                                      ; preds = %15, %10, %5
  %21 = phi i1 [ true, %10 ], [ true, %5 ], [ %19, %15 ]
  store i1 %21, i1* %1
  br label %23

; <label>:22                                      ; preds = %0
  store i1 false, i1* %1
  br label %23

; <label>:23                                      ; preds = %22, %20
  %24 = load i1, i1* %1
  ret i1 %24
}

; Function Attrs: nounwind uwtable
define internal void @merge_lists(%struct.predlist* %lists, i32 %nlists, %struct.predlist* %name_list, %struct.predlist* %regex_list, %struct.predicate** %last) #0 {
  %1 = alloca %struct.predlist*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.predlist*, align 8
  %4 = alloca %struct.predlist*, align 8
  %5 = alloca %struct.predicate**, align 8
  %i = alloca i32, align 4
  store %struct.predlist* %lists, %struct.predlist** %1, align 8
  store i32 %nlists, i32* %2, align 4
  store %struct.predlist* %name_list, %struct.predlist** %3, align 8
  store %struct.predlist* %regex_list, %struct.predlist** %4, align 8
  store %struct.predicate** %last, %struct.predicate*** %5, align 8
  store void (%struct.predlist*, %struct.predicate**)* @predlist_merge_sort, void (%struct.predlist*, %struct.predicate**)** @merge_lists.mergefn, align 8
  %6 = load void (%struct.predlist*, %struct.predicate**)*, void (%struct.predlist*, %struct.predicate**)** @merge_lists.mergefn, align 8
  %7 = load %struct.predlist*, %struct.predlist** %3, align 8
  %8 = load %struct.predicate**, %struct.predicate*** %5, align 8
  call void %6(%struct.predlist* %7, %struct.predicate** %8)
  %9 = load void (%struct.predlist*, %struct.predicate**)*, void (%struct.predlist*, %struct.predicate**)** @merge_lists.mergefn, align 8
  %10 = load %struct.predlist*, %struct.predlist** %4, align 8
  %11 = load %struct.predicate**, %struct.predicate*** %5, align 8
  call void %9(%struct.predlist* %10, %struct.predicate** %11)
  store i32 0, i32* %i, align 4
  br label %12

; <label>:12                                      ; preds = %23, %0
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* %2, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %26

; <label>:16                                      ; preds = %12
  %17 = load void (%struct.predlist*, %struct.predicate**)*, void (%struct.predlist*, %struct.predicate**)** @merge_lists.mergefn, align 8
  %18 = load i32, i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = load %struct.predlist*, %struct.predlist** %1, align 8
  %21 = getelementptr inbounds %struct.predlist, %struct.predlist* %20, i64 %19
  %22 = load %struct.predicate**, %struct.predicate*** %5, align 8
  call void %17(%struct.predlist* %21, %struct.predicate** %22)
  br label %23

; <label>:23                                      ; preds = %16
  %24 = load i32, i32* %i, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %i, align 4
  br label %12

; <label>:26                                      ; preds = %12
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @predlist_merge_sort(%struct.predlist* %list, %struct.predicate** %last) #0 {
  %1 = alloca %struct.predlist*, align 8
  %2 = alloca %struct.predicate**, align 8
  %new_list = alloca %struct.predlist, align 8
  %p = alloca %struct.predicate*, align 8
  %q = alloca %struct.predicate*, align 8
  %wantfailure = alloca i8, align 1
  store %struct.predlist* %list, %struct.predlist** %1, align 8
  store %struct.predicate** %last, %struct.predicate*** %2, align 8
  %3 = load %struct.predlist*, %struct.predlist** %1, align 8
  %4 = getelementptr inbounds %struct.predlist, %struct.predlist* %3, i32 0, i32 0
  %5 = load %struct.predicate*, %struct.predicate** %4, align 8
  %6 = icmp eq %struct.predicate* null, %5
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %124

; <label>:8                                       ; preds = %0
  %9 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %10 = and i64 %9, 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %19

; <label>:12                                      ; preds = %8
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str101194, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str102, i32 0, i32 0))
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = load %struct.predlist*, %struct.predlist** %1, align 8
  %17 = getelementptr inbounds %struct.predlist, %struct.predlist* %16, i32 0, i32 0
  %18 = load %struct.predicate*, %struct.predicate** %17, align 8
  call void @print_tree(%struct._IO_FILE* %15, %struct.predicate* %18, i32 2)
  br label %19

; <label>:19                                      ; preds = %12, %8
  %20 = load %struct.predlist*, %struct.predlist** %1, align 8
  %21 = getelementptr inbounds %struct.predlist, %struct.predlist* %20, i32 0, i32 0
  %22 = load %struct.predicate*, %struct.predicate** %21, align 8
  %23 = call float @calculate_derived_rates(%struct.predicate* %22)
  call void @predlist_init(%struct.predlist* %new_list)
  br label %24

; <label>:24                                      ; preds = %103, %19
  %25 = load %struct.predlist*, %struct.predlist** %1, align 8
  %26 = getelementptr inbounds %struct.predlist, %struct.predlist* %25, i32 0, i32 0
  %27 = load %struct.predicate*, %struct.predicate** %26, align 8
  %28 = icmp ne %struct.predicate* %27, null
  br i1 %28, label %29, label %104

; <label>:29                                      ; preds = %24
  %30 = load %struct.predlist*, %struct.predlist** %1, align 8
  %31 = getelementptr inbounds %struct.predlist, %struct.predlist* %30, i32 0, i32 0
  %32 = load %struct.predicate*, %struct.predicate** %31, align 8
  store %struct.predicate* %32, %struct.predicate** %q, align 8
  %33 = load %struct.predlist*, %struct.predlist** %1, align 8
  %34 = getelementptr inbounds %struct.predlist, %struct.predlist* %33, i32 0, i32 0
  %35 = load %struct.predicate*, %struct.predicate** %34, align 8
  %36 = getelementptr inbounds %struct.predicate, %struct.predicate* %35, i32 0, i32 15
  %37 = load %struct.predicate*, %struct.predicate** %36, align 8
  %38 = load %struct.predlist*, %struct.predlist** %1, align 8
  %39 = getelementptr inbounds %struct.predlist, %struct.predlist* %38, i32 0, i32 0
  store %struct.predicate* %37, %struct.predicate** %39, align 8
  %40 = load %struct.predicate*, %struct.predicate** %q, align 8
  %41 = getelementptr inbounds %struct.predicate, %struct.predicate* %40, i32 0, i32 15
  store %struct.predicate* null, %struct.predicate** %41, align 8
  %42 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 0
  %43 = load %struct.predicate*, %struct.predicate** %42, align 8
  store %struct.predicate* %43, %struct.predicate** %p, align 8
  br label %44

; <label>:44                                      ; preds = %65, %29
  %45 = load %struct.predicate*, %struct.predicate** %p, align 8
  %46 = icmp ne %struct.predicate* %45, null
  br i1 %46, label %47, label %69

; <label>:47                                      ; preds = %44
  %48 = load %struct.predicate*, %struct.predicate** %p, align 8
  %49 = getelementptr inbounds %struct.predicate, %struct.predicate* %48, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = icmp ne i32 2, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %wantfailure, align 1
  %53 = load %struct.predicate*, %struct.predicate** %p, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 16
  %55 = load %struct.predicate*, %struct.predicate** %54, align 8
  %56 = load %struct.predicate*, %struct.predicate** %q, align 8
  %57 = getelementptr inbounds %struct.predicate, %struct.predicate* %56, i32 0, i32 16
  %58 = load %struct.predicate*, %struct.predicate** %57, align 8
  %59 = load i8, i8* %wantfailure, align 1
  %60 = trunc i8 %59 to i1
  %61 = call i32 @pred_cost_compare(%struct.predicate* %55, %struct.predicate* %58, i1 zeroext %60)
  %62 = icmp sge i32 %61, 0
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %47
  br label %69

; <label>:64                                      ; preds = %47
  br label %65

; <label>:65                                      ; preds = %64
  %66 = load %struct.predicate*, %struct.predicate** %p, align 8
  %67 = getelementptr inbounds %struct.predicate, %struct.predicate* %66, i32 0, i32 15
  %68 = load %struct.predicate*, %struct.predicate** %67, align 8
  store %struct.predicate* %68, %struct.predicate** %p, align 8
  br label %44

; <label>:69                                      ; preds = %63, %44
  %70 = load %struct.predicate*, %struct.predicate** %p, align 8
  %71 = icmp ne %struct.predicate* %70, null
  br i1 %71, label %72, label %89

; <label>:72                                      ; preds = %69
  %73 = load %struct.predicate*, %struct.predicate** %p, align 8
  %74 = getelementptr inbounds %struct.predicate, %struct.predicate* %73, i32 0, i32 15
  %75 = load %struct.predicate*, %struct.predicate** %74, align 8
  %76 = load %struct.predicate*, %struct.predicate** %q, align 8
  %77 = getelementptr inbounds %struct.predicate, %struct.predicate* %76, i32 0, i32 15
  store %struct.predicate* %75, %struct.predicate** %77, align 8
  %78 = load %struct.predicate*, %struct.predicate** %q, align 8
  %79 = getelementptr inbounds %struct.predicate, %struct.predicate* %78, i32 0, i32 15
  %80 = load %struct.predicate*, %struct.predicate** %79, align 8
  %81 = icmp eq %struct.predicate* null, %80
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %72
  %83 = load %struct.predicate*, %struct.predicate** %q, align 8
  %84 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 1
  store %struct.predicate* %83, %struct.predicate** %84, align 8
  br label %85

; <label>:85                                      ; preds = %82, %72
  %86 = load %struct.predicate*, %struct.predicate** %q, align 8
  %87 = load %struct.predicate*, %struct.predicate** %p, align 8
  %88 = getelementptr inbounds %struct.predicate, %struct.predicate* %87, i32 0, i32 15
  store %struct.predicate* %86, %struct.predicate** %88, align 8
  br label %103

; <label>:89                                      ; preds = %69
  %90 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 0
  %91 = load %struct.predicate*, %struct.predicate** %90, align 8
  %92 = load %struct.predicate*, %struct.predicate** %q, align 8
  %93 = getelementptr inbounds %struct.predicate, %struct.predicate* %92, i32 0, i32 15
  store %struct.predicate* %91, %struct.predicate** %93, align 8
  %94 = load %struct.predicate*, %struct.predicate** %q, align 8
  %95 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 0
  store %struct.predicate* %94, %struct.predicate** %95, align 8
  %96 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 1
  %97 = load %struct.predicate*, %struct.predicate** %96, align 8
  %98 = icmp eq %struct.predicate* null, %97
  br i1 %98, label %99, label %102

; <label>:99                                      ; preds = %89
  %100 = load %struct.predicate*, %struct.predicate** %q, align 8
  %101 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 1
  store %struct.predicate* %100, %struct.predicate** %101, align 8
  br label %102

; <label>:102                                     ; preds = %99, %89
  br label %103

; <label>:103                                     ; preds = %102, %85
  br label %24

; <label>:104                                     ; preds = %24
  %105 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %106 = and i64 %105, 8
  %107 = icmp ne i64 %106, 0
  br i1 %107, label %108, label %114

; <label>:108                                     ; preds = %104
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str101194, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str103, i32 0, i32 0))
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 0
  %113 = load %struct.predicate*, %struct.predicate** %112, align 8
  call void @print_tree(%struct._IO_FILE* %111, %struct.predicate* %113, i32 2)
  br label %114

; <label>:114                                     ; preds = %108, %104
  %115 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 0
  %116 = load %struct.predicate*, %struct.predicate** %115, align 8
  %117 = call float @calculate_derived_rates(%struct.predicate* %116)
  %118 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 0
  %119 = load %struct.predicate*, %struct.predicate** %118, align 8
  %120 = getelementptr inbounds %struct.predlist, %struct.predlist* %new_list, i32 0, i32 1
  %121 = load %struct.predicate*, %struct.predicate** %120, align 8
  %122 = load %struct.predicate**, %struct.predicate*** %2, align 8
  call void @merge_pred(%struct.predicate* %119, %struct.predicate* %121, %struct.predicate** %122)
  %123 = load %struct.predlist*, %struct.predlist** %1, align 8
  call void @predlist_init(%struct.predlist* %123)
  br label %124

; <label>:124                                     ; preds = %114, %7
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @merge_pred(%struct.predicate* %beg_list, %struct.predicate* %end_list, %struct.predicate** %last_p) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca %struct.predicate*, align 8
  %3 = alloca %struct.predicate**, align 8
  store %struct.predicate* %beg_list, %struct.predicate** %1, align 8
  store %struct.predicate* %end_list, %struct.predicate** %2, align 8
  store %struct.predicate** %last_p, %struct.predicate*** %3, align 8
  %4 = load %struct.predicate**, %struct.predicate*** %3, align 8
  %5 = load %struct.predicate*, %struct.predicate** %4, align 8
  %6 = load %struct.predicate*, %struct.predicate** %2, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 15
  store %struct.predicate* %5, %struct.predicate** %7, align 8
  %8 = load %struct.predicate*, %struct.predicate** %1, align 8
  %9 = load %struct.predicate**, %struct.predicate*** %3, align 8
  store %struct.predicate* %8, %struct.predicate** %9, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @pred_cost_compare(%struct.predicate* %p1, %struct.predicate* %p2, i1 zeroext %wantfailure) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.predicate*, align 8
  %3 = alloca %struct.predicate*, align 8
  %4 = alloca i8, align 1
  store %struct.predicate* %p1, %struct.predicate** %2, align 8
  store %struct.predicate* %p2, %struct.predicate** %3, align 8
  %5 = zext i1 %wantfailure to i8
  store i8 %5, i8* %4, align 1
  %6 = load %struct.predicate*, %struct.predicate** %2, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = load %struct.predicate*, %struct.predicate** %3, align 8
  %10 = getelementptr inbounds %struct.predicate, %struct.predicate* %9, i32 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %13, label %43

; <label>:13                                      ; preds = %0
  %14 = load %struct.predicate*, %struct.predicate** %2, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 9
  %16 = load float, float* %15, align 4
  %17 = load %struct.predicate*, %struct.predicate** %3, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 9
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %16, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %13
  store i32 0, i32* %1
  br label %52

; <label>:22                                      ; preds = %13
  %23 = load i8, i8* %4, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %25, label %34

; <label>:25                                      ; preds = %22
  %26 = load %struct.predicate*, %struct.predicate** %2, align 8
  %27 = getelementptr inbounds %struct.predicate, %struct.predicate* %26, i32 0, i32 9
  %28 = load float, float* %27, align 4
  %29 = load %struct.predicate*, %struct.predicate** %3, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 9
  %31 = load float, float* %30, align 4
  %32 = fcmp olt float %28, %31
  %33 = select i1 %32, i32 -1, i32 1
  store i32 %33, i32* %1
  br label %52

; <label>:34                                      ; preds = %22
  %35 = load %struct.predicate*, %struct.predicate** %2, align 8
  %36 = getelementptr inbounds %struct.predicate, %struct.predicate* %35, i32 0, i32 9
  %37 = load float, float* %36, align 4
  %38 = load %struct.predicate*, %struct.predicate** %3, align 8
  %39 = getelementptr inbounds %struct.predicate, %struct.predicate* %38, i32 0, i32 9
  %40 = load float, float* %39, align 4
  %41 = fcmp olt float %37, %40
  %42 = select i1 %41, i32 1, i32 -1
  store i32 %42, i32* %1
  br label %52

; <label>:43                                      ; preds = %0
  %44 = load %struct.predicate*, %struct.predicate** %2, align 8
  %45 = getelementptr inbounds %struct.predicate, %struct.predicate* %44, i32 0, i32 8
  %46 = load i32, i32* %45, align 4
  %47 = load %struct.predicate*, %struct.predicate** %3, align 8
  %48 = getelementptr inbounds %struct.predicate, %struct.predicate* %47, i32 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %46, %49
  %51 = select i1 %50, i32 -1, i32 1
  store i32 %51, i32* %1
  br label %52

; <label>:52                                      ; preds = %43, %34, %25, %21
  %53 = load i32, i32* %1
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal void @predlist_insert(%struct.predlist* %list, %struct.predicate* %curr, %struct.predicate** %pprev) #0 {
  %1 = alloca %struct.predlist*, align 8
  %2 = alloca %struct.predicate*, align 8
  %3 = alloca %struct.predicate**, align 8
  %insertpos = alloca %struct.predicate**, align 8
  store %struct.predlist* %list, %struct.predlist** %1, align 8
  store %struct.predicate* %curr, %struct.predicate** %2, align 8
  store %struct.predicate** %pprev, %struct.predicate*** %3, align 8
  %4 = load %struct.predlist*, %struct.predlist** %1, align 8
  %5 = getelementptr inbounds %struct.predlist, %struct.predlist* %4, i32 0, i32 0
  store %struct.predicate** %5, %struct.predicate*** %insertpos, align 8
  %6 = load %struct.predicate*, %struct.predicate** %2, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 15
  %8 = load %struct.predicate*, %struct.predicate** %7, align 8
  %9 = load %struct.predicate**, %struct.predicate*** %3, align 8
  store %struct.predicate* %8, %struct.predicate** %9, align 8
  %10 = load i16, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %11 = zext i16 %10 to i32
  %12 = icmp sgt i32 %11, 2
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  br label %14

; <label>:14                                      ; preds = %13, %0
  %15 = load %struct.predicate**, %struct.predicate*** %insertpos, align 8
  %16 = load %struct.predicate*, %struct.predicate** %15, align 8
  %17 = load %struct.predicate*, %struct.predicate** %2, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 15
  store %struct.predicate* %16, %struct.predicate** %18, align 8
  %19 = load %struct.predicate*, %struct.predicate** %2, align 8
  %20 = load %struct.predicate**, %struct.predicate*** %insertpos, align 8
  store %struct.predicate* %19, %struct.predicate** %20, align 8
  %21 = load %struct.predlist*, %struct.predlist** %1, align 8
  %22 = getelementptr inbounds %struct.predlist, %struct.predlist* %21, i32 0, i32 1
  %23 = load %struct.predicate*, %struct.predicate** %22, align 8
  %24 = icmp eq %struct.predicate* null, %23
  br i1 %24, label %25, label %31

; <label>:25                                      ; preds = %14
  %26 = load %struct.predlist*, %struct.predlist** %1, align 8
  %27 = getelementptr inbounds %struct.predlist, %struct.predlist* %26, i32 0, i32 0
  %28 = load %struct.predicate*, %struct.predicate** %27, align 8
  %29 = load %struct.predlist*, %struct.predlist** %1, align 8
  %30 = getelementptr inbounds %struct.predlist, %struct.predlist* %29, i32 0, i32 1
  store %struct.predicate* %28, %struct.predicate** %30, align 8
  br label %31

; <label>:31                                      ; preds = %25, %14
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @predicate_is_cost_free(%struct.predicate* %p) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.predicate*, align 8
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = getelementptr inbounds %struct.predicate, %struct.predicate* %3, i32 0, i32 0
  %5 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %4, align 8
  %6 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %5, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_name to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %6, label %22, label %7

; <label>:7                                       ; preds = %0
  %8 = load %struct.predicate*, %struct.predicate** %2, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 0
  %10 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %9, align 8
  %11 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %10, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_path to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %11, label %22, label %12

; <label>:12                                      ; preds = %7
  %13 = load %struct.predicate*, %struct.predicate** %2, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 0
  %15 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %14, align 8
  %16 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %15, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_iname to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %16, label %22, label %17

; <label>:17                                      ; preds = %12
  %18 = load %struct.predicate*, %struct.predicate** %2, align 8
  %19 = getelementptr inbounds %struct.predicate, %struct.predicate* %18, i32 0, i32 0
  %20 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %19, align 8
  %21 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %20, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ipath to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %17, %12, %7, %0
  store i1 true, i1* %1
  br label %54

; <label>:23                                      ; preds = %17
  %24 = load i16, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %25 = zext i16 %24 to i32
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %53

; <label>:27                                      ; preds = %23
  %28 = load %struct.predicate*, %struct.predicate** %2, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 0
  %30 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %29, align 8
  %31 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %30, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %31, label %47, label %32

; <label>:32                                      ; preds = %27
  %33 = load %struct.predicate*, %struct.predicate** %2, align 8
  %34 = getelementptr inbounds %struct.predicate, %struct.predicate* %33, i32 0, i32 0
  %35 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %34, align 8
  %36 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %35, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_negate to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %36, label %47, label %37

; <label>:37                                      ; preds = %32
  %38 = load %struct.predicate*, %struct.predicate** %2, align 8
  %39 = getelementptr inbounds %struct.predicate, %struct.predicate* %38, i32 0, i32 0
  %40 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %39, align 8
  %41 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %40, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_comma to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %41, label %47, label %42

; <label>:42                                      ; preds = %37
  %43 = load %struct.predicate*, %struct.predicate** %2, align 8
  %44 = getelementptr inbounds %struct.predicate, %struct.predicate* %43, i32 0, i32 0
  %45 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %44, align 8
  %46 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %45, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %46, label %47, label %48

; <label>:47                                      ; preds = %42, %37, %32, %27
  store i1 false, i1* %1
  br label %54

; <label>:48                                      ; preds = %42
  %49 = load %struct.predicate*, %struct.predicate** %2, align 8
  %50 = getelementptr inbounds %struct.predicate, %struct.predicate* %49, i32 0, i32 8
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 0, %51
  store i1 %52, i1* %1
  br label %54

; <label>:53                                      ; preds = %23
  store i1 false, i1* %1
  br label %54

; <label>:54                                      ; preds = %53, %48, %47, %22
  %55 = load i1, i1* %1
  ret i1 %55
}

; Function Attrs: nounwind uwtable
define internal %struct.predicate* @set_new_parent(%struct.predicate* %curr, i32 %high_prec, %struct.predicate** %prevp) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.predicate**, align 8
  %new_parent = alloca %struct.predicate*, align 8
  store %struct.predicate* %curr, %struct.predicate** %1, align 8
  store i32 %high_prec, i32* %2, align 4
  store %struct.predicate** %prevp, %struct.predicate*** %3, align 8
  %4 = call noalias i8* @xmalloc(i64 280)
  %5 = bitcast i8* %4 to %struct.predicate*
  store %struct.predicate* %5, %struct.predicate** %new_parent, align 8
  %6 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 2
  store i32 3, i32* %7, align 4
  %8 = load i32, i32* %2, align 4
  %9 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %10 = getelementptr inbounds %struct.predicate, %struct.predicate* %9, i32 0, i32 3
  store i32 %8, i32* %10, align 4
  %11 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %12 = getelementptr inbounds %struct.predicate, %struct.predicate* %11, i32 0, i32 6
  store i8 0, i8* %12, align 1
  %13 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 7
  store i8 0, i8* %14, align 1
  %15 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 8
  store i32 0, i32* %16, align 4
  %17 = load i32, i32* %2, align 4
  switch i32 %17, label %47 [
    i32 1, label %18
    i32 2, label %25
    i32 3, label %36
  ]

; <label>:18                                      ; preds = %0
  %19 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_comma to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %20, align 8
  %21 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str64165, i32 0, i32 0), i8** %22, align 8
  %23 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %24 = getelementptr inbounds %struct.predicate, %struct.predicate* %23, i32 0, i32 9
  store float 1.000000e+00, float* %24, align 4
  br label %48

; <label>:25                                      ; preds = %0
  %26 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %27 = getelementptr inbounds %struct.predicate, %struct.predicate* %26, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %27, align 8
  %28 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str104, i32 0, i32 0), i8** %29, align 8
  %30 = load %struct.predicate*, %struct.predicate** %1, align 8
  %31 = getelementptr inbounds %struct.predicate, %struct.predicate* %30, i32 0, i32 9
  %32 = load float, float* %31, align 4
  %33 = call float @constrain_rate(float %32)
  %34 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %35 = getelementptr inbounds %struct.predicate, %struct.predicate* %34, i32 0, i32 9
  store float %33, float* %35, align 4
  br label %48

; <label>:36                                      ; preds = %0
  %37 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %38 = getelementptr inbounds %struct.predicate, %struct.predicate* %37, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %38, align 8
  %39 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %40 = getelementptr inbounds %struct.predicate, %struct.predicate* %39, i32 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str45146, i32 0, i32 0), i8** %40, align 8
  %41 = load %struct.predicate*, %struct.predicate** %1, align 8
  %42 = getelementptr inbounds %struct.predicate, %struct.predicate* %41, i32 0, i32 9
  %43 = load float, float* %42, align 4
  %44 = call float @constrain_rate(float %43)
  %45 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %46 = getelementptr inbounds %struct.predicate, %struct.predicate* %45, i32 0, i32 9
  store float %44, float* %46, align 4
  br label %48

; <label>:47                                      ; preds = %0
  br label %48

; <label>:48                                      ; preds = %47, %36, %25, %18
  %49 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %50 = getelementptr inbounds %struct.predicate, %struct.predicate* %49, i32 0, i32 4
  store i8 0, i8* %50, align 1
  %51 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %52 = getelementptr inbounds %struct.predicate, %struct.predicate* %51, i32 0, i32 5
  store i8 0, i8* %52, align 1
  %53 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 13
  %55 = bitcast %union.anon* %54 to i8**
  store i8* null, i8** %55, align 8
  %56 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %57 = getelementptr inbounds %struct.predicate, %struct.predicate* %56, i32 0, i32 14
  store %struct.predicate* null, %struct.predicate** %57, align 8
  %58 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %59 = getelementptr inbounds %struct.predicate, %struct.predicate* %58, i32 0, i32 15
  store %struct.predicate* null, %struct.predicate** %59, align 8
  %60 = load %struct.predicate*, %struct.predicate** %1, align 8
  %61 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %62 = getelementptr inbounds %struct.predicate, %struct.predicate* %61, i32 0, i32 16
  store %struct.predicate* %60, %struct.predicate** %62, align 8
  %63 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  %64 = load %struct.predicate**, %struct.predicate*** %3, align 8
  store %struct.predicate* %63, %struct.predicate** %64, align 8
  %65 = load %struct.predicate*, %struct.predicate** %new_parent, align 8
  ret %struct.predicate* %65
}

; Function Attrs: nounwind uwtable
define internal void @predlist_init(%struct.predlist* %p) #0 {
  %1 = alloca %struct.predlist*, align 8
  store %struct.predlist* %p, %struct.predlist** %1, align 8
  %2 = load %struct.predlist*, %struct.predlist** %1, align 8
  %3 = getelementptr inbounds %struct.predlist, %struct.predlist* %2, i32 0, i32 1
  store %struct.predicate* null, %struct.predicate** %3, align 8
  %4 = load %struct.predlist*, %struct.predlist** %1, align 8
  %5 = getelementptr inbounds %struct.predlist, %struct.predlist* %4, i32 0, i32 0
  store %struct.predicate* null, %struct.predicate** %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @get_pred_cost(%struct.predicate* %p) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.predicate*, align 8
  %data_requirement_cost = alloca i32, align 4
  %inherent_cost = alloca i32, align 4
  %key = alloca %struct.pred_cost_lookup, align 8
  %entry = alloca i8*, align 8
  store %struct.predicate* %p, %struct.predicate** %2, align 8
  store i32 0, i32* %data_requirement_cost, align 4
  store i32 9, i32* %inherent_cost, align 4
  %3 = load %struct.predicate*, %struct.predicate** %2, align 8
  %4 = getelementptr inbounds %struct.predicate, %struct.predicate* %3, i32 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = trunc i8 %5 to i1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i32 2, i32* %data_requirement_cost, align 4
  br label %16

; <label>:8                                       ; preds = %0
  %9 = load %struct.predicate*, %struct.predicate** %2, align 8
  %10 = getelementptr inbounds %struct.predicate, %struct.predicate* %9, i32 0, i32 7
  %11 = load i8, i8* %10, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %8
  store i32 1, i32* %data_requirement_cost, align 4
  br label %15

; <label>:14                                      ; preds = %8
  store i32 0, i32* %data_requirement_cost, align 4
  br label %15

; <label>:15                                      ; preds = %14, %13
  br label %16

; <label>:16                                      ; preds = %15, %7
  %17 = load %struct.predicate*, %struct.predicate** %2, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 0
  %19 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %18, align 8
  %20 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %19, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_exec to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %20, label %26, label %21

; <label>:21                                      ; preds = %16
  %22 = load %struct.predicate*, %struct.predicate** %2, align 8
  %23 = getelementptr inbounds %struct.predicate, %struct.predicate* %22, i32 0, i32 0
  %24 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %23, align 8
  %25 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %24, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %25, label %26, label %36

; <label>:26                                      ; preds = %21, %16
  %27 = load %struct.predicate*, %struct.predicate** %2, align 8
  %28 = getelementptr inbounds %struct.predicate, %struct.predicate* %27, i32 0, i32 13
  %29 = bitcast %union.anon* %28 to %struct.exec_val*
  %30 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %29, i32 0, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %26
  store i32 6, i32* %inherent_cost, align 4
  br label %35

; <label>:34                                      ; preds = %26
  store i32 7, i32* %inherent_cost, align 4
  br label %35

; <label>:35                                      ; preds = %34, %33
  br label %72

; <label>:36                                      ; preds = %21
  %37 = load %struct.predicate*, %struct.predicate** %2, align 8
  %38 = getelementptr inbounds %struct.predicate, %struct.predicate* %37, i32 0, i32 0
  %39 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %38, align 8
  %40 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %39, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprintf to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %36
  %42 = load %struct.predicate*, %struct.predicate** %2, align 8
  %43 = getelementptr inbounds %struct.predicate, %struct.predicate* %42, i32 0, i32 8
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %inherent_cost, align 4
  br label %71

; <label>:45                                      ; preds = %36
  %46 = load i32, i32* @pred_table_sorted, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %52, label %48

; <label>:48                                      ; preds = %45
  call void @qsort(i8* bitcast (<{ { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } }>* @costlookup to i8*), i64 58, i64 16, i32 (i8*, i8*)* @cost_table_comparison)
  %49 = call zeroext i1 @check_sorted(i8* bitcast (<{ { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } }>* @costlookup to i8*), i64 58, i64 16, i32 (i8*, i8*)* @cost_table_comparison)
  br i1 %49, label %51, label %50

; <label>:50                                      ; preds = %48
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str105, i32 0, i32 0))
  br label %51

; <label>:51                                      ; preds = %50, %48
  store i32 1, i32* @pred_table_sorted, align 4
  br label %52

; <label>:52                                      ; preds = %51, %45
  %53 = load %struct.predicate*, %struct.predicate** %2, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 0
  %55 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %54, align 8
  %56 = getelementptr inbounds %struct.pred_cost_lookup, %struct.pred_cost_lookup* %key, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %55, i1 (i8*, %struct.stat*, %struct.predicate*)** %56, align 8
  %57 = bitcast %struct.pred_cost_lookup* %key to i8*
  %58 = call i8* @bsearch(i8* %57, i8* bitcast (<{ { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] }, { i1 (i8*, %struct.stat*, %struct.predicate*)*, i32, [4 x i8] } }>* @costlookup to i8*), i64 58, i64 16, i32 (i8*, i8*)* @cost_table_comparison)
  store i8* %58, i8** %entry, align 8
  %59 = load i8*, i8** %entry, align 8
  %60 = icmp ne i8* %59, null
  br i1 %60, label %61, label %66

; <label>:61                                      ; preds = %52
  %62 = load i8*, i8** %entry, align 8
  %63 = bitcast i8* %62 to %struct.pred_cost_lookup*
  %64 = getelementptr inbounds %struct.pred_cost_lookup, %struct.pred_cost_lookup* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %inherent_cost, align 4
  br label %70

; <label>:66                                      ; preds = %52
  %67 = load %struct.predicate*, %struct.predicate** %2, align 8
  %68 = getelementptr inbounds %struct.predicate, %struct.predicate* %67, i32 0, i32 1
  %69 = load i8*, i8** %68, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str106, i32 0, i32 0), i8* %69)
  store i32 9, i32* %inherent_cost, align 4
  br label %70

; <label>:70                                      ; preds = %66, %61
  br label %71

; <label>:71                                      ; preds = %70, %41
  br label %72

; <label>:72                                      ; preds = %71, %35
  %73 = load i32, i32* %inherent_cost, align 4
  %74 = load i32, i32* %data_requirement_cost, align 4
  %75 = icmp ugt i32 %73, %74
  br i1 %75, label %76, label %78

; <label>:76                                      ; preds = %72
  %77 = load i32, i32* %inherent_cost, align 4
  store i32 %77, i32* %1
  br label %80

; <label>:78                                      ; preds = %72
  %79 = load i32, i32* %data_requirement_cost, align 4
  store i32 %79, i32* %1
  br label %80

; <label>:80                                      ; preds = %78, %76
  %81 = load i32, i32* %1
  ret i32 %81
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @check_sorted(i8* %base, i64 %members, i64 %membersize, i32 (i8*, i8*)* %cmpfn) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32 (i8*, i8*)*, align 8
  %p = alloca i8*, align 8
  %i = alloca i64, align 8
  %result = alloca i32, align 4
  store i8* %base, i8** %2, align 8
  store i64 %members, i64* %3, align 8
  store i64 %membersize, i64* %4, align 8
  store i32 (i8*, i8*)* %cmpfn, i32 (i8*, i8*)** %5, align 8
  %6 = load i8*, i8** %2, align 8
  store i8* %6, i8** %p, align 8
  store i64 1, i64* %i, align 8
  br label %7

; <label>:7                                       ; preds = %48, %0
  %8 = load i64, i64* %i, align 8
  %9 = load i64, i64* %3, align 8
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %11, label %51

; <label>:11                                      ; preds = %7
  %12 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %5, align 8
  %13 = load i8*, i8** %p, align 8
  %14 = load i64, i64* %i, align 8
  %15 = load i64, i64* %4, align 8
  %16 = mul i64 %14, %15
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = load i8*, i8** %p, align 8
  %19 = load i64, i64* %i, align 8
  %20 = sub i64 %19, 1
  %21 = load i64, i64* %4, align 8
  %22 = mul i64 %20, %21
  %23 = getelementptr inbounds i8, i8* %18, i64 %22
  %24 = call i32 %12(i8* %17, i8* %23)
  store i32 %24, i32* %result, align 4
  %25 = load i32, i32* %result, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %11
  store i1 false, i1* %1
  br label %52

; <label>:28                                      ; preds = %11
  %29 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %5, align 8
  %30 = load i8*, i8** %p, align 8
  %31 = load i64, i64* %i, align 8
  %32 = sub i64 %31, 1
  %33 = load i64, i64* %4, align 8
  %34 = mul i64 %32, %33
  %35 = getelementptr inbounds i8, i8* %30, i64 %34
  %36 = load i8*, i8** %p, align 8
  %37 = load i64, i64* %i, align 8
  %38 = load i64, i64* %4, align 8
  %39 = mul i64 %37, %38
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  %41 = call i32 %29(i8* %35, i8* %40)
  store i32 %41, i32* %result, align 4
  %42 = load i32, i32* %result, align 4
  %43 = icmp sle i32 %42, 0
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %28
  br label %47

; <label>:45                                      ; preds = %28
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13114, i32 0, i32 0), i32 972, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.check_sorted, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %47

; <label>:47                                      ; preds = %46, %44
  br label %48

; <label>:48                                      ; preds = %47
  %49 = load i64, i64* %i, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %i, align 8
  br label %7

; <label>:51                                      ; preds = %7
  store i1 true, i1* %1
  br label %52

; <label>:52                                      ; preds = %51, %27
  %53 = load i1, i1* %1
  ret i1 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @cost_table_comparison(i8* %p1, i8* %p2) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %pc1 = alloca %struct.pred_cost_lookup*, align 8
  %pc2 = alloca %struct.pred_cost_lookup*, align 8
  %u1 = alloca %union.anon.0.30, align 8
  %u2 = alloca %union.anon.0.30, align 8
  store i8* %p1, i8** %1, align 8
  store i8* %p2, i8** %2, align 8
  %3 = load i8*, i8** %1, align 8
  %4 = bitcast i8* %3 to %struct.pred_cost_lookup*
  store %struct.pred_cost_lookup* %4, %struct.pred_cost_lookup** %pc1, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.pred_cost_lookup*
  store %struct.pred_cost_lookup* %6, %struct.pred_cost_lookup** %pc2, align 8
  %7 = load %struct.pred_cost_lookup*, %struct.pred_cost_lookup** %pc1, align 8
  %8 = getelementptr inbounds %struct.pred_cost_lookup, %struct.pred_cost_lookup* %7, i32 0, i32 0
  %9 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %8, align 8
  %10 = bitcast %union.anon.0.30* %u1 to i1 (i8*, %struct.stat*, %struct.predicate*)**
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %9, i1 (i8*, %struct.stat*, %struct.predicate*)** %10, align 8
  %11 = load %struct.pred_cost_lookup*, %struct.pred_cost_lookup** %pc2, align 8
  %12 = getelementptr inbounds %struct.pred_cost_lookup, %struct.pred_cost_lookup* %11, i32 0, i32 0
  %13 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %12, align 8
  %14 = bitcast %union.anon.0.30* %u2 to i1 (i8*, %struct.stat*, %struct.predicate*)**
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %13, i1 (i8*, %struct.stat*, %struct.predicate*)** %14, align 8
  %15 = bitcast %union.anon.0.30* %u1 to [8 x i8]*
  %16 = getelementptr inbounds [8 x i8], [8 x i8]* %15, i32 0, i32 0
  %17 = bitcast %union.anon.0.30* %u2 to [8 x i8]*
  %18 = getelementptr inbounds [8 x i8], [8 x i8]* %17, i32 0, i32 0
  %19 = call i32 @memcmp(i8* %16, i8* %18, i64 8) #14
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define %struct.predicate* @insert_primary_withpred(%struct.parser_table* %entry, i1 (i8*, %struct.stat*, %struct.predicate*)* %pred_func) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i1 (i8*, %struct.stat*, %struct.predicate*)*, align 8
  %new_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %pred_func, i1 (i8*, %struct.stat*, %struct.predicate*)** %2, align 8
  %3 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %4 = call %struct.predicate* @get_new_pred_chk_op(%struct.parser_table* %3)
  store %struct.predicate* %4, %struct.predicate** %new_pred, align 8
  %5 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %2, align 8
  %6 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %5, i1 (i8*, %struct.stat*, %struct.predicate*)** %7, align 8
  %8 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %9 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %8, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %12 = getelementptr inbounds %struct.predicate, %struct.predicate* %11, i32 0, i32 1
  store i8* %10, i8** %12, align 8
  %13 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 13
  %15 = bitcast %union.anon* %14 to i8**
  store i8* null, i8** %15, align 8
  %16 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 2
  store i32 1, i32* %17, align 4
  %18 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  %19 = getelementptr inbounds %struct.predicate, %struct.predicate* %18, i32 0, i32 3
  store i32 0, i32* %19, align 4
  %20 = load %struct.predicate*, %struct.predicate** %new_pred, align 8
  ret %struct.predicate* %20
}

; Function Attrs: nounwind uwtable
define %struct.predicate* @insert_primary(%struct.parser_table* %entry) #0 {
  %1 = alloca %struct.parser_table*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  %2 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %3 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %2, i32 0, i32 3
  %4 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %3, align 8
  %5 = icmp ne i1 (i8*, %struct.stat*, %struct.predicate*)* %4, null
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %9

; <label>:7                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1202, i32 0, i32 0), i32 123, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.insert_primary, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %9

; <label>:9                                       ; preds = %8, %6
  %10 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %11 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %12 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %11, i32 0, i32 3
  %13 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %12, align 8
  %14 = call %struct.predicate* @insert_primary_withpred(%struct.parser_table* %10, i1 (i8*, %struct.stat*, %struct.predicate*)* %13)
  ret %struct.predicate* %14
}

; Function Attrs: nounwind uwtable
define void @usage(%struct._IO_FILE* %fp, i32 %status, i8* %msg) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  store i32 %status, i32* %2, align 4
  store i8* %msg, i8** %3, align 8
  %4 = load i8*, i8** %3, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %8 = load i8*, i8** @program_name, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str2203, i32 0, i32 0), i8* %8, i8* %9)
  br label %11

; <label>:11                                      ; preds = %6, %0
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %13 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str3204, i32 0, i32 0)) #9
  %14 = load i8*, i8** @program_name, align 8
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* %13, i8* %14)
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  call void @show_valid_debug_options(%struct._IO_FILE* %16, i32 0)
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %18 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str4205, i32 0, i32 0)) #9
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* %18)
  %20 = load i32, i32* %2, align 4
  %21 = icmp ne i32 0, %20
  br i1 %21, label %22, label %24

; <label>:22                                      ; preds = %11
  %23 = load i32, i32* %2, align 4
  call void @exit(i32 %23) #12
  unreachable

; <label>:24                                      ; preds = %11
  ret void
}

; Function Attrs: nounwind uwtable
define void @set_stat_placeholders(%struct.stat* %p) #0 {
  %1 = alloca %struct.stat*, align 8
  store %struct.stat* %p, %struct.stat** %1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @get_statinfo(i8* %pathname, i8* %name, %struct.stat* %p) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat*, align 8
  store i8* %pathname, i8** %2, align 8
  store i8* %name, i8** %3, align 8
  store %struct.stat* %p, %struct.stat** %4, align 8
  %5 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  %6 = trunc i8 %5 to i1
  br i1 %6, label %39, label %7

; <label>:7                                       ; preds = %0
  %8 = load %struct.stat*, %struct.stat** %4, align 8
  call void @set_stat_placeholders(%struct.stat* %8)
  %9 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  %10 = load i8*, i8** %3, align 8
  %11 = load %struct.stat*, %struct.stat** %4, align 8
  %12 = call i32 %9(i8* %10, %struct.stat* %11)
  %13 = icmp eq i32 0, %12
  br i1 %13, label %14, label %25

; <label>:14                                      ; preds = %7
  %15 = load %struct.stat*, %struct.stat** %4, align 8
  %16 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 0, %17
  br i1 %18, label %19, label %24

; <label>:19                                      ; preds = %14
  %20 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str5206, i32 0, i32 0)) #9
  %21 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %22 = load i8*, i8** %3, align 8
  %23 = call i8* @quotearg_n_style(i32 0, i32 %21, i8* %22)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %20, i8* %23)
  br label %24

; <label>:24                                      ; preds = %19, %14
  br label %38

; <label>:25                                      ; preds = %7
  %26 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 6), align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %25
  %29 = call i32* @__errno_location() #13
  %30 = load i32, i32* %29, align 4
  %31 = icmp ne i32 %30, 2
  br i1 %31, label %32, label %37

; <label>:32                                      ; preds = %28, %25
  %33 = call i32* @__errno_location() #13
  %34 = load i32, i32* %33, align 4
  %35 = load i8*, i8** %2, align 8
  %36 = call i8* @safely_quote_err_filename(i32 0, i8* %35)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str6207, i32 0, i32 0), i8* %36)
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  br label %37

; <label>:37                                      ; preds = %32, %28
  store i32 -1, i32* %1
  br label %43

; <label>:38                                      ; preds = %24
  br label %39

; <label>:39                                      ; preds = %38, %0
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  %40 = load %struct.stat*, %struct.stat** %4, align 8
  %41 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  store i32 0, i32* %1
  br label %43

; <label>:43                                      ; preds = %39, %37
  %44 = load i32, i32* %1
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define i8* @safely_quote_err_filename(i32 %n, i8* %arg) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  store i32 %n, i32* %1, align 4
  store i8* %arg, i8** %2, align 8
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %5 = load i8*, i8** %2, align 8
  %6 = call i8* @quotearg_n_style(i32 %3, i32 %4, i8* %5)
  ret i8* %6
}

; Function Attrs: nounwind uwtable
define i32 @get_info(i8* %pathname, %struct.stat* %p, %struct.predicate* %pred_ptr) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate*, align 8
  %todo = alloca i8, align 1
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %p, %struct.stat** %3, align 8
  store %struct.predicate* %pred_ptr, %struct.predicate** %4, align 8
  store i8 0, i8* %todo, align 1
  %5 = load %struct.predicate*, %struct.predicate** %4, align 8
  %6 = getelementptr inbounds %struct.predicate, %struct.predicate* %5, i32 0, i32 6
  %7 = load i8, i8* %6, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  store i8 1, i8* %todo, align 1
  br label %22

; <label>:10                                      ; preds = %0
  %11 = load %struct.predicate*, %struct.predicate** %4, align 8
  %12 = getelementptr inbounds %struct.predicate, %struct.predicate* %11, i32 0, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %21

; <label>:15                                      ; preds = %10
  %16 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i32
  %19 = icmp eq i32 0, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %15
  store i8 1, i8* %todo, align 1
  br label %21

; <label>:21                                      ; preds = %20, %15, %10
  br label %22

; <label>:22                                      ; preds = %21, %9
  %23 = load i8, i8* %todo, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %25, label %30

; <label>:25                                      ; preds = %22
  %26 = load i8*, i8** %2, align 8
  %27 = load i8*, i8** getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 4), align 8
  %28 = load %struct.stat*, %struct.stat** %3, align 8
  %29 = call i32 @get_statinfo(i8* %26, i8* %27, %struct.stat* %28)
  store i32 %29, i32* %1
  br label %31

; <label>:30                                      ; preds = %22
  store i32 0, i32* %1
  br label %31

; <label>:31                                      ; preds = %30, %25
  %32 = load i32, i32* %1
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define zeroext i1 @check_nofollow() #0 {
  %1 = alloca i1, align 1
  %uts = alloca %struct.utsname, align 1
  %release = alloca float, align 4
  %2 = call i32 @uname(%struct.utsname* %uts) #9
  %3 = icmp eq i32 0, %2
  br i1 %3, label %4, label %28

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.utsname, %struct.utsname* %uts, i32 0, i32 2
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %5, i32 0, i32 0
  %7 = call double @atof(i8* %6) #14
  %8 = fptrunc double %7 to float
  store float %8, float* %release, align 4
  %9 = getelementptr inbounds %struct.utsname, %struct.utsname* %uts, i32 0, i32 0
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* %9, i32 0, i32 0
  %11 = call i32 @strcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str7208, i32 0, i32 0), i8* %10) #14
  %12 = icmp eq i32 0, %11
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %4
  %14 = load float, float* %release, align 4
  %15 = fpext float %14 to double
  %16 = fcmp oge double %15, 2.200000e+00
  store i1 %16, i1* %1
  br label %29

; <label>:17                                      ; preds = %4
  %18 = getelementptr inbounds %struct.utsname, %struct.utsname* %uts, i32 0, i32 0
  %19 = getelementptr inbounds [65 x i8], [65 x i8]* %18, i32 0, i32 0
  %20 = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str8209, i32 0, i32 0), i8* %19) #14
  %21 = icmp eq i32 0, %20
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %17
  %23 = load float, float* %release, align 4
  %24 = fpext float %23 to double
  %25 = fcmp oge double %24, 3.100000e+00
  store i1 %25, i1* %1
  br label %29

; <label>:26                                      ; preds = %17
  br label %27

; <label>:27                                      ; preds = %26
  br label %28

; <label>:28                                      ; preds = %27, %0
  store i1 true, i1* %1
  br label %29

; <label>:29                                      ; preds = %28, %22, %13
  %30 = load i1, i1* %1
  ret i1 %30
}

; Function Attrs: nounwind
declare i32 @uname(%struct.utsname*) #4

; Function Attrs: nounwind readonly
declare double @atof(i8*) #6

; Function Attrs: nounwind uwtable
define void @complete_pending_execdirs(i32 %dir_fd) #0 {
  %1 = alloca i32, align 4
  store i32 %dir_fd, i32* %1, align 4
  %2 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 9), align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %4, label %7

; <label>:4                                       ; preds = %0
  %5 = call %struct.predicate* @get_eval_tree()
  %6 = load i32, i32* %1, align 4
  call void @do_complete_pending_execdirs(%struct.predicate* %5, i32 %6)
  store i8 0, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 9), align 1
  br label %7

; <label>:7                                       ; preds = %4, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @complete_pending_execs(%struct.predicate* %p) #0 {
  %1 = alloca %struct.predicate*, align 8
  %execp = alloca %struct.exec_val*, align 8
  store %struct.predicate* %p, %struct.predicate** %1, align 8
  %2 = load %struct.predicate*, %struct.predicate** %1, align 8
  %3 = icmp eq %struct.predicate* null, %2
  br i1 %3, label %4, label %5

; <label>:4                                       ; preds = %0
  br label %40

; <label>:5                                       ; preds = %0
  %6 = load %struct.predicate*, %struct.predicate** %1, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 15
  %8 = load %struct.predicate*, %struct.predicate** %7, align 8
  call void @complete_pending_execs(%struct.predicate* %8)
  %9 = load %struct.predicate*, %struct.predicate** %1, align 8
  %10 = getelementptr inbounds %struct.predicate, %struct.predicate* %9, i32 0, i32 0
  %11 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %10, align 8
  %12 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %11, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_exec to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %12, label %13, label %36

; <label>:13                                      ; preds = %5
  %14 = load %struct.predicate*, %struct.predicate** %1, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 13
  %16 = bitcast %union.anon* %15 to %struct.exec_val*
  %17 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %16, i32 0, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %36

; <label>:20                                      ; preds = %13
  %21 = load %struct.predicate*, %struct.predicate** %1, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 13
  %23 = bitcast %union.anon* %22 to %struct.exec_val*
  store %struct.exec_val* %23, %struct.exec_val** %execp, align 8
  %24 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %25 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %24, i32 0, i32 2
  %26 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %25, i32 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %35

; <label>:29                                      ; preds = %20
  %30 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %31 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %30, i32 0, i32 1
  %32 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %33 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %32, i32 0, i32 2
  %34 = call i32 @launch(%struct.buildcmd_control* %31, %struct.buildcmd_state* %33)
  br label %35

; <label>:35                                      ; preds = %29, %20
  br label %36

; <label>:36                                      ; preds = %35, %13, %5
  %37 = load %struct.predicate*, %struct.predicate** %1, align 8
  %38 = getelementptr inbounds %struct.predicate, %struct.predicate* %37, i32 0, i32 16
  %39 = load %struct.predicate*, %struct.predicate** %38, align 8
  call void @complete_pending_execs(%struct.predicate* %39)
  br label %40

; <label>:40                                      ; preds = %36, %4
  ret void
}

; Function Attrs: nounwind uwtable
define void @cleanup() #0 {
  %eval_tree = alloca %struct.predicate*, align 8
  %1 = call %struct.predicate* @get_eval_tree()
  store %struct.predicate* %1, %struct.predicate** %eval_tree, align 8
  %2 = load %struct.predicate*, %struct.predicate** %eval_tree, align 8
  %3 = icmp ne %struct.predicate* %2, null
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = load %struct.predicate*, %struct.predicate** %eval_tree, align 8
  call void @traverse_tree(%struct.predicate* %5, void (%struct.predicate*)* @complete_pending_execs)
  %6 = call i32 @get_current_dirfd()
  call void @complete_pending_execdirs(i32 %6)
  %7 = load %struct.predicate*, %struct.predicate** %eval_tree, align 8
  call void @traverse_tree(%struct.predicate* %7, void (%struct.predicate*)* @flush_and_close_output_files)
  br label %8

; <label>:8                                       ; preds = %4, %0
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @optionh_stat(i8* %name, %struct.stat* %p) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %rv = alloca i32, align 4
  store i8* %name, i8** %2, align 8
  store %struct.stat* %p, %struct.stat** %3, align 8
  %4 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %5 = icmp ne i32 -100, %4
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %8 = icmp sge i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str9210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1202, i32 0, i32 0), i32 522, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__.optionh_stat, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  br label %13

; <label>:13                                      ; preds = %12, %0
  %14 = load %struct.stat*, %struct.stat** %3, align 8
  call void @set_stat_placeholders(%struct.stat* %14)
  %15 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 0), align 4
  %16 = icmp eq i32 0, %15
  br i1 %16, label %17, label %30

; <label>:17                                      ; preds = %13
  %18 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %19 = load i8*, i8** %2, align 8
  %20 = load %struct.stat*, %struct.stat** %3, align 8
  %21 = call i32 @fstatat(i32 %18, i8* %19, %struct.stat* %20, i32 0) #9
  store i32 %21, i32* %rv, align 4
  %22 = load i32, i32* %rv, align 4
  %23 = icmp eq i32 0, %22
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %17
  store i32 0, i32* %1
  br label %35

; <label>:25                                      ; preds = %17
  %26 = load i8*, i8** %2, align 8
  %27 = load %struct.stat*, %struct.stat** %3, align 8
  %28 = load i32, i32* %rv, align 4
  %29 = call i32 @fallback_stat(i8* %26, %struct.stat* %27, i32 %28)
  store i32 %29, i32* %1
  br label %35

; <label>:30                                      ; preds = %13
  %31 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %32 = load i8*, i8** %2, align 8
  %33 = load %struct.stat*, %struct.stat** %3, align 8
  %34 = call i32 @fstatat(i32 %31, i8* %32, %struct.stat* %33, i32 256) #9
  store i32 %34, i32* %1
  br label %35

; <label>:35                                      ; preds = %30, %25, %24
  %36 = load i32, i32* %1
  ret i32 %36
}

; Function Attrs: nounwind
declare i32 @fstatat(i32, i8*, %struct.stat*, i32) #4

; Function Attrs: nounwind uwtable
define i32 @optionl_stat(i8* %name, %struct.stat* %p) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %rv = alloca i32, align 4
  store i8* %name, i8** %2, align 8
  store %struct.stat* %p, %struct.stat** %3, align 8
  %4 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %5 = icmp ne i32 -100, %4
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %8 = icmp sge i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str9210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1202, i32 0, i32 0), i32 553, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__.optionl_stat, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  br label %13

; <label>:13                                      ; preds = %12, %0
  %14 = load %struct.stat*, %struct.stat** %3, align 8
  call void @set_stat_placeholders(%struct.stat* %14)
  %15 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %16 = load i8*, i8** %2, align 8
  %17 = load %struct.stat*, %struct.stat** %3, align 8
  %18 = call i32 @fstatat(i32 %15, i8* %16, %struct.stat* %17, i32 0) #9
  store i32 %18, i32* %rv, align 4
  %19 = load i32, i32* %rv, align 4
  %20 = icmp eq i32 0, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %13
  store i32 0, i32* %1
  br label %27

; <label>:22                                      ; preds = %13
  %23 = load i8*, i8** %2, align 8
  %24 = load %struct.stat*, %struct.stat** %3, align 8
  %25 = load i32, i32* %rv, align 4
  %26 = call i32 @fallback_stat(i8* %23, %struct.stat* %24, i32 %25)
  store i32 %26, i32* %1
  br label %27

; <label>:27                                      ; preds = %22, %21
  %28 = load i32, i32* %1
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define i32 @optionp_stat(i8* %name, %struct.stat* %p) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  store i8* %name, i8** %1, align 8
  store %struct.stat* %p, %struct.stat** %2, align 8
  %3 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %4 = icmp sge i32 %3, 0
  br i1 %4, label %8, label %5

; <label>:5                                       ; preds = %0
  %6 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %7 = icmp eq i32 %6, -100
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %5, %0
  br label %11

; <label>:9                                       ; preds = %5
  call void @__assert_fail(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str10211, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1202, i32 0, i32 0), i32 570, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__.optionp_stat, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = load %struct.stat*, %struct.stat** %2, align 8
  call void @set_stat_placeholders(%struct.stat* %12)
  %13 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %14 = load i8*, i8** %1, align 8
  %15 = load %struct.stat*, %struct.stat** %2, align 8
  %16 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %15, i32 256) #9
  ret i32 %16
}

; Function Attrs: nounwind uwtable
define i32 @debug_stat(i8* %file, %struct.stat* %bufp) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  store i8* %file, i8** %2, align 8
  store %struct.stat* %bufp, %struct.stat** %3, align 8
  %4 = load i64, i64* @stat_count, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* @stat_count, align 8
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str11212, i32 0, i32 0), i8* %7)
  %9 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 15), align 4
  switch i32 %9, label %22 [
    i32 1, label %10
    i32 2, label %14
    i32 0, label %18
  ]

; <label>:10                                      ; preds = %0
  %11 = load i8*, i8** %2, align 8
  %12 = load %struct.stat*, %struct.stat** %3, align 8
  %13 = call i32 @optionl_stat(i8* %11, %struct.stat* %12)
  store i32 %13, i32* %1
  br label %23

; <label>:14                                      ; preds = %0
  %15 = load i8*, i8** %2, align 8
  %16 = load %struct.stat*, %struct.stat** %3, align 8
  %17 = call i32 @optionh_stat(i8* %15, %struct.stat* %16)
  store i32 %17, i32* %1
  br label %23

; <label>:18                                      ; preds = %0
  %19 = load i8*, i8** %2, align 8
  %20 = load %struct.stat*, %struct.stat** %3, align 8
  %21 = call i32 @optionp_stat(i8* %19, %struct.stat* %20)
  store i32 %21, i32* %1
  br label %23

; <label>:22                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str12213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1202, i32 0, i32 0), i32 594, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__PRETTY_FUNCTION__.debug_stat, i32 0, i32 0)) #12
  unreachable

; <label>:23                                      ; preds = %18, %14, %10
  %24 = load i32, i32* %1
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define i32 @following_links() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 15), align 4
  switch i32 %2, label %9 [
    i32 1, label %3
    i32 2, label %4
    i32 0, label %8
  ]

; <label>:3                                       ; preds = %0
  store i32 1, i32* %1
  br label %10

; <label>:4                                       ; preds = %0
  %5 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 0), align 4
  %6 = icmp eq i32 %5, 0
  %7 = zext i1 %6 to i32
  store i32 %7, i32* %1
  br label %10

; <label>:8                                       ; preds = %0
  br label %9

; <label>:9                                       ; preds = %8, %0
  store i32 0, i32* %1
  br label %10

; <label>:10                                      ; preds = %9, %4, %3
  %11 = load i32, i32* %1
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i32 @digest_mode(i32 %mode, i8* %pathname, i8* %name, %struct.stat* %pstat, i1 zeroext %leaf) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.stat*, align 8
  %6 = alloca i8, align 1
  store i32 %mode, i32* %2, align 4
  store i8* %pathname, i8** %3, align 8
  store i8* %name, i8** %4, align 8
  store %struct.stat* %pstat, %struct.stat** %5, align 8
  %7 = zext i1 %leaf to i8
  store i8 %7, i8* %6, align 1
  %8 = load i32, i32* %2, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %33

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %2, align 4
  %12 = and i32 %11, 61440
  %13 = icmp eq i32 %12, 40960
  br i1 %13, label %14, label %28

; <label>:14                                      ; preds = %10
  %15 = call i32 @following_links()
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %28

; <label>:17                                      ; preds = %14
  %18 = load i8*, i8** %3, align 8
  %19 = load i8*, i8** %4, align 8
  %20 = load %struct.stat*, %struct.stat** %5, align 8
  %21 = call i32 @get_statinfo(i8* %18, i8* %19, %struct.stat* %20)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %17
  store i32 0, i32* %1
  br label %50

; <label>:24                                      ; preds = %17
  %25 = load %struct.stat*, %struct.stat** %5, align 8
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  store i32 %27, i32* %2, align 4
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  br label %32

; <label>:28                                      ; preds = %14, %10
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  %29 = load i32, i32* %2, align 4
  store i32 %29, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  %30 = load %struct.stat*, %struct.stat** %5, align 8
  %31 = getelementptr inbounds %struct.stat, %struct.stat* %30, i32 0, i32 3
  store i32 %29, i32* %31, align 4
  br label %32

; <label>:32                                      ; preds = %28, %24
  br label %49

; <label>:33                                      ; preds = %0
  %34 = load i8, i8* %6, align 1
  %35 = trunc i8 %34 to i1
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %33
  store i8 0, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 1), align 1
  store i8 0, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  store i32 0, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  br label %48

; <label>:37                                      ; preds = %33
  %38 = load i8*, i8** %3, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = load %struct.stat*, %struct.stat** %5, align 8
  %41 = call i32 @get_statinfo(i8* %38, i8* %39, %struct.stat* %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %37
  store i32 0, i32* %1
  br label %50

; <label>:44                                      ; preds = %37
  %45 = load %struct.stat*, %struct.stat** %5, align 8
  %46 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 3), align 4
  store i8 1, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 2), align 1
  br label %48

; <label>:48                                      ; preds = %44, %36
  br label %49

; <label>:49                                      ; preds = %48, %32
  store i32 1, i32* %1
  br label %50

; <label>:50                                      ; preds = %49, %43, %23
  %51 = load i32, i32* %1
  ret i32 %51
}

; Function Attrs: nounwind uwtable
define zeroext i1 @default_prints(%struct.predicate* %pred) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.predicate*, align 8
  store %struct.predicate* %pred, %struct.predicate** %2, align 8
  br label %3

; <label>:3                                       ; preds = %12, %0
  %4 = load %struct.predicate*, %struct.predicate** %2, align 8
  %5 = icmp ne %struct.predicate* %4, null
  br i1 %5, label %6, label %16

; <label>:6                                       ; preds = %3
  %7 = load %struct.predicate*, %struct.predicate** %2, align 8
  %8 = getelementptr inbounds %struct.predicate, %struct.predicate* %7, i32 0, i32 5
  %9 = load i8, i8* %8, align 1
  %10 = trunc i8 %9 to i1
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %6
  store i1 false, i1* %1
  br label %17

; <label>:12                                      ; preds = %6
  %13 = load %struct.predicate*, %struct.predicate** %2, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 14
  %15 = load %struct.predicate*, %struct.predicate** %14, align 8
  store %struct.predicate* %15, %struct.predicate** %2, align 8
  br label %3

; <label>:16                                      ; preds = %3
  store i1 true, i1* %1
  br label %17

; <label>:17                                      ; preds = %16, %11
  %18 = load i1, i1* %1
  ret i1 %18
}

; Function Attrs: nounwind uwtable
define zeroext i1 @looks_like_expression(i8* %arg, i1 zeroext %leading) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i8, align 1
  store i8* %arg, i8** %2, align 8
  %4 = zext i1 %leading to i8
  store i8 %4, i8* %3, align 1
  %5 = load i8*, i8** %2, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8, i8* %6, align 1
  %8 = sext i8 %7 to i32
  switch i32 %8, label %33 [
    i32 45, label %9
    i32 41, label %16
    i32 44, label %16
    i32 33, label %26
    i32 40, label %26
  ]

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %2, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %9
  store i1 true, i1* %1
  br label %34

; <label>:15                                      ; preds = %9
  store i1 false, i1* %1
  br label %34

; <label>:16                                      ; preds = %0, %0
  %17 = load i8*, i8** %2, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %16
  store i1 false, i1* %1
  br label %34

; <label>:22                                      ; preds = %16
  %23 = load i8, i8* %3, align 1
  %24 = trunc i8 %23 to i1
  %25 = xor i1 %24, true
  store i1 %25, i1* %1
  br label %34

; <label>:26                                      ; preds = %0, %0
  %27 = load i8*, i8** %2, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp ne i8 %29, 0
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %26
  store i1 false, i1* %1
  br label %34

; <label>:32                                      ; preds = %26
  store i1 true, i1* %1
  br label %34

; <label>:33                                      ; preds = %0
  store i1 false, i1* %1
  br label %34

; <label>:34                                      ; preds = %33, %32, %31, %22, %21, %15, %14
  %35 = load i1, i1* %1
  ret i1 %35
}

; Function Attrs: nounwind uwtable
define i32 @process_leading_options(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8**, align 8
  %i = alloca i32, align 4
  %end_of_leading_options = alloca i32, align 4
  store i32 %argc, i32* %1, align 4
  store i8** %argv, i8*** %2, align 8
  store i32 1, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %85, %0
  %4 = load i32, i32* %i, align 4
  store i32 %4, i32* %end_of_leading_options, align 4
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %7, label %88

; <label>:7                                       ; preds = %3
  %8 = load i32, i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load i8**, i8*** %2, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 %9
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str13214, i32 0, i32 0), i8* %12) #14
  %14 = icmp eq i32 0, %13
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %7
  call void @set_follow_state(i32 2)
  br label %84

; <label>:16                                      ; preds = %7
  %17 = load i32, i32* %i, align 4
  %18 = sext i32 %17 to i64
  %19 = load i8**, i8*** %2, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 %18
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str14215, i32 0, i32 0), i8* %21) #14
  %23 = icmp eq i32 0, %22
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %16
  call void @set_follow_state(i32 1)
  br label %83

; <label>:25                                      ; preds = %16
  %26 = load i32, i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = load i8**, i8*** %2, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 %27
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str15216, i32 0, i32 0), i8* %30) #14
  %32 = icmp eq i32 0, %31
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %25
  call void @set_follow_state(i32 0)
  br label %82

; <label>:34                                      ; preds = %25
  %35 = load i32, i32* %i, align 4
  %36 = sext i32 %35 to i64
  %37 = load i8**, i8*** %2, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 %36
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str16217, i32 0, i32 0), i8* %39) #14
  %41 = icmp eq i32 0, %40
  br i1 %41, label %42, label %45

; <label>:42                                      ; preds = %34
  %43 = load i32, i32* %i, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %end_of_leading_options, align 4
  br label %88

; <label>:45                                      ; preds = %34
  %46 = load i32, i32* %i, align 4
  %47 = sext i32 %46 to i64
  %48 = load i8**, i8*** %2, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 %47
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str17218, i32 0, i32 0), i8* %50) #14
  %52 = icmp eq i32 0, %51
  br i1 %52, label %53, label %62

; <label>:53                                      ; preds = %45
  %54 = load i32, i32* %i, align 4
  %55 = add nsw i32 %54, 1
  %56 = sext i32 %55 to i64
  %57 = load i8**, i8*** %2, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 %56
  %59 = load i8*, i8** %58, align 8
  call void @process_debug_options(i8* %59)
  %60 = load i32, i32* %i, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %i, align 4
  br label %80

; <label>:62                                      ; preds = %45
  %63 = load i32, i32* %i, align 4
  %64 = sext i32 %63 to i64
  %65 = load i8**, i8*** %2, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 %64
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 @strncmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str18219, i32 0, i32 0), i8* %67, i64 2) #14
  %69 = icmp eq i32 0, %68
  br i1 %69, label %70, label %77

; <label>:70                                      ; preds = %62
  %71 = load i32, i32* %i, align 4
  %72 = sext i32 %71 to i64
  %73 = load i8**, i8*** %2, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 %72
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 2
  call void @process_optimisation_option(i8* %76)
  br label %79

; <label>:77                                      ; preds = %62
  %78 = load i32, i32* %i, align 4
  store i32 %78, i32* %end_of_leading_options, align 4
  br label %88

; <label>:79                                      ; preds = %70
  br label %80

; <label>:80                                      ; preds = %79, %53
  br label %81

; <label>:81                                      ; preds = %80
  br label %82

; <label>:82                                      ; preds = %81, %33
  br label %83

; <label>:83                                      ; preds = %82, %24
  br label %84

; <label>:84                                      ; preds = %83, %15
  br label %85

; <label>:85                                      ; preds = %84
  %86 = load i32, i32* %i, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %i, align 4
  br label %3

; <label>:88                                      ; preds = %77, %42, %3
  %89 = load i32, i32* %end_of_leading_options, align 4
  ret i32 %89
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: nounwind uwtable
define void @set_option_defaults(%struct.options* %p) #0 {
  %1 = alloca %struct.options*, align 8
  %2 = alloca %struct.timespec, align 8
  store %struct.options* %p, %struct.options** %1, align 8
  %3 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str19220, i32 0, i32 0)) #9
  %4 = icmp ne i8* %3, null
  br i1 %4, label %5, label %8

; <label>:5                                       ; preds = %0
  %6 = load %struct.options*, %struct.options** %1, align 8
  %7 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 9
  store i8 1, i8* %7, align 1
  br label %11

; <label>:8                                       ; preds = %0
  %9 = load %struct.options*, %struct.options** %1, align 8
  %10 = getelementptr inbounds %struct.options, %struct.options* %9, i32 0, i32 9
  store i8 0, i8* %10, align 1
  br label %11

; <label>:11                                      ; preds = %8, %5
  %12 = call zeroext i1 @check_nofollow()
  %13 = load %struct.options*, %struct.options** %1, align 8
  %14 = getelementptr inbounds %struct.options, %struct.options* %13, i32 0, i32 17
  %15 = zext i1 %12 to i8
  store i8 %15, i8* %14, align 1
  %16 = load %struct.options*, %struct.options** %1, align 8
  %17 = getelementptr inbounds %struct.options, %struct.options* %16, i32 0, i32 18
  store i32 0, i32* %17, align 4
  %18 = call i32 @isatty(i32 0) #9
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %25

; <label>:20                                      ; preds = %11
  %21 = load %struct.options*, %struct.options** %1, align 8
  %22 = getelementptr inbounds %struct.options, %struct.options* %21, i32 0, i32 8
  store i8 1, i8* %22, align 1
  %23 = load %struct.options*, %struct.options** %1, align 8
  %24 = getelementptr inbounds %struct.options, %struct.options* %23, i32 0, i32 7
  store i8 0, i8* %24, align 1
  br label %30

; <label>:25                                      ; preds = %11
  %26 = load %struct.options*, %struct.options** %1, align 8
  %27 = getelementptr inbounds %struct.options, %struct.options* %26, i32 0, i32 8
  store i8 0, i8* %27, align 1
  %28 = load %struct.options*, %struct.options** %1, align 8
  %29 = getelementptr inbounds %struct.options, %struct.options* %28, i32 0, i32 7
  store i8 0, i8* %29, align 1
  br label %30

; <label>:30                                      ; preds = %25, %20
  %31 = load %struct.options*, %struct.options** %1, align 8
  %32 = getelementptr inbounds %struct.options, %struct.options* %31, i32 0, i32 9
  %33 = load i8, i8* %32, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %30
  %36 = load %struct.options*, %struct.options** %1, align 8
  %37 = getelementptr inbounds %struct.options, %struct.options* %36, i32 0, i32 8
  store i8 0, i8* %37, align 1
  br label %38

; <label>:38                                      ; preds = %35, %30
  %39 = load %struct.options*, %struct.options** %1, align 8
  %40 = getelementptr inbounds %struct.options, %struct.options* %39, i32 0, i32 0
  store i8 1, i8* %40, align 1
  %41 = load %struct.options*, %struct.options** %1, align 8
  %42 = getelementptr inbounds %struct.options, %struct.options* %41, i32 0, i32 1
  store i8 0, i8* %42, align 1
  %43 = load %struct.options*, %struct.options** %1, align 8
  %44 = getelementptr inbounds %struct.options, %struct.options* %43, i32 0, i32 3
  store i32 -1, i32* %44, align 4
  %45 = load %struct.options*, %struct.options** %1, align 8
  %46 = getelementptr inbounds %struct.options, %struct.options* %45, i32 0, i32 2
  store i32 -1, i32* %46, align 4
  %47 = load %struct.options*, %struct.options** %1, align 8
  %48 = getelementptr inbounds %struct.options, %struct.options* %47, i32 0, i32 10
  %49 = call { i64, i64 } @now()
  %50 = bitcast %struct.timespec* %2 to { i64, i64 }*
  %51 = getelementptr { i64, i64 }, { i64, i64 }* %50, i32 0, i32 0
  %52 = extractvalue { i64, i64 } %49, 0
  store i64 %52, i64* %51, align 1
  %53 = getelementptr { i64, i64 }, { i64, i64 }* %50, i32 0, i32 1
  %54 = extractvalue { i64, i64 } %49, 1
  store i64 %54, i64* %53, align 1
  %55 = bitcast %struct.timespec* %48 to i8*
  %56 = bitcast %struct.timespec* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false)
  %57 = load %struct.options*, %struct.options** %1, align 8
  %58 = getelementptr inbounds %struct.options, %struct.options* %57, i32 0, i32 10
  %59 = getelementptr inbounds %struct.timespec, %struct.timespec* %58, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = sub nsw i64 %60, 86400
  %62 = load %struct.options*, %struct.options** %1, align 8
  %63 = getelementptr inbounds %struct.options, %struct.options* %62, i32 0, i32 11
  %64 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i32 0, i32 0
  store i64 %61, i64* %64, align 8
  %65 = load %struct.options*, %struct.options** %1, align 8
  %66 = getelementptr inbounds %struct.options, %struct.options* %65, i32 0, i32 10
  %67 = getelementptr inbounds %struct.timespec, %struct.timespec* %66, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = load %struct.options*, %struct.options** %1, align 8
  %70 = getelementptr inbounds %struct.options, %struct.options* %69, i32 0, i32 11
  %71 = getelementptr inbounds %struct.timespec, %struct.timespec* %70, i32 0, i32 1
  store i64 %68, i64* %71, align 8
  %72 = load %struct.options*, %struct.options** %1, align 8
  %73 = getelementptr inbounds %struct.options, %struct.options* %72, i32 0, i32 12
  store i8 0, i8* %73, align 1
  %74 = load %struct.options*, %struct.options** %1, align 8
  %75 = getelementptr inbounds %struct.options, %struct.options* %74, i32 0, i32 5
  store i8 0, i8* %75, align 1
  %76 = load %struct.options*, %struct.options** %1, align 8
  %77 = getelementptr inbounds %struct.options, %struct.options* %76, i32 0, i32 6
  store i8 0, i8* %77, align 1
  %78 = load %struct.options*, %struct.options** %1, align 8
  %79 = getelementptr inbounds %struct.options, %struct.options* %78, i32 0, i32 9
  %80 = load i8, i8* %79, align 1
  %81 = trunc i8 %80 to i1
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %38
  %83 = load %struct.options*, %struct.options** %1, align 8
  %84 = getelementptr inbounds %struct.options, %struct.options* %83, i32 0, i32 13
  store i32 512, i32* %84, align 4
  br label %88

; <label>:85                                      ; preds = %38
  %86 = load %struct.options*, %struct.options** %1, align 8
  %87 = getelementptr inbounds %struct.options, %struct.options* %86, i32 0, i32 13
  store i32 1024, i32* %87, align 4
  br label %88

; <label>:88                                      ; preds = %85, %82
  %89 = load %struct.options*, %struct.options** %1, align 8
  %90 = getelementptr inbounds %struct.options, %struct.options* %89, i32 0, i32 14
  store i64 0, i64* %90, align 8
  %91 = load %struct.options*, %struct.options** %1, align 8
  %92 = getelementptr inbounds %struct.options, %struct.options* %91, i32 0, i32 19
  store i16 2, i16* %92, align 2
  %93 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str20221, i32 0, i32 0)) #9
  %94 = icmp ne i8* %93, null
  br i1 %94, label %95, label %97

; <label>:95                                      ; preds = %88
  %96 = call i8* @gettext(i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str21222, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %96)
  br label %97

; <label>:97                                      ; preds = %95, %88
  %98 = load %struct.options*, %struct.options** %1, align 8
  %99 = getelementptr inbounds %struct.options, %struct.options* %98, i32 0, i32 4
  store i8 0, i8* %99, align 1
  call void @set_follow_state(i32 0)
  %100 = load %struct.options*, %struct.options** %1, align 8
  %101 = getelementptr inbounds %struct.options, %struct.options* %100, i32 0, i32 20
  store i32 6, i32* %101, align 4
  ret void
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #4

; Function Attrs: nounwind
declare i32 @isatty(i32) #4

; Function Attrs: nounwind uwtable
define i32 @get_start_dirfd() #0 {
  %1 = load i32, i32* @starting_desc, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define zeroext i1 @apply_predicate(i8* %pathname, %struct.stat* %stat_buf, %struct.predicate* %p) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca %struct.predicate*, align 8
  store i8* %pathname, i8** %2, align 8
  store %struct.stat* %stat_buf, %struct.stat** %3, align 8
  store %struct.predicate* %p, %struct.predicate** %4, align 8
  %5 = load %struct.predicate*, %struct.predicate** %4, align 8
  %6 = getelementptr inbounds %struct.predicate, %struct.predicate* %5, i32 0, i32 17
  %7 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 1
  store i64 %9, i64* %7, align 8
  %10 = load %struct.predicate*, %struct.predicate** %4, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 6
  %12 = load i8, i8* %11, align 1
  %13 = trunc i8 %12 to i1
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %0
  %15 = load %struct.predicate*, %struct.predicate** %4, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  br i1 %18, label %19, label %27

; <label>:19                                      ; preds = %14, %0
  %20 = load i8*, i8** %2, align 8
  %21 = load %struct.stat*, %struct.stat** %3, align 8
  %22 = load %struct.predicate*, %struct.predicate** %4, align 8
  %23 = call i32 @get_info(i8* %20, %struct.stat* %21, %struct.predicate* %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %19
  store i1 false, i1* %1
  br label %42

; <label>:26                                      ; preds = %19
  br label %27

; <label>:27                                      ; preds = %26, %14
  %28 = load %struct.predicate*, %struct.predicate** %4, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 0
  %30 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %29, align 8
  %31 = load i8*, i8** %2, align 8
  %32 = load %struct.stat*, %struct.stat** %3, align 8
  %33 = load %struct.predicate*, %struct.predicate** %4, align 8
  %34 = call zeroext i1 %30(i8* %31, %struct.stat* %32, %struct.predicate* %33)
  br i1 %34, label %35, label %41

; <label>:35                                      ; preds = %27
  %36 = load %struct.predicate*, %struct.predicate** %4, align 8
  %37 = getelementptr inbounds %struct.predicate, %struct.predicate* %36, i32 0, i32 17
  %38 = getelementptr inbounds %struct.predicate_performance_info, %struct.predicate_performance_info* %37, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  store i1 true, i1* %1
  br label %42

; <label>:41                                      ; preds = %27
  store i1 false, i1* %1
  br label %42

; <label>:42                                      ; preds = %41, %35, %25
  %43 = load i1, i1* %1
  ret i1 %43
}

; Function Attrs: noreturn nounwind uwtable
define void @fatal_file_error(i8* %name) #11 {
  %1 = alloca i8*, align 8
  store i8* %name, i8** %1, align 8
  %2 = call i32* @__errno_location() #13
  %3 = load i32, i32* %2, align 4
  %4 = load i8*, i8** %1, align 8
  call void @report_file_err(i32 1, i32 %3, i8* %4)
  call void @abort() #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define void @nonfatal_file_error(i8* %name) #0 {
  %1 = alloca i8*, align 8
  store i8* %name, i8** %1, align 8
  %2 = call i32* @__errno_location() #13
  %3 = load i32, i32* %2, align 4
  %4 = load i8*, i8** %1, align 8
  call void @report_file_err(i32 0, i32 %3, i8* %4)
  ret void
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #4

; Function Attrs: nounwind
declare i64 @time(i64*) #4

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #4

; Function Attrs: nounwind
declare i8* @strtok_r(i8*, i8*, i8**) #4

declare i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define internal void @show_valid_debug_options(%struct._IO_FILE* %fp, i32 %full) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %1, align 8
  store i32 %full, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %29

; <label>:5                                       ; preds = %0
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str46247, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %8

; <label>:8                                       ; preds = %25, %5
  %9 = load i32, i32* %i, align 4
  %10 = sext i32 %9 to i64
  %11 = icmp ult i64 %10, 7
  br i1 %11, label %12, label %28

; <label>:12                                      ; preds = %8
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %14 = load i32, i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [7 x %struct.debug_option_assoc], [7 x %struct.debug_option_assoc]* @debugassoc, i32 0, i64 %15
  %17 = getelementptr inbounds %struct.debug_option_assoc, %struct.debug_option_assoc* %16, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [7 x %struct.debug_option_assoc], [7 x %struct.debug_option_assoc]* @debugassoc, i32 0, i64 %20
  %22 = getelementptr inbounds %struct.debug_option_assoc, %struct.debug_option_assoc* %21, i32 0, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str47248, i32 0, i32 0), i8* %18, i8* %23)
  br label %25

; <label>:25                                      ; preds = %12
  %26 = load i32, i32* %i, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %i, align 4
  br label %8

; <label>:28                                      ; preds = %8
  br label %49

; <label>:29                                      ; preds = %0
  store i32 0, i32* %i, align 4
  br label %30

; <label>:30                                      ; preds = %45, %29
  %31 = load i32, i32* %i, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %32, 7
  br i1 %33, label %34, label %48

; <label>:34                                      ; preds = %30
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %36 = load i32, i32* %i, align 4
  %37 = icmp sgt i32 %36, 0
  %38 = select i1 %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str49250, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str50251, i32 0, i32 0)
  %39 = load i32, i32* %i, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [7 x %struct.debug_option_assoc], [7 x %struct.debug_option_assoc]* @debugassoc, i32 0, i64 %40
  %42 = getelementptr inbounds %struct.debug_option_assoc, %struct.debug_option_assoc* %41, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str48249, i32 0, i32 0), i8* %38, i8* %43)
  br label %45

; <label>:45                                      ; preds = %34
  %46 = load i32, i32* %i, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %i, align 4
  br label %30

; <label>:48                                      ; preds = %30
  br label %49

; <label>:49                                      ; preds = %48, %28
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_complete_pending_execdirs(%struct.predicate* %p, i32 %dir_fd) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca i32, align 4
  %execp = alloca %struct.exec_val*, align 8
  store %struct.predicate* %p, %struct.predicate** %1, align 8
  store i32 %dir_fd, i32* %2, align 4
  %3 = load %struct.predicate*, %struct.predicate** %1, align 8
  %4 = icmp eq %struct.predicate* null, %3
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  br label %55

; <label>:6                                       ; preds = %0
  %7 = load i8, i8* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 9), align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str45246, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1202, i32 0, i32 0), i32 297, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__.do_complete_pending_execdirs, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load %struct.predicate*, %struct.predicate** %1, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 15
  %15 = load %struct.predicate*, %struct.predicate** %14, align 8
  %16 = load i32, i32* %2, align 4
  call void @do_complete_pending_execdirs(%struct.predicate* %15, i32 %16)
  %17 = load %struct.predicate*, %struct.predicate** %1, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 0
  %19 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %18, align 8
  %20 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %19, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %20, label %26, label %21

; <label>:21                                      ; preds = %12
  %22 = load %struct.predicate*, %struct.predicate** %1, align 8
  %23 = getelementptr inbounds %struct.predicate, %struct.predicate* %22, i32 0, i32 0
  %24 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %23, align 8
  %25 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %24, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_okdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %25, label %26, label %50

; <label>:26                                      ; preds = %21, %12
  %27 = load %struct.predicate*, %struct.predicate** %1, align 8
  %28 = getelementptr inbounds %struct.predicate, %struct.predicate* %27, i32 0, i32 13
  %29 = bitcast %union.anon* %28 to %struct.exec_val*
  %30 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %29, i32 0, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %49

; <label>:33                                      ; preds = %26
  %34 = load %struct.predicate*, %struct.predicate** %1, align 8
  %35 = getelementptr inbounds %struct.predicate, %struct.predicate* %34, i32 0, i32 13
  %36 = bitcast %union.anon* %35 to %struct.exec_val*
  store %struct.exec_val* %36, %struct.exec_val** %execp, align 8
  %37 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %38 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %37, i32 0, i32 2
  %39 = getelementptr inbounds %struct.buildcmd_state, %struct.buildcmd_state* %38, i32 0, i32 7
  %40 = load i32, i32* %39, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %48

; <label>:42                                      ; preds = %33
  %43 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %44 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %43, i32 0, i32 1
  %45 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %46 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %45, i32 0, i32 2
  %47 = call i32 @launch(%struct.buildcmd_control* %44, %struct.buildcmd_state* %46)
  br label %48

; <label>:48                                      ; preds = %42, %33
  br label %49

; <label>:49                                      ; preds = %48, %26
  br label %50

; <label>:50                                      ; preds = %49, %21
  %51 = load %struct.predicate*, %struct.predicate** %1, align 8
  %52 = getelementptr inbounds %struct.predicate, %struct.predicate* %51, i32 0, i32 16
  %53 = load %struct.predicate*, %struct.predicate** %52, align 8
  %54 = load i32, i32* %2, align 4
  call void @do_complete_pending_execdirs(%struct.predicate* %53, i32 %54)
  br label %55

; <label>:55                                      ; preds = %50, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @traverse_tree(%struct.predicate* %tree, void (%struct.predicate*)* %callback) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca void (%struct.predicate*)*, align 8
  store %struct.predicate* %tree, %struct.predicate** %1, align 8
  store void (%struct.predicate*)* %callback, void (%struct.predicate*)** %2, align 8
  %3 = load %struct.predicate*, %struct.predicate** %1, align 8
  %4 = getelementptr inbounds %struct.predicate, %struct.predicate* %3, i32 0, i32 15
  %5 = load %struct.predicate*, %struct.predicate** %4, align 8
  %6 = icmp ne %struct.predicate* %5, null
  br i1 %6, label %7, label %12

; <label>:7                                       ; preds = %0
  %8 = load %struct.predicate*, %struct.predicate** %1, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 15
  %10 = load %struct.predicate*, %struct.predicate** %9, align 8
  %11 = load void (%struct.predicate*)*, void (%struct.predicate*)** %2, align 8
  call void @traverse_tree(%struct.predicate* %10, void (%struct.predicate*)* %11)
  br label %12

; <label>:12                                      ; preds = %7, %0
  %13 = load void (%struct.predicate*)*, void (%struct.predicate*)** %2, align 8
  %14 = load %struct.predicate*, %struct.predicate** %1, align 8
  call void %13(%struct.predicate* %14)
  %15 = load %struct.predicate*, %struct.predicate** %1, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 16
  %17 = load %struct.predicate*, %struct.predicate** %16, align 8
  %18 = icmp ne %struct.predicate* %17, null
  br i1 %18, label %19, label %24

; <label>:19                                      ; preds = %12
  %20 = load %struct.predicate*, %struct.predicate** %1, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 16
  %22 = load %struct.predicate*, %struct.predicate** %21, align 8
  %23 = load void (%struct.predicate*)*, void (%struct.predicate*)** %2, align 8
  call void @traverse_tree(%struct.predicate* %22, void (%struct.predicate*)* %23)
  br label %24

; <label>:24                                      ; preds = %19, %12
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @flush_and_close_output_files(%struct.predicate* %p) #0 {
  %1 = alloca %struct.predicate*, align 8
  %f = alloca %struct._IO_FILE*, align 8
  %failed = alloca i8, align 1
  store %struct.predicate* %p, %struct.predicate** %1, align 8
  %2 = load %struct.predicate*, %struct.predicate** %1, align 8
  %3 = getelementptr inbounds %struct.predicate, %struct.predicate* %2, i32 0, i32 0
  %4 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %3, align 8
  %5 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %4, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprint to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %5, label %21, label %6

; <label>:6                                       ; preds = %0
  %7 = load %struct.predicate*, %struct.predicate** %1, align 8
  %8 = getelementptr inbounds %struct.predicate, %struct.predicate* %7, i32 0, i32 0
  %9 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %8, align 8
  %10 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %9, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprintf to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %10, label %21, label %11

; <label>:11                                      ; preds = %6
  %12 = load %struct.predicate*, %struct.predicate** %1, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 0
  %14 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %13, align 8
  %15 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %14, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fls to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %15, label %21, label %16

; <label>:16                                      ; preds = %11
  %17 = load %struct.predicate*, %struct.predicate** %1, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 0
  %19 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %18, align 8
  %20 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %19, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprint0 to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %20, label %21, label %62

; <label>:21                                      ; preds = %16, %11, %6, %0
  %22 = load %struct.predicate*, %struct.predicate** %1, align 8
  %23 = getelementptr inbounds %struct.predicate, %struct.predicate* %22, i32 0, i32 13
  %24 = bitcast %union.anon* %23 to %struct.format_val*
  %25 = getelementptr inbounds %struct.format_val, %struct.format_val* %24, i32 0, i32 1
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %25, align 8
  store %struct._IO_FILE* %26, %struct._IO_FILE** %f, align 8
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %29 = icmp eq %struct._IO_FILE* %27, %28
  br i1 %29, label %34, label %30

; <label>:30                                      ; preds = %21
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = icmp eq %struct._IO_FILE* %31, %32
  br i1 %33, label %34, label %43

; <label>:34                                      ; preds = %30, %21
  %35 = load %struct.predicate*, %struct.predicate** %1, align 8
  %36 = getelementptr inbounds %struct.predicate, %struct.predicate* %35, i32 0, i32 13
  %37 = bitcast %union.anon* %36 to %struct.format_val*
  %38 = getelementptr inbounds %struct.format_val, %struct.format_val* %37, i32 0, i32 1
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %38, align 8
  %40 = call i32 @fflush(%struct._IO_FILE* %39)
  %41 = icmp eq i32 %40, -1
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %failed, align 1
  br label %52

; <label>:43                                      ; preds = %30
  %44 = load %struct.predicate*, %struct.predicate** %1, align 8
  %45 = getelementptr inbounds %struct.predicate, %struct.predicate* %44, i32 0, i32 13
  %46 = bitcast %union.anon* %45 to %struct.format_val*
  %47 = getelementptr inbounds %struct.format_val, %struct.format_val* %46, i32 0, i32 1
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %47, align 8
  %49 = call i32 @fclose(%struct._IO_FILE* %48)
  %50 = icmp eq i32 %49, -1
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %failed, align 1
  br label %52

; <label>:52                                      ; preds = %43, %34
  %53 = load i8, i8* %failed, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %61

; <label>:55                                      ; preds = %52
  %56 = load %struct.predicate*, %struct.predicate** %1, align 8
  %57 = getelementptr inbounds %struct.predicate, %struct.predicate* %56, i32 0, i32 13
  %58 = bitcast %union.anon* %57 to %struct.format_val*
  %59 = getelementptr inbounds %struct.format_val, %struct.format_val* %58, i32 0, i32 2
  %60 = load i8*, i8** %59, align 8
  call void @nonfatal_file_error(i8* %60)
  br label %61

; <label>:61                                      ; preds = %55, %52
  br label %100

; <label>:62                                      ; preds = %16
  %63 = load %struct.predicate*, %struct.predicate** %1, align 8
  %64 = getelementptr inbounds %struct.predicate, %struct.predicate* %63, i32 0, i32 0
  %65 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %64, align 8
  %66 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %65, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_print to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %66, label %67, label %82

; <label>:67                                      ; preds = %62
  %68 = load %struct.predicate*, %struct.predicate** %1, align 8
  %69 = getelementptr inbounds %struct.predicate, %struct.predicate* %68, i32 0, i32 13
  %70 = bitcast %union.anon* %69 to %struct.format_val*
  %71 = getelementptr inbounds %struct.format_val, %struct.format_val* %70, i32 0, i32 1
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %71, align 8
  %73 = call i32 @fflush(%struct._IO_FILE* %72)
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %75, label %81

; <label>:75                                      ; preds = %67
  %76 = load %struct.predicate*, %struct.predicate** %1, align 8
  %77 = getelementptr inbounds %struct.predicate, %struct.predicate* %76, i32 0, i32 13
  %78 = bitcast %union.anon* %77 to %struct.format_val*
  %79 = getelementptr inbounds %struct.format_val, %struct.format_val* %78, i32 0, i32 2
  %80 = load i8*, i8** %79, align 8
  call void @nonfatal_file_error(i8* %80)
  br label %81

; <label>:81                                      ; preds = %75, %67
  br label %99

; <label>:82                                      ; preds = %62
  %83 = load %struct.predicate*, %struct.predicate** %1, align 8
  %84 = getelementptr inbounds %struct.predicate, %struct.predicate* %83, i32 0, i32 0
  %85 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %84, align 8
  %86 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %85, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ls to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %86, label %92, label %87

; <label>:87                                      ; preds = %82
  %88 = load %struct.predicate*, %struct.predicate** %1, align 8
  %89 = getelementptr inbounds %struct.predicate, %struct.predicate* %88, i32 0, i32 0
  %90 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %89, align 8
  %91 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %90, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_print0 to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %91, label %92, label %98

; <label>:92                                      ; preds = %87, %82
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %94 = call i32 @fflush(%struct._IO_FILE* %93)
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %96, label %97

; <label>:96                                      ; preds = %92
  call void @nonfatal_file_error(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str44245, i32 0, i32 0))
  br label %97

; <label>:97                                      ; preds = %96, %92
  br label %98

; <label>:98                                      ; preds = %97, %87
  br label %99

; <label>:99                                      ; preds = %98, %81
  br label %100

; <label>:100                                     ; preds = %99, %61
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @fallback_stat(i8* %name, %struct.stat* %p, i32 %prev_rv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat*, align 8
  %4 = alloca i32, align 4
  store i8* %name, i8** %2, align 8
  store %struct.stat* %p, %struct.stat** %3, align 8
  store i32 %prev_rv, i32* %4, align 4
  %5 = call i32* @__errno_location() #13
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %21 [
    i32 2, label %7
    i32 20, label %7
    i32 13, label %20
    i32 5, label %20
    i32 40, label %20
    i32 36, label %20
    i32 75, label %20
  ]

; <label>:7                                       ; preds = %0, %0
  %8 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %9 = and i64 %8, 2
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %15

; <label>:11                                      ; preds = %7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = load i8*, i8** %2, align 8
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str43244, i32 0, i32 0), i8* %13)
  br label %15

; <label>:15                                      ; preds = %11, %7
  %16 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 5), align 4
  %17 = load i8*, i8** %2, align 8
  %18 = load %struct.stat*, %struct.stat** %3, align 8
  %19 = call i32 @fstatat(i32 %16, i8* %17, %struct.stat* %18, i32 256) #9
  store i32 %19, i32* %1
  br label %23

; <label>:20                                      ; preds = %0, %0, %0, %0, %0
  br label %21

; <label>:21                                      ; preds = %20, %0
  %22 = load i32, i32* %4, align 4
  store i32 %22, i32* %1
  br label %23

; <label>:23                                      ; preds = %21, %15
  %24 = load i32, i32* %1
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define internal void @process_debug_options(i8* %arg) #0 {
  %1 = alloca i8*, align 8
  %p = alloca i8*, align 8
  %token_context = alloca i8*, align 8
  %empty = alloca i8, align 1
  %i = alloca i64, align 8
  store i8* %arg, i8** %1, align 8
  store i8* null, i8** %token_context, align 8
  store i8 1, i8* %empty, align 1
  %2 = load i8*, i8** %1, align 8
  %3 = call i8* @strtok_r(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @process_debug_options.delimiters, i32 0, i32 0), i8** %token_context) #9
  store i8* %3, i8** %p, align 8
  br label %4

; <label>:4                                       ; preds = %39, %0
  %5 = load i8*, i8** %p, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %41

; <label>:7                                       ; preds = %4
  store i8 0, i8* %empty, align 1
  store i64 0, i64* %i, align 8
  br label %8

; <label>:8                                       ; preds = %28, %7
  %9 = load i64, i64* %i, align 8
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %11, label %31

; <label>:11                                      ; preds = %8
  %12 = load i64, i64* %i, align 8
  %13 = getelementptr inbounds [7 x %struct.debug_option_assoc], [7 x %struct.debug_option_assoc]* @debugassoc, i32 0, i64 %12
  %14 = getelementptr inbounds %struct.debug_option_assoc, %struct.debug_option_assoc* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load i8*, i8** %p, align 8
  %17 = call i32 @strcmp(i8* %15, i8* %16) #14
  %18 = icmp eq i32 0, %17
  br i1 %18, label %19, label %27

; <label>:19                                      ; preds = %11
  %20 = load i64, i64* %i, align 8
  %21 = getelementptr inbounds [7 x %struct.debug_option_assoc], [7 x %struct.debug_option_assoc]* @debugassoc, i32 0, i64 %20
  %22 = getelementptr inbounds %struct.debug_option_assoc, %struct.debug_option_assoc* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %26 = or i64 %25, %24
  store i64 %26, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  br label %31

; <label>:27                                      ; preds = %11
  br label %28

; <label>:28                                      ; preds = %27
  %29 = load i64, i64* %i, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %i, align 8
  br label %8

; <label>:31                                      ; preds = %19, %8
  %32 = load i64, i64* %i, align 8
  %33 = icmp uge i64 %32, 7
  br i1 %33, label %34, label %39

; <label>:34                                      ; preds = %31
  %35 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str27228, i32 0, i32 0)) #9
  %36 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %37 = load i8*, i8** %1, align 8
  %38 = call i8* @quotearg_n_style(i32 0, i32 %36, i8* %37)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %35, i8* %38)
  br label %39

; <label>:39                                      ; preds = %34, %31
  %40 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @process_debug_options.delimiters, i32 0, i32 0), i8** %token_context) #9
  store i8* %40, i8** %p, align 8
  br label %4

; <label>:41                                      ; preds = %4
  %42 = load i8, i8* %empty, align 1
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %46

; <label>:44                                      ; preds = %41
  %45 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str28229, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %45)
  br label %53

; <label>:46                                      ; preds = %41
  %47 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %48 = and i64 %47, 16
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %50, label %52

; <label>:50                                      ; preds = %46
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @show_valid_debug_options(%struct._IO_FILE* %51, i32 1)
  call void @exit(i32 0) #12
  unreachable

; <label>:52                                      ; preds = %46
  br label %53

; <label>:53                                      ; preds = %52, %44
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @process_optimisation_option(i8* %arg) #0 {
  %1 = alloca i8*, align 8
  %opt_level = alloca i64, align 8
  %end = alloca i8*, align 8
  %prev_errno = alloca i32, align 4
  store i8* %arg, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = load i8, i8* %3, align 1
  %5 = sext i8 %4 to i32
  %6 = icmp eq i32 0, %5
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %0
  %8 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str23224, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %8)
  br label %73

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %1, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i16** @__ctype_b_loc() #13
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds i16, i16* %16, i64 %14
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = and i32 %19, 2048
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %24, label %22

; <label>:22                                      ; preds = %9
  %23 = call i8* @gettext(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str24225, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %23)
  br label %72

; <label>:24                                      ; preds = %9
  %25 = call i32* @__errno_location() #13
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %prev_errno, align 4
  %27 = call i32* @__errno_location() #13
  store i32 0, i32* %27, align 4
  %28 = load i8*, i8** %1, align 8
  %29 = call i64 @strtoul(i8* %28, i8** %end, i32 10) #9
  store i64 %29, i64* %opt_level, align 8
  %30 = load i64, i64* %opt_level, align 8
  %31 = icmp eq i64 0, %30
  br i1 %31, label %32, label %38

; <label>:32                                      ; preds = %24
  %33 = load i8*, i8** %end, align 8
  %34 = load i8*, i8** %1, align 8
  %35 = icmp eq i8* %33, %34
  br i1 %35, label %36, label %38

; <label>:36                                      ; preds = %32
  %37 = call i8* @gettext(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str24225, i32 0, i32 0)) #9
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %37)
  br label %71

; <label>:38                                      ; preds = %32, %24
  %39 = load i8*, i8** %end, align 8
  %40 = load i8, i8* %39, align 1
  %41 = icmp ne i8 %40, 0
  br i1 %41, label %42, label %45

; <label>:42                                      ; preds = %38
  %43 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str25226, i32 0, i32 0)) #9
  %44 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %43, i8* %44)
  br label %70

; <label>:45                                      ; preds = %38
  %46 = load i64, i64* %opt_level, align 8
  %47 = icmp eq i64 -1, %46
  br i1 %47, label %48, label %57

; <label>:48                                      ; preds = %45
  %49 = call i32* @__errno_location() #13
  %50 = load i32, i32* %49, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %57

; <label>:52                                      ; preds = %48
  %53 = call i32* @__errno_location() #13
  %54 = load i32, i32* %53, align 4
  %55 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str25226, i32 0, i32 0)) #9
  %56 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %54, i8* %55, i8* %56)
  br label %69

; <label>:57                                      ; preds = %48, %45
  %58 = load i64, i64* %opt_level, align 8
  %59 = icmp ugt i64 %58, 65535
  br i1 %59, label %60, label %63

; <label>:60                                      ; preds = %57
  %61 = call i8* @gettext(i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str26227, i32 0, i32 0)) #9
  %62 = load i64, i64* %opt_level, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %61, i64 %62)
  br label %68

; <label>:63                                      ; preds = %57
  %64 = load i64, i64* %opt_level, align 8
  %65 = trunc i64 %64 to i16
  store i16 %65, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %66 = load i32, i32* %prev_errno, align 4
  %67 = call i32* @__errno_location() #13
  store i32 %66, i32* %67, align 4
  br label %68

; <label>:68                                      ; preds = %63, %60
  br label %69

; <label>:69                                      ; preds = %68, %52
  br label %70

; <label>:70                                      ; preds = %69, %42
  br label %71

; <label>:71                                      ; preds = %70, %36
  br label %72

; <label>:72                                      ; preds = %71, %22
  br label %73

; <label>:73                                      ; preds = %72, %7
  ret void
}

; Function Attrs: nounwind uwtable
define internal { i64, i64 } @now() #0 {
  %1 = alloca %struct.timespec, align 8
  %retval = alloca %struct.timespec, align 8
  %tv = alloca %struct.timeval, align 8
  %t = alloca i64, align 8
  %2 = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #9
  %3 = icmp eq i32 0, %2
  br i1 %3, label %4, label %14

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = mul nsw i64 %9, 1000
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1
  store i64 %10, i64* %11, align 8
  %12 = bitcast %struct.timespec* %1 to i8*
  %13 = bitcast %struct.timespec* %retval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false)
  br label %27

; <label>:14                                      ; preds = %0
  %15 = call i64 @time(i64* null) #9
  store i64 %15, i64* %t, align 8
  %16 = load i64, i64* %t, align 8
  %17 = icmp ne i64 %16, -1
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %14
  br label %21

; <label>:19                                      ; preds = %14
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str22223, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1202, i32 0, i32 0), i32 883, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__PRETTY_FUNCTION__.now, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %21

; <label>:21                                      ; preds = %20, %18
  %22 = load i64, i64* %t, align 8
  %23 = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1
  store i64 0, i64* %24, align 8
  %25 = bitcast %struct.timespec* %1 to i8*
  %26 = bitcast %struct.timespec* %retval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  br label %27

; <label>:27                                      ; preds = %21, %4
  %28 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %29 = load { i64, i64 }, { i64, i64 }* %28, align 1
  ret { i64, i64 } %29
}

; Function Attrs: nounwind uwtable
define internal void @report_file_err(i32 %exitval, i32 %errno_value, i8* %name) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %exitval, i32* %1, align 4
  store i32 %errno_value, i32* %2, align 4
  store i8* %name, i8** %3, align 8
  %4 = load i32, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  store i32 1, i32* getelementptr inbounds (%struct.state, %struct.state* @state, i32 0, i32 8), align 4
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = load i32, i32* %1, align 4
  %9 = load i32, i32* %2, align 4
  %10 = load i8*, i8** %3, align 8
  %11 = call i8* @safely_quote_err_filename(i32 0, i8* %10)
  call void (i32, i32, i8*, ...) @error(i32 %8, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str6207, i32 0, i32 0), i8* %11)
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @filesystem_type(%struct.stat* %statp, i8* %path) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.stat*, align 8
  %3 = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %2, align 8
  store i8* %path, i8** %3, align 8
  %4 = load i8*, i8** @filesystem_type.current_fstype, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %19

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* @fstype_known, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %17

; <label>:9                                       ; preds = %6
  %10 = load %struct.stat*, %struct.stat** %2, align 8
  %11 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i64, i64* @filesystem_type.current_dev, align 8
  %14 = icmp eq i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %9
  %16 = load i8*, i8** @filesystem_type.current_fstype, align 8
  store i8* %16, i8** %1
  br label %27

; <label>:17                                      ; preds = %9, %6
  %18 = load i8*, i8** @filesystem_type.current_fstype, align 8
  call void @free(i8* %18) #9
  br label %19

; <label>:19                                      ; preds = %17, %0
  %20 = load %struct.stat*, %struct.stat** %2, align 8
  %21 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* @filesystem_type.current_dev, align 8
  %23 = load %struct.stat*, %struct.stat** %2, align 8
  %24 = load i8*, i8** %3, align 8
  %25 = call i8* @file_system_type_uncached(%struct.stat* %23, i8* %24)
  store i8* %25, i8** @filesystem_type.current_fstype, align 8
  %26 = load i8*, i8** @filesystem_type.current_fstype, align 8
  store i8* %26, i8** %1
  br label %27

; <label>:27                                      ; preds = %19, %15
  %28 = load i8*, i8** %1
  ret i8* %28
}

; Function Attrs: nounwind uwtable
define i8* @get_mounted_filesystems() #0 {
  %result = alloca i8*, align 8
  %alloc_size = alloca i64, align 8
  %used = alloca i64, align 8
  %entries = alloca %struct.mount_entry*, align 8
  %entry = alloca %struct.mount_entry*, align 8
  %len = alloca i64, align 8
  store i8* null, i8** %result, align 8
  store i64 0, i64* %alloc_size, align 8
  store i64 0, i64* %used, align 8
  %1 = call %struct.mount_entry* @must_read_fs_list(i1 zeroext false)
  store %struct.mount_entry* %1, %struct.mount_entry** %entries, align 8
  %2 = load %struct.mount_entry*, %struct.mount_entry** %entries, align 8
  store %struct.mount_entry* %2, %struct.mount_entry** %entry, align 8
  br label %3

; <label>:3                                       ; preds = %36, %0
  %4 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %5 = icmp ne %struct.mount_entry* %4, null
  br i1 %5, label %6, label %40

; <label>:6                                       ; preds = %3
  %7 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %8 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %7, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str286, i32 0, i32 0)) #14
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %6
  br label %36

; <label>:13                                      ; preds = %6
  %14 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %15 = call i32 @set_fstype_devno(%struct.mount_entry* %14)
  %16 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %17 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %16, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = call i64 @strlen(i8* %18) #14
  %20 = add i64 %19, 1
  store i64 %20, i64* %len, align 8
  %21 = load i8*, i8** %result, align 8
  %22 = load i64, i64* %used, align 8
  %23 = load i64, i64* %len, align 8
  %24 = add i64 %22, %23
  %25 = call i8* @extendbuf(i8* %21, i64 %24, i64* %alloc_size)
  store i8* %25, i8** %result, align 8
  %26 = load i64, i64* %used, align 8
  %27 = load i8*, i8** %result, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %26
  %29 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %30 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i8* @strcpy(i8* %28, i8* %31) #9
  %33 = load i64, i64* %len, align 8
  %34 = load i64, i64* %used, align 8
  %35 = add i64 %34, %33
  store i64 %35, i64* %used, align 8
  br label %36

; <label>:36                                      ; preds = %13, %12
  %37 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %38 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %37, i32 0, i32 5
  %39 = load %struct.mount_entry*, %struct.mount_entry** %38, align 8
  store %struct.mount_entry* %39, %struct.mount_entry** %entry, align 8
  br label %3

; <label>:40                                      ; preds = %3
  %41 = load %struct.mount_entry*, %struct.mount_entry** %entries, align 8
  call void @free_file_system_list(%struct.mount_entry* %41)
  %42 = load i8*, i8** %result, align 8
  ret i8* %42
}

declare i8* @extendbuf(i8*, i64, i64*) #3

; Function Attrs: nounwind uwtable
define i64* @get_mounted_devices(i64* %n) #0 {
  %1 = alloca i64*, align 8
  %alloc_size = alloca i64, align 8
  %used = alloca i64, align 8
  %entries = alloca %struct.mount_entry*, align 8
  %entry = alloca %struct.mount_entry*, align 8
  %result = alloca i64*, align 8
  store i64* %n, i64** %1, align 8
  store i64 0, i64* %alloc_size, align 8
  store i64 0, i64* %used, align 8
  store i64* null, i64** %result, align 8
  %2 = call %struct.mount_entry* @read_file_system_list(i1 zeroext false)
  store %struct.mount_entry* %2, %struct.mount_entry** %entries, align 8
  store %struct.mount_entry* %2, %struct.mount_entry** %entry, align 8
  br label %3

; <label>:3                                       ; preds = %24, %0
  %4 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %5 = icmp ne %struct.mount_entry* %4, null
  br i1 %5, label %6, label %28

; <label>:6                                       ; preds = %3
  %7 = load i64*, i64** %result, align 8
  %8 = bitcast i64* %7 to i8*
  %9 = load i64, i64* %used, align 8
  %10 = add i64 %9, 1
  %11 = mul i64 8, %10
  %12 = call i8* @extendbuf(i8* %8, i64 %11, i64* %alloc_size)
  %13 = bitcast i8* %12 to i64*
  store i64* %13, i64** %result, align 8
  %14 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %15 = call i32 @set_fstype_devno(%struct.mount_entry* %14)
  %16 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %17 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %16, i32 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %used, align 8
  %20 = load i64*, i64** %result, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 %19
  store i64 %18, i64* %21, align 8
  %22 = load i64, i64* %used, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %used, align 8
  br label %24

; <label>:24                                      ; preds = %6
  %25 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %26 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %25, i32 0, i32 5
  %27 = load %struct.mount_entry*, %struct.mount_entry** %26, align 8
  store %struct.mount_entry* %27, %struct.mount_entry** %entry, align 8
  br label %3

; <label>:28                                      ; preds = %3
  %29 = load %struct.mount_entry*, %struct.mount_entry** %entries, align 8
  call void @free_file_system_list(%struct.mount_entry* %29)
  %30 = load i64, i64* %used, align 8
  %31 = load i64*, i64** %1, align 8
  store i64 %30, i64* %31, align 8
  %32 = load i64*, i64** %result, align 8
  ret i64* %32
}

declare %struct.mount_entry* @read_file_system_list(i1 zeroext) #3

declare noalias i8* @xstrdup(i8*) #3

; Function Attrs: nounwind uwtable
define internal i8* @file_system_type_uncached(%struct.stat* %statp, i8* %path) #0 {
  %1 = alloca %struct.stat*, align 8
  %2 = alloca i8*, align 8
  %entries = alloca %struct.mount_entry*, align 8
  %entry = alloca %struct.mount_entry*, align 8
  %type = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %1, align 8
  store i8* %path, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call %struct.mount_entry* @must_read_fs_list(i1 zeroext true)
  store %struct.mount_entry* %4, %struct.mount_entry** %entries, align 8
  store i8* null, i8** %type, align 8
  %5 = load %struct.mount_entry*, %struct.mount_entry** %entries, align 8
  store %struct.mount_entry* %5, %struct.mount_entry** %entry, align 8
  br label %6

; <label>:6                                       ; preds = %32, %0
  %7 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %8 = icmp ne %struct.mount_entry* %7, null
  br i1 %8, label %9, label %36

; <label>:9                                       ; preds = %6
  %10 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %11 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %10, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str286, i32 0, i32 0)) #14
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %9
  br label %32

; <label>:16                                      ; preds = %9
  %17 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %18 = call i32 @set_fstype_devno(%struct.mount_entry* %17)
  %19 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %20 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %19, i32 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = load %struct.stat*, %struct.stat** %1, align 8
  %23 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %21, %24
  br i1 %25, label %26, label %31

; <label>:26                                      ; preds = %16
  %27 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %28 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %27, i32 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = call noalias i8* @xstrdup(i8* %29)
  store i8* %30, i8** %type, align 8
  br label %36

; <label>:31                                      ; preds = %16
  br label %32

; <label>:32                                      ; preds = %31, %15
  %33 = load %struct.mount_entry*, %struct.mount_entry** %entry, align 8
  %34 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %33, i32 0, i32 5
  %35 = load %struct.mount_entry*, %struct.mount_entry** %34, align 8
  store %struct.mount_entry* %35, %struct.mount_entry** %entry, align 8
  br label %6

; <label>:36                                      ; preds = %26, %6
  %37 = load %struct.mount_entry*, %struct.mount_entry** %entries, align 8
  call void @free_file_system_list(%struct.mount_entry* %37)
  %38 = load i8*, i8** %type, align 8
  %39 = icmp ne i8* %38, null
  %40 = zext i1 %39 to i32
  store i32 %40, i32* @fstype_known, align 4
  %41 = load i8*, i8** %type, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %45

; <label>:43                                      ; preds = %36
  %44 = load i8*, i8** %type, align 8
  br label %48

; <label>:45                                      ; preds = %36
  %46 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str2288, i32 0, i32 0)) #9
  %47 = call noalias i8* @xstrdup(i8* %46)
  br label %48

; <label>:48                                      ; preds = %45, %43
  %49 = phi i8* [ %44, %43 ], [ %47, %45 ]
  ret i8* %49
}

; Function Attrs: nounwind uwtable
define internal %struct.mount_entry* @must_read_fs_list(i1 zeroext %need_fs_type) #0 {
  %1 = alloca i8, align 1
  %entries = alloca %struct.mount_entry*, align 8
  %2 = zext i1 %need_fs_type to i8
  store i8 %2, i8* %1, align 1
  %3 = load i8, i8* %1, align 1
  %4 = trunc i8 %3 to i1
  %5 = call %struct.mount_entry* @read_file_system_list(i1 zeroext %4)
  store %struct.mount_entry* %5, %struct.mount_entry** %entries, align 8
  %6 = load %struct.mount_entry*, %struct.mount_entry** %entries, align 8
  %7 = icmp eq %struct.mount_entry* null, %6
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str1287, i32 0, i32 0))
  br label %9

; <label>:9                                       ; preds = %8, %0
  %10 = load %struct.mount_entry*, %struct.mount_entry** %entries, align 8
  ret %struct.mount_entry* %10
}

; Function Attrs: nounwind uwtable
define internal i32 @set_fstype_devno(%struct.mount_entry* %p) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mount_entry*, align 8
  %stbuf = alloca %struct.stat, align 8
  store %struct.mount_entry* %p, %struct.mount_entry** %2, align 8
  %3 = load %struct.mount_entry*, %struct.mount_entry** %2, align 8
  %4 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %3, i32 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %7, label %20

; <label>:7                                       ; preds = %0
  call void @set_stat_placeholders(%struct.stat* %stbuf)
  %8 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  %9 = load %struct.mount_entry*, %struct.mount_entry** %2, align 8
  %10 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %9, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = call i32 %8(i8* %11, %struct.stat* %stbuf)
  %13 = icmp eq i32 0, %12
  br i1 %13, label %14, label %19

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct.stat, %struct.stat* %stbuf, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = load %struct.mount_entry*, %struct.mount_entry** %2, align 8
  %18 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %17, i32 0, i32 3
  store i64 %16, i64* %18, align 8
  store i32 0, i32* %1
  br label %21

; <label>:19                                      ; preds = %7
  store i32 -1, i32* %1
  br label %21

; <label>:20                                      ; preds = %0
  store i32 0, i32* %1
  br label %21

; <label>:21                                      ; preds = %20, %19, %14
  %22 = load i32, i32* %1
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal void @free_file_system_list(%struct.mount_entry* %p) #0 {
  %1 = alloca %struct.mount_entry*, align 8
  %pnext = alloca %struct.mount_entry*, align 8
  store %struct.mount_entry* %p, %struct.mount_entry** %1, align 8
  br label %2

; <label>:2                                       ; preds = %26, %0
  %3 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %4 = icmp ne %struct.mount_entry* %3, null
  br i1 %4, label %5, label %32

; <label>:5                                       ; preds = %2
  %6 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %7 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %6, i32 0, i32 5
  %8 = load %struct.mount_entry*, %struct.mount_entry** %7, align 8
  store %struct.mount_entry* %8, %struct.mount_entry** %pnext, align 8
  %9 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %10 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  call void @free(i8* %11) #9
  %12 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %13 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %12, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  call void @free(i8* %14) #9
  %15 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %16 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %15, i32 0, i32 4
  %17 = load i8, i8* %16, align 8
  %18 = lshr i8 %17, 2
  %19 = and i8 %18, 1
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %5
  %23 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %24 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %23, i32 0, i32 2
  %25 = load i8*, i8** %24, align 8
  call void @free(i8* %25) #9
  br label %26

; <label>:26                                      ; preds = %22, %5
  %27 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %28 = getelementptr inbounds %struct.mount_entry, %struct.mount_entry* %27, i32 0, i32 5
  store %struct.mount_entry* null, %struct.mount_entry** %28, align 8
  %29 = load %struct.mount_entry*, %struct.mount_entry** %1, align 8
  %30 = bitcast %struct.mount_entry* %29 to i8*
  call void @free(i8* %30) #9
  %31 = load %struct.mount_entry*, %struct.mount_entry** %pnext, align 8
  store %struct.mount_entry* %31, %struct.mount_entry** %1, align 8
  br label %2

; <label>:32                                      ; preds = %2
  ret void
}

; Function Attrs: nounwind uwtable
define void @check_option_combinations(%struct.predicate* %p) #0 {
  %1 = alloca %struct.predicate*, align 8
  %predicates = alloca i32, align 4
  store %struct.predicate* %p, %struct.predicate** %1, align 8
  store i32 0, i32* %predicates, align 4
  br label %2

; <label>:2                                       ; preds = %22, %0
  %3 = load %struct.predicate*, %struct.predicate** %1, align 8
  %4 = icmp ne %struct.predicate* %3, null
  br i1 %4, label %5, label %26

; <label>:5                                       ; preds = %2
  %6 = load %struct.predicate*, %struct.predicate** %1, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 0
  %8 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %7, align 8
  %9 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %8, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_delete to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %5
  %11 = load i32, i32* %predicates, align 4
  %12 = or i32 %11, 1
  store i32 %12, i32* %predicates, align 4
  br label %22

; <label>:13                                      ; preds = %5
  %14 = load %struct.predicate*, %struct.predicate** %1, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 0
  %16 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %15, align 8
  %17 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %16, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_prune to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %13
  %19 = load i32, i32* %predicates, align 4
  %20 = or i32 %19, 2
  store i32 %20, i32* %predicates, align 4
  br label %21

; <label>:21                                      ; preds = %18, %13
  br label %22

; <label>:22                                      ; preds = %21, %10
  %23 = load %struct.predicate*, %struct.predicate** %1, align 8
  %24 = getelementptr inbounds %struct.predicate, %struct.predicate* %23, i32 0, i32 14
  %25 = load %struct.predicate*, %struct.predicate** %24, align 8
  store %struct.predicate* %25, %struct.predicate** %1, align 8
  br label %2

; <label>:26                                      ; preds = %2
  %27 = load i32, i32* %predicates, align 4
  %28 = and i32 %27, 2
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %40

; <label>:30                                      ; preds = %26
  %31 = load i32, i32* %predicates, align 4
  %32 = and i32 %31, 1
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %40

; <label>:34                                      ; preds = %30
  %35 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 1), align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %39, label %37

; <label>:37                                      ; preds = %34
  %38 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str291, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %38)
  br label %39

; <label>:39                                      ; preds = %37, %34
  br label %40

; <label>:40                                      ; preds = %39, %30, %26
  ret void
}

; Function Attrs: nounwind uwtable
define void @set_follow_state(i32 %opt) #0 {
  %1 = alloca i32, align 4
  store i32 %opt, i32* %1, align 4
  %2 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %3 = and i64 %2, 2
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 (i8*, %struct.stat*)* @debug_stat, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  br label %12

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %1, align 4
  switch i32 %7, label %11 [
    i32 1, label %8
    i32 0, label %9
    i32 2, label %10
  ]

; <label>:8                                       ; preds = %6
  store i32 (i8*, %struct.stat*)* @optionl_stat, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 4), align 1
  br label %11

; <label>:9                                       ; preds = %6
  store i32 (i8*, %struct.stat*)* @optionp_stat, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  br label %11

; <label>:10                                      ; preds = %6
  store i32 (i8*, %struct.stat*)* @optionh_stat, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 4), align 1
  br label %11

; <label>:11                                      ; preds = %10, %9, %8, %6
  br label %12

; <label>:12                                      ; preds = %11, %5
  %13 = load i32, i32* %1, align 4
  store i32 %13, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 15), align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @parse_begin_user_args(i8** %args, i32 %argno, %struct.predicate* %last, %struct.predicate* %predicates) #0 {
  %1 = alloca i8**, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.predicate*, align 8
  %4 = alloca %struct.predicate*, align 8
  store i8** %args, i8*** %1, align 8
  store i32 %argno, i32* %2, align 4
  store %struct.predicate* %last, %struct.predicate** %3, align 8
  store %struct.predicate* %predicates, %struct.predicate** %4, align 8
  %5 = load i8**, i8*** %1, align 8
  %6 = load i32, i32* %2, align 4
  %7 = load %struct.predicate*, %struct.predicate** %3, align 8
  %8 = load %struct.predicate*, %struct.predicate** %4, align 8
  store i8* null, i8** @first_nonoption_arg, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @parse_end_user_args(i8** %args, i32 %argno, %struct.predicate* %last, %struct.predicate* %predicates) #0 {
  %1 = alloca i8**, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.predicate*, align 8
  %4 = alloca %struct.predicate*, align 8
  store i8** %args, i8*** %1, align 8
  store i32 %argno, i32* %2, align 4
  store %struct.predicate* %last, %struct.predicate** %3, align 8
  store %struct.predicate* %predicates, %struct.predicate** %4, align 8
  %5 = load i8**, i8*** %1, align 8
  %6 = load i32, i32* %2, align 4
  %7 = load %struct.predicate*, %struct.predicate** %3, align 8
  %8 = load %struct.predicate*, %struct.predicate** %4, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.parser_table* @found_parser(i8* %original_arg, %struct.parser_table* %entry) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.parser_table*, align 8
  store i8* %original_arg, i8** %1, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  %3 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %4 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 2
  br i1 %6, label %7, label %31

; <label>:7                                       ; preds = %0
  %8 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %9 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** @first_nonoption_arg, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %23

; <label>:15                                      ; preds = %12
  %16 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 8), align 1
  %17 = trunc i8 %16 to i1
  br i1 %17, label %18, label %23

; <label>:18                                      ; preds = %15
  %19 = call i8* @gettext(i8* getelementptr inbounds ([230 x i8], [230 x i8]* @.str1292, i32 0, i32 0))
  %20 = load i8*, i8** %1, align 8
  %21 = load i8*, i8** @first_nonoption_arg, align 8
  %22 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %19, i8* %20, i8* %21, i8* %22)
  br label %23

; <label>:23                                      ; preds = %18, %15, %12
  br label %30

; <label>:24                                      ; preds = %7
  %25 = load i8*, i8** @first_nonoption_arg, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29

; <label>:27                                      ; preds = %24
  %28 = load i8*, i8** %1, align 8
  store i8* %28, i8** @first_nonoption_arg, align 8
  br label %29

; <label>:29                                      ; preds = %27, %24
  br label %30

; <label>:30                                      ; preds = %29, %23
  br label %31

; <label>:31                                      ; preds = %30, %0
  %32 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  ret %struct.parser_table* %32
}

; Function Attrs: nounwind uwtable
define %struct.parser_table* @find_parser(i8* %search_name) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %original_arg = alloca i8*, align 8
  store i8* %search_name, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  store i8* %3, i8** %original_arg, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str2293, i32 0, i32 0), i8* %4, i64 6) #14
  %6 = icmp eq i32 0, %5
  br i1 %6, label %7, label %14

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %2, align 8
  %9 = call i64 @strlen(i8* %8) #14
  %10 = icmp eq i64 8, %9
  br i1 %10, label %11, label %14

; <label>:11                                      ; preds = %7
  %12 = load i8*, i8** %original_arg, align 8
  %13 = call %struct.parser_table* @found_parser(i8* %12, %struct.parser_table* @parse_entry_newerXY)
  store %struct.parser_table* %13, %struct.parser_table** %1
  br label %50

; <label>:14                                      ; preds = %7, %0
  %15 = load i8*, i8** %2, align 8
  %16 = load i8, i8* %15, align 1
  %17 = sext i8 %16 to i32
  %18 = icmp eq i32 %17, 45
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %14
  %20 = load i8*, i8** %2, align 8
  %21 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %21, i8** %2, align 8
  br label %22

; <label>:22                                      ; preds = %19, %14
  store i32 0, i32* %i, align 4
  br label %23

; <label>:23                                      ; preds = %46, %22
  %24 = load i32, i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [85 x %struct.parser_table], [85 x %struct.parser_table]* @parse_table, i32 0, i64 %25
  %27 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %26, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %49

; <label>:30                                      ; preds = %23
  %31 = load i32, i32* %i, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [85 x %struct.parser_table], [85 x %struct.parser_table]* @parse_table, i32 0, i64 %32
  %34 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %33, i32 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = load i8*, i8** %2, align 8
  %37 = call i32 @strcmp(i8* %35, i8* %36) #14
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %45

; <label>:39                                      ; preds = %30
  %40 = load i8*, i8** %original_arg, align 8
  %41 = load i32, i32* %i, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [85 x %struct.parser_table], [85 x %struct.parser_table]* @parse_table, i32 0, i64 %42
  %44 = call %struct.parser_table* @found_parser(i8* %40, %struct.parser_table* %43)
  store %struct.parser_table* %44, %struct.parser_table** %1
  br label %50

; <label>:45                                      ; preds = %30
  br label %46

; <label>:46                                      ; preds = %45
  %47 = load i32, i32* %i, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %i, align 4
  br label %23

; <label>:49                                      ; preds = %23
  store %struct.parser_table* null, %struct.parser_table** %1
  br label %50

; <label>:50                                      ; preds = %49, %39, %11
  %51 = load %struct.parser_table*, %struct.parser_table** %1
  ret %struct.parser_table* %51
}

; Function Attrs: nounwind uwtable
define zeroext i1 @parse_closeparen(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @get_new_pred(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_closeparen to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %9, align 8
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 2
  store i32 5, i32* %11, align 4
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 3
  store i32 0, i32* %13, align 4
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 7
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 6
  store i8 0, i8* %17, align 1
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @parse_openparen(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @get_new_pred_chk_op(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_openparen to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %9, align 8
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 2
  store i32 4, i32* %11, align 4
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 3
  store i32 0, i32* %13, align 4
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 7
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 6
  store i8 0, i8* %17, align 1
  ret i1 true
}

; Function Attrs: nounwind uwtable
define zeroext i1 @parse_print(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 5
  store i8 1, i8* %9, align 1
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 4
  store i8 1, i8* %11, align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 6
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 13
  %18 = bitcast %union.anon* %17 to %struct.format_val*
  call void @open_stdout(%struct.format_val* %18)
  ret i1 true
}

declare %struct.quoting_options* @clone_quoting_options(%struct.quoting_options*) #3

declare %struct._IO_FILE* @fopen_safer(i8*, i8*) #3

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE*) #4

declare void @display_findutils_version(i8*) #3

declare i32 @printf(i8*, ...) #3

declare i32 @puts(i8*) #3

declare %struct.passwd* @getpwnam(i8*) #3

declare void @endpwent() #3

; Function Attrs: nounwind readonly
declare i64 @strspn(i8*, i8*) #6

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #4

declare zeroext i1 @xstrtod(i8*, i8**, double*, double (i8*, i8**)*) #3

; Function Attrs: nounwind
declare double @strtod(i8*, i8**) #4

; Function Attrs: nounwind
declare double @modf(double, double*) #4

declare i32 @xstrtoumax(i8*, i8**, i32, i64*, i8*) #3

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #4

declare i32 @get_regex_type(i8*) #3

declare i64 @rpl_re_set_syntax(i64) #3

declare i8* @rpl_re_compile_pattern(i8*, i64, %struct.re_pattern_buffer*) #3

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8*) #6

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #6

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #4

declare %struct.mode_change* @mode_compile(i8*) #3

declare i32 @mode_adjust(i32, i1 zeroext, i32, %struct.mode_change*, i32*) #3

declare i8* @mbsstr(i8*, i8*) #3

declare i32 @bc_init_controlinfo(%struct.buildcmd_control*, i64) #3

declare void @bc_use_sensible_arg_max(%struct.buildcmd_control*) #3

declare void @bc_init_state(%struct.buildcmd_control*, %struct.buildcmd_state*, i8*) #3

declare i8* @next_element(i8*, i32) #3

declare %struct.group* @getgrnam(i8*) #3

declare void @endgrent() #3

; Function Attrs: nounwind
declare i8* @ctime(i64*) #4

declare zeroext i1 @get_date(%struct.timespec*, i8*, %struct.timespec*) #3

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_newerXY(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %x = alloca i8, align 1
  %y = alloca i8, align 1
  %our_pred = alloca %struct.predicate*, align 8
  %stat_newer = alloca %struct.stat, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load i8**, i8*** %3, align 8
  %8 = icmp eq i8** %7, null
  br i1 %8, label %17, label %9

; <label>:9                                       ; preds = %0
  %10 = load i32*, i32** %4, align 8
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = load i8**, i8*** %3, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 %12
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %9, %0
  store i1 false, i1* %1
  br label %241

; <label>:18                                      ; preds = %9
  %19 = load i32*, i32** %4, align 8
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = load i8**, i8*** %3, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 %21
  %24 = load i8*, i8** %23, align 8
  %25 = call i64 @strlen(i8* %24) #14
  %26 = icmp ne i64 8, %25
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %18
  store i1 false, i1* %1
  br label %241

; <label>:28                                      ; preds = %18
  %29 = load i32*, i32** %4, align 8
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = load i8**, i8*** %3, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 %31
  %34 = load i8*, i8** %33, align 8
  %35 = call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str2293, i32 0, i32 0), i8* %34, i64 6) #14
  %36 = icmp eq i32 0, %35
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %28
  br label %40

; <label>:38                                      ; preds = %28
  call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str184, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 1495, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.parse_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %40

; <label>:40                                      ; preds = %39, %37
  %41 = load i32*, i32** %4, align 8
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = load i8**, i8*** %3, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 %43
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 6
  %48 = load i8, i8* %47, align 1
  store i8 %48, i8* %x, align 1
  %49 = load i32*, i32** %4, align 8
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = load i8**, i8*** %3, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 %51
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 7
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %y, align 1
  %57 = load i8, i8* %x, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp eq i32 66, %58
  br i1 %59, label %64, label %60

; <label>:60                                      ; preds = %40
  %61 = load i8, i8* %y, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 66, %62
  br i1 %63, label %64, label %66

; <label>:64                                      ; preds = %60, %40
  %65 = call i8* @gettext(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str185, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %65)
  store i1 false, i1* %1
  br label %241

; <label>:66                                      ; preds = %60
  %67 = load i8, i8* %x, align 1
  %68 = sext i8 %67 to i32
  %69 = icmp eq i32 %68, 116
  br i1 %69, label %80, label %70

; <label>:70                                      ; preds = %66
  %71 = load i8, i8* %x, align 1
  %72 = sext i8 %71 to i32
  %73 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @parse_newerXY.validchars, i32 0, i32 0), i32 %72) #14
  %74 = icmp eq i8* null, %73
  br i1 %74, label %80, label %75

; <label>:75                                      ; preds = %70
  %76 = load i8, i8* %y, align 1
  %77 = sext i8 %76 to i32
  %78 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @parse_newerXY.validchars, i32 0, i32 0), i32 %77) #14
  %79 = icmp eq i8* null, %78
  br i1 %79, label %80, label %81

; <label>:80                                      ; preds = %75, %70, %66
  store i1 false, i1* %1
  br label %241

; <label>:81                                      ; preds = %75
  %82 = load i32*, i32** %4, align 8
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 1, %83
  %85 = sext i32 %84 to i64
  %86 = load i8**, i8*** %3, align 8
  %87 = getelementptr inbounds i8*, i8** %86, i64 %85
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %100

; <label>:90                                      ; preds = %81
  %91 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str186, i32 0, i32 0))
  %92 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %93 = load i32*, i32** %4, align 8
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = load i8**, i8*** %3, align 8
  %97 = getelementptr inbounds i8*, i8** %96, i64 %95
  %98 = load i8*, i8** %97, align 8
  %99 = call i8* @quotearg_n_style(i32 0, i32 %92, i8* %98)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %91, i8* %99)
  br label %104

; <label>:100                                     ; preds = %81
  %101 = load i32*, i32** %4, align 8
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %101, align 4
  br label %104

; <label>:104                                     ; preds = %100, %90
  %105 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %106 = call %struct.predicate* @insert_primary(%struct.parser_table* %105)
  store %struct.predicate* %106, %struct.predicate** %our_pred, align 8
  %107 = load i8, i8* %x, align 1
  %108 = sext i8 %107 to i32
  switch i32 %108, label %129 [
    i32 97, label %109
    i32 66, label %114
    i32 99, label %119
    i32 109, label %124
  ]

; <label>:109                                     ; preds = %104
  %110 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %111 = getelementptr inbounds %struct.predicate, %struct.predicate* %110, i32 0, i32 13
  %112 = bitcast %union.anon* %111 to %struct.time_val*
  %113 = getelementptr inbounds %struct.time_val, %struct.time_val* %112, i32 0, i32 0
  store i32 0, i32* %113, align 4
  br label %138

; <label>:114                                     ; preds = %104
  %115 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %116 = getelementptr inbounds %struct.predicate, %struct.predicate* %115, i32 0, i32 13
  %117 = bitcast %union.anon* %116 to %struct.time_val*
  %118 = getelementptr inbounds %struct.time_val, %struct.time_val* %117, i32 0, i32 0
  store i32 1, i32* %118, align 4
  br label %138

; <label>:119                                     ; preds = %104
  %120 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %121 = getelementptr inbounds %struct.predicate, %struct.predicate* %120, i32 0, i32 13
  %122 = bitcast %union.anon* %121 to %struct.time_val*
  %123 = getelementptr inbounds %struct.time_val, %struct.time_val* %122, i32 0, i32 0
  store i32 2, i32* %123, align 4
  br label %138

; <label>:124                                     ; preds = %104
  %125 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %126 = getelementptr inbounds %struct.predicate, %struct.predicate* %125, i32 0, i32 13
  %127 = bitcast %union.anon* %126 to %struct.time_val*
  %128 = getelementptr inbounds %struct.time_val, %struct.time_val* %127, i32 0, i32 0
  store i32 3, i32* %128, align 4
  br label %138

; <label>:129                                     ; preds = %104
  %130 = load i8, i8* %x, align 1
  %131 = sext i8 %130 to i32
  %132 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @parse_newerXY.validchars, i32 0, i32 0), i32 %131) #14
  %133 = icmp ne i8* %132, null
  br i1 %133, label %134, label %135

; <label>:134                                     ; preds = %129
  br label %137

; <label>:135                                     ; preds = %129
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 1551, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.parse_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %137

; <label>:137                                     ; preds = %136, %134
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 1552, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.parse_newerXY, i32 0, i32 0)) #12
  unreachable

; <label>:138                                     ; preds = %124, %119, %114, %109
  %139 = load i8, i8* %y, align 1
  %140 = sext i8 %139 to i32
  %141 = icmp eq i32 116, %140
  br i1 %141, label %142, label %165

; <label>:142                                     ; preds = %138
  %143 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %144 = getelementptr inbounds %struct.predicate, %struct.predicate* %143, i32 0, i32 13
  %145 = bitcast %union.anon* %144 to %struct.time_val*
  %146 = getelementptr inbounds %struct.time_val, %struct.time_val* %145, i32 0, i32 2
  %147 = load i32*, i32** %4, align 8
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = load i8**, i8*** %3, align 8
  %151 = getelementptr inbounds i8*, i8** %150, i64 %149
  %152 = load i8*, i8** %151, align 8
  %153 = call zeroext i1 @get_date(%struct.timespec* %146, i8* %152, %struct.timespec* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 10))
  br i1 %153, label %164, label %154

; <label>:154                                     ; preds = %142
  %155 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str189, i32 0, i32 0))
  %156 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %157 = load i32*, i32** %4, align 8
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = load i8**, i8*** %3, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 %159
  %162 = load i8*, i8** %161, align 8
  %163 = call i8* @quotearg_n_style(i32 0, i32 %156, i8* %162)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %155, i8* %163)
  br label %164

; <label>:164                                     ; preds = %154, %142
  br label %200

; <label>:165                                     ; preds = %138
  call void @set_stat_placeholders(%struct.stat* %stat_newer)
  %166 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  %167 = load i32*, i32** %4, align 8
  %168 = load i32, i32* %167, align 4
  %169 = sext i32 %168 to i64
  %170 = load i8**, i8*** %3, align 8
  %171 = getelementptr inbounds i8*, i8** %170, i64 %169
  %172 = load i8*, i8** %171, align 8
  %173 = call i32 %166(i8* %172, %struct.stat* %stat_newer)
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %182

; <label>:175                                     ; preds = %165
  %176 = load i32*, i32** %4, align 8
  %177 = load i32, i32* %176, align 4
  %178 = sext i32 %177 to i64
  %179 = load i8**, i8*** %3, align 8
  %180 = getelementptr inbounds i8*, i8** %179, i64 %178
  %181 = load i8*, i8** %180, align 8
  call void @fatal_file_error(i8* %181) #15
  unreachable

; <label>:182                                     ; preds = %165
  %183 = load i8, i8* %y, align 1
  %184 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %185 = getelementptr inbounds %struct.predicate, %struct.predicate* %184, i32 0, i32 13
  %186 = bitcast %union.anon* %185 to %struct.time_val*
  %187 = getelementptr inbounds %struct.time_val, %struct.time_val* %186, i32 0, i32 2
  %188 = call i32 @get_stat_Ytime(%struct.stat* %stat_newer, i8 signext %183, %struct.timespec* %187)
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %199, label %190

; <label>:190                                     ; preds = %182
  %191 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str190, i32 0, i32 0))
  %192 = load i32*, i32** %4, align 8
  %193 = load i32, i32* %192, align 4
  %194 = sext i32 %193 to i64
  %195 = load i8**, i8*** %3, align 8
  %196 = getelementptr inbounds i8*, i8** %195, i64 %194
  %197 = load i8*, i8** %196, align 8
  %198 = call i8* @safely_quote_err_filename(i32 0, i8* %197)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %191, i8* %198)
  br label %199

; <label>:199                                     ; preds = %190, %182
  br label %200

; <label>:200                                     ; preds = %199, %164
  %201 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %202 = getelementptr inbounds %struct.predicate, %struct.predicate* %201, i32 0, i32 13
  %203 = bitcast %union.anon* %202 to %struct.time_val*
  %204 = getelementptr inbounds %struct.time_val, %struct.time_val* %203, i32 0, i32 1
  store i32 0, i32* %204, align 4
  %205 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %206 = getelementptr inbounds %struct.predicate, %struct.predicate* %205, i32 0, i32 13
  %207 = bitcast %union.anon* %206 to %struct.time_val*
  %208 = getelementptr inbounds %struct.time_val, %struct.time_val* %207, i32 0, i32 2
  %209 = getelementptr inbounds %struct.timespec, %struct.timespec* %208, i32 0, i32 0
  %210 = load i64, i64* %209, align 8
  %211 = call float @estimate_timestamp_success_rate(i64 %210)
  %212 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %213 = getelementptr inbounds %struct.predicate, %struct.predicate* %212, i32 0, i32 9
  store float %211, float* %213, align 4
  %214 = load i32*, i32** %4, align 8
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %214, align 4
  %217 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %218 = getelementptr inbounds %struct.predicate, %struct.predicate* %217, i32 0, i32 0
  %219 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %218, align 8
  %220 = icmp ne i1 (i8*, %struct.stat*, %struct.predicate*)* %219, null
  br i1 %220, label %221, label %222

; <label>:221                                     ; preds = %200
  br label %224

; <label>:222                                     ; preds = %200
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str191, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 1586, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.parse_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %224

; <label>:224                                     ; preds = %223, %221
  %225 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %226 = getelementptr inbounds %struct.predicate, %struct.predicate* %225, i32 0, i32 0
  %227 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %226, align 8
  %228 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %227, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_newerXY to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %228, label %229, label %230

; <label>:229                                     ; preds = %224
  br label %232

; <label>:230                                     ; preds = %224
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str192, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 1587, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.parse_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %232

; <label>:232                                     ; preds = %231, %229
  %233 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %234 = getelementptr inbounds %struct.predicate, %struct.predicate* %233, i32 0, i32 6
  %235 = load i8, i8* %234, align 1
  %236 = trunc i8 %235 to i1
  br i1 %236, label %237, label %238

; <label>:237                                     ; preds = %232
  br label %240

; <label>:238                                     ; preds = %232
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str193, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 1588, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.parse_newerXY, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %240

; <label>:240                                     ; preds = %239, %237
  store i1 true, i1* %1
  br label %241

; <label>:241                                     ; preds = %240, %80, %64, %27, %17
  %242 = load i1, i1* %1
  ret i1 %242
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_negate(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call %struct.predicate* @get_new_pred_chk_op(%struct.parser_table* %4)
  store %struct.predicate* %5, %struct.predicate** %our_pred, align 8
  %6 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_negate to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %7, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 2
  store i32 2, i32* %9, align 4
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 3
  store i32 4, i32* %11, align 4
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 6
  store i8 0, i8* %15, align 1
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_comma(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @get_new_pred(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_comma to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %9, align 8
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 2
  store i32 3, i32* %11, align 4
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 3
  store i32 1, i32* %13, align 4
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 7
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 6
  store i8 0, i8* %17, align 1
  %18 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %19 = getelementptr inbounds %struct.predicate, %struct.predicate* %18, i32 0, i32 9
  store float 1.000000e+00, float* %19, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_and(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @get_new_pred(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_and to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %9, align 8
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 2
  store i32 3, i32* %11, align 4
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 3
  store i32 3, i32* %13, align 4
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 7
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 6
  store i8 0, i8* %17, align 1
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_amin(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @do_parse_xmin(%struct.parser_table* %4, i8** %5, i32* %6, i32 0)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_anewer(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %stat_newer = alloca %struct.stat, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %5 = alloca %struct.timespec, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  call void @set_stat_placeholders(%struct.stat* %stat_newer)
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call zeroext i1 @collect_arg_stat_info(i8** %6, i32* %7, %struct.stat* %stat_newer)
  br i1 %8, label %9, label %38

; <label>:9                                       ; preds = %0
  %10 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %11 = call %struct.predicate* @insert_primary(%struct.parser_table* %10)
  store %struct.predicate* %11, %struct.predicate** %our_pred, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to %struct.time_val*
  %15 = getelementptr inbounds %struct.time_val, %struct.time_val* %14, i32 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 13
  %18 = bitcast %union.anon* %17 to %struct.time_val*
  %19 = getelementptr inbounds %struct.time_val, %struct.time_val* %18, i32 0, i32 2
  %20 = call { i64, i64 } @get_stat_mtime417(%struct.stat* %stat_newer)
  %21 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %22 = getelementptr { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0
  %23 = extractvalue { i64, i64 } %20, 0
  store i64 %23, i64* %22, align 1
  %24 = getelementptr { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1
  %25 = extractvalue { i64, i64 } %20, 1
  store i64 %25, i64* %24, align 1
  %26 = bitcast %struct.timespec* %19 to i8*
  %27 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 13
  %30 = bitcast %union.anon* %29 to %struct.time_val*
  %31 = getelementptr inbounds %struct.time_val, %struct.time_val* %30, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %stat_newer, i32 0, i32 12
  %33 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = call float @estimate_timestamp_success_rate(i64 %34)
  %36 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %37 = getelementptr inbounds %struct.predicate, %struct.predicate* %36, i32 0, i32 9
  store float %35, float* %37, align 4
  store i1 true, i1* %1
  br label %39

; <label>:38                                      ; preds = %0
  store i1 false, i1* %1
  br label %39

; <label>:39                                      ; preds = %38, %9
  %40 = load i1, i1* %1
  ret i1 %40
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_time(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %tval = alloca %struct.time_val, align 8
  %comp = alloca i32, align 4
  %timearg = alloca i8*, align 8
  %orig_timearg = alloca i8*, align 8
  %errmsg = alloca i8*, align 8
  %origin = alloca %struct.timespec, align 8
  %expected = alloca i64, align 8
  %t = alloca i64, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str119, i32 0, i32 0), i8** %errmsg, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %timearg)
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  store i1 false, i1* %1
  br label %135

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %timearg, align 8
  store i8* %10, i8** %orig_timearg, align 8
  %11 = bitcast %struct.timespec* %origin to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* bitcast (%struct.timespec* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11) to i8*), i64 16, i32 8, i1 false)
  %12 = call zeroext i1 @get_comp_type(i8** %timearg, i32* %comp)
  br i1 %12, label %13, label %31

; <label>:13                                      ; preds = %9
  %14 = load i32, i32* %comp, align 4
  %15 = icmp eq i32 1, %14
  br i1 %15, label %16, label %30

; <label>:16                                      ; preds = %13
  %17 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, 86399
  store i64 %19, i64* %expected, align 8
  %20 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, 86399
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %expected, align 8
  %26 = icmp ne i64 %24, %25
  br i1 %26, label %27, label %29

; <label>:27                                      ; preds = %16
  %28 = call i8* @gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str179, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %28)
  br label %29

; <label>:29                                      ; preds = %27, %16
  br label %30

; <label>:30                                      ; preds = %29, %13
  br label %31

; <label>:31                                      ; preds = %30, %9
  %32 = load i8*, i8** %orig_timearg, align 8
  store i8* %32, i8** %timearg, align 8
  %33 = load i8*, i8** %timearg, align 8
  %34 = load i8*, i8** %errmsg, align 8
  %35 = bitcast %struct.timespec* %origin to { i64, i64 }*
  %36 = getelementptr { i64, i64 }, { i64, i64 }* %35, i32 0, i32 0
  %37 = load i64, i64* %36, align 1
  %38 = getelementptr { i64, i64 }, { i64, i64 }* %35, i32 0, i32 1
  %39 = load i64, i64* %38, align 1
  %40 = call zeroext i1 @get_relative_timestamp(i8* %33, %struct.time_val* %tval, i64 %37, i64 %39, double 8.640000e+04, i8* %34)
  br i1 %40, label %42, label %41

; <label>:41                                      ; preds = %31
  store i1 false, i1* %1
  br label %135

; <label>:42                                      ; preds = %31
  %43 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %44 = call %struct.predicate* @insert_primary(%struct.parser_table* %43)
  store %struct.predicate* %44, %struct.predicate** %our_pred, align 8
  %45 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %46 = getelementptr inbounds %struct.predicate, %struct.predicate* %45, i32 0, i32 13
  %47 = bitcast %union.anon* %46 to %struct.time_val*
  %48 = bitcast %struct.time_val* %47 to i8*
  %49 = bitcast %struct.time_val* %tval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 24, i32 8, i1 false)
  %50 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 2
  %51 = getelementptr inbounds %struct.timespec, %struct.timespec* %50, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = call float @estimate_timestamp_success_rate(i64 %52)
  %54 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %55 = getelementptr inbounds %struct.predicate, %struct.predicate* %54, i32 0, i32 9
  store float %53, float* %55, align 4
  %56 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %57 = and i64 %56, 1
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %134

; <label>:59                                      ; preds = %42
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %61 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %62 = getelementptr inbounds %struct.predicate, %struct.predicate* %61, i32 0, i32 1
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str123, i32 0, i32 0), i8* %63)
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %66 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %59
  br label %82

; <label>:70                                      ; preds = %59
  %71 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %75

; <label>:74                                      ; preds = %70
  br label %80

; <label>:75                                      ; preds = %70
  %76 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 2
  %79 = select i1 %78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str128, i32 0, i32 0)
  br label %80

; <label>:80                                      ; preds = %75, %74
  %81 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str126, i32 0, i32 0), %74 ], [ %79, %75 ]
  br label %82

; <label>:82                                      ; preds = %80, %69
  %83 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str125, i32 0, i32 0), %69 ], [ %81, %80 ]
  %84 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

; <label>:87                                      ; preds = %82
  br label %100

; <label>:88                                      ; preds = %82
  %89 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %88
  br label %98

; <label>:93                                      ; preds = %88
  %94 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 2
  %97 = select i1 %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str180, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str132, i32 0, i32 0)
  br label %98

; <label>:98                                      ; preds = %93, %92
  %99 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str130, i32 0, i32 0), %92 ], [ %97, %93 ]
  br label %100

; <label>:100                                     ; preds = %98, %87
  %101 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str129, i32 0, i32 0), %87 ], [ %99, %98 ]
  %102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str124, i32 0, i32 0), i8* %83, i8* %101)
  %103 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %104 = getelementptr inbounds %struct.predicate, %struct.predicate* %103, i32 0, i32 13
  %105 = bitcast %union.anon* %104 to %struct.time_val*
  %106 = getelementptr inbounds %struct.time_val, %struct.time_val* %105, i32 0, i32 2
  %107 = getelementptr inbounds %struct.timespec, %struct.timespec* %106, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %t, align 8
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %110 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %111 = getelementptr inbounds %struct.predicate, %struct.predicate* %110, i32 0, i32 13
  %112 = bitcast %union.anon* %111 to %struct.time_val*
  %113 = getelementptr inbounds %struct.time_val, %struct.time_val* %112, i32 0, i32 2
  %114 = getelementptr inbounds %struct.timespec, %struct.timespec* %113, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = call i8* @ctime(i64* %t) #9
  %117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str181, i32 0, i32 0), i64 %115, i8* %116)
  %118 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 2
  br i1 %120, label %121, label %133

; <label>:121                                     ; preds = %100
  %122 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %123 = getelementptr inbounds %struct.predicate, %struct.predicate* %122, i32 0, i32 13
  %124 = bitcast %union.anon* %123 to %struct.time_val*
  %125 = getelementptr inbounds %struct.time_val, %struct.time_val* %124, i32 0, i32 2
  %126 = getelementptr inbounds %struct.timespec, %struct.timespec* %125, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add nsw i64 %127, 86400
  store i64 %128, i64* %t, align 8
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %130 = load i64, i64* %t, align 8
  %131 = call i8* @ctime(i64* %t) #9
  %132 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str182, i32 0, i32 0), i64 %130, i8* %131)
  br label %133

; <label>:133                                     ; preds = %121, %100
  br label %134

; <label>:134                                     ; preds = %133, %42
  store i1 true, i1* %1
  br label %135

; <label>:135                                     ; preds = %134, %41, %8
  %136 = load i1, i1* %1
  ret i1 %136
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_cmin(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @do_parse_xmin(%struct.parser_table* %4, i8** %5, i32* %6, i32 2)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_cnewer(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %stat_newer = alloca %struct.stat, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %5 = alloca %struct.timespec, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  call void @set_stat_placeholders(%struct.stat* %stat_newer)
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call zeroext i1 @collect_arg_stat_info(i8** %6, i32* %7, %struct.stat* %stat_newer)
  br i1 %8, label %9, label %38

; <label>:9                                       ; preds = %0
  %10 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %11 = call %struct.predicate* @insert_primary(%struct.parser_table* %10)
  store %struct.predicate* %11, %struct.predicate** %our_pred, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to %struct.time_val*
  %15 = getelementptr inbounds %struct.time_val, %struct.time_val* %14, i32 0, i32 0
  store i32 2, i32* %15, align 4
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 13
  %18 = bitcast %union.anon* %17 to %struct.time_val*
  %19 = getelementptr inbounds %struct.time_val, %struct.time_val* %18, i32 0, i32 2
  %20 = call { i64, i64 } @get_stat_mtime417(%struct.stat* %stat_newer)
  %21 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %22 = getelementptr { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0
  %23 = extractvalue { i64, i64 } %20, 0
  store i64 %23, i64* %22, align 1
  %24 = getelementptr { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1
  %25 = extractvalue { i64, i64 } %20, 1
  store i64 %25, i64* %24, align 1
  %26 = bitcast %struct.timespec* %19 to i8*
  %27 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 13
  %30 = bitcast %union.anon* %29 to %struct.time_val*
  %31 = getelementptr inbounds %struct.time_val, %struct.time_val* %30, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %stat_newer, i32 0, i32 12
  %33 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = call float @estimate_timestamp_success_rate(i64 %34)
  %36 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %37 = getelementptr inbounds %struct.predicate, %struct.predicate* %36, i32 0, i32 9
  store float %35, float* %37, align 4
  store i1 true, i1* %1
  br label %39

; <label>:38                                      ; preds = %0
  store i1 false, i1* %1
  br label %39

; <label>:39                                      ; preds = %38, %9
  %40 = load i1, i1* %1
  ret i1 %40
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_daystart(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %local = alloca %struct.tm*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 12), align 1
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %39

; <label>:11                                      ; preds = %0
  %12 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 0), align 8
  %13 = add nsw i64 %12, 86400
  store i64 %13, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 0), align 8
  store i64 0, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 1), align 8
  %14 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 0)) #9
  store %struct.tm* %14, %struct.tm** %local, align 8
  %15 = load %struct.tm*, %struct.tm** %local, align 8
  %16 = icmp ne %struct.tm* %15, null
  br i1 %16, label %17, label %32

; <label>:17                                      ; preds = %11
  %18 = load %struct.tm*, %struct.tm** %local, align 8
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.tm*, %struct.tm** %local, align 8
  %22 = getelementptr inbounds %struct.tm, %struct.tm* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = mul nsw i32 %23, 60
  %25 = add nsw i32 %20, %24
  %26 = load %struct.tm*, %struct.tm** %local, align 8
  %27 = getelementptr inbounds %struct.tm, %struct.tm* %26, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %28, 3600
  %30 = add nsw i32 %25, %29
  %31 = sext i32 %30 to i64
  br label %35

; <label>:32                                      ; preds = %11
  %33 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 0), align 8
  %34 = srem i64 %33, 86400
  br label %35

; <label>:35                                      ; preds = %32, %17
  %36 = phi i64 [ %31, %17 ], [ %34, %32 ]
  %37 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 0), align 8
  %38 = sub nsw i64 %37, %36
  store i64 %38, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 0), align 8
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 12), align 1
  br label %39

; <label>:39                                      ; preds = %35, %0
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_delete(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 5
  store i8 1, i8* %9, align 1
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 4
  store i8 1, i8* %11, align 1
  store i8 0, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 0), align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 6
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 9
  store float 1.000000e+00, float* %17, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_d(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 8), align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = call i8* @gettext(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str178, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %7)
  br label %8

; <label>:8                                       ; preds = %6, %0
  %9 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %10 = load i8**, i8*** %2, align 8
  %11 = load i32*, i32** %3, align 8
  %12 = call zeroext i1 @parse_depth(%struct.parser_table* %9, i8** %10, i32* %11)
  ret i1 %12
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_depth(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  store i8 0, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 0), align 1
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 1), align 1
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = load i8**, i8*** %2, align 8
  %8 = load i32*, i32** %3, align 8
  %9 = call zeroext i1 @parse_noop(%struct.parser_table* %6, i8** %7, i32* %8)
  ret i1 %9
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_empty(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 9
  store float 0x3F847AE140000000, float* %9, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_exec(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call i32 @get_start_dirfd()
  %6 = load i8**, i8*** %2, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = call zeroext i1 @insert_exec_ok(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str177, i32 0, i32 0), %struct.parser_table* %4, i32 %5, i8** %6, i32* %7)
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_accesscheck(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 7
  store i8 0, i8* %9, align 1
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 5
  store i8 0, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 0
  %18 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %17, align 8
  %19 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %18, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_executable to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 9
  store float 0x3FC99999A0000000, float* %22, align 4
  br label %26

; <label>:23                                      ; preds = %0
  %24 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %25 = getelementptr inbounds %struct.predicate, %struct.predicate* %24, i32 0, i32 9
  store float 0x3FECCCCCC0000000, float* %25, align 4
  br label %26

; <label>:26                                      ; preds = %23, %20
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_execdir(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @insert_exec_ok(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str176, i32 0, i32 0), %struct.parser_table* %4, i32 -1, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_fls(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %filename = alloca i8*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = call zeroext i1 @collect_arg(i8** %4, i32* %5, i8** %filename)
  br i1 %6, label %7, label %11

; <label>:7                                       ; preds = %0
  %8 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %9 = load i8*, i8** %filename, align 8
  %10 = call zeroext i1 @insert_fls(%struct.parser_table* %8, i8* %9)
  br label %11

; <label>:11                                      ; preds = %7, %0
  %12 = phi i1 [ false, %0 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_follow(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  call void @set_follow_state(i32 1)
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_noop(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_fprint(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %filename = alloca i8*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %filename)
  br i1 %7, label %8, label %25

; <label>:8                                       ; preds = %0
  %9 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %10 = call %struct.predicate* @insert_primary(%struct.parser_table* %9)
  store %struct.predicate* %10, %struct.predicate** %our_pred, align 8
  %11 = load i8*, i8** %filename, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to %struct.format_val*
  call void @open_output_file(i8* %11, %struct.format_val* %14)
  %15 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 5
  store i8 1, i8* %16, align 1
  %17 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 4
  store i8 1, i8* %18, align 1
  %19 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 7
  store i8 0, i8* %20, align 1
  %21 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 6
  store i8 0, i8* %22, align 1
  %23 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %24 = getelementptr inbounds %struct.predicate, %struct.predicate* %23, i32 0, i32 9
  store float 1.000000e+00, float* %24, align 4
  store i1 true, i1* %1
  br label %26

; <label>:25                                      ; preds = %0
  store i1 false, i1* %1
  br label %26

; <label>:26                                      ; preds = %25, %8
  %27 = load i1, i1* %1
  ret i1 %27
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_fprint0(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %filename = alloca i8*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %filename)
  br i1 %7, label %8, label %12

; <label>:8                                       ; preds = %0
  %9 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %10 = load i8*, i8** %filename, align 8
  %11 = call zeroext i1 @insert_fprint(%struct.parser_table* %9, i8* %10)
  store i1 %11, i1* %1
  br label %13

; <label>:12                                      ; preds = %0
  store i1 false, i1* %1
  br label %13

; <label>:13                                      ; preds = %12, %8
  %14 = load i1, i1* %1
  ret i1 %14
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_fprintf(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %format = alloca i8*, align 8
  %filename = alloca i8*, align 8
  %fmt = alloca %struct.format_val, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %filename)
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %0
  %9 = load i8**, i8*** %3, align 8
  %10 = load i32*, i32** %4, align 8
  %11 = call zeroext i1 @collect_arg(i8** %9, i32* %10, i8** %format)
  br i1 %11, label %12, label %17

; <label>:12                                      ; preds = %8
  %13 = load i8*, i8** %filename, align 8
  call void @open_output_file(i8* %13, %struct.format_val* %fmt)
  %14 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %15 = load i8*, i8** %format, align 8
  %16 = call zeroext i1 @insert_fprintf(%struct.format_val* %fmt, %struct.parser_table* %14, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprintf to i1 (i8*, %struct.stat*, %struct.predicate*)*), i8* %15)
  store i1 %16, i1* %1
  br label %19

; <label>:17                                      ; preds = %8
  br label %18

; <label>:18                                      ; preds = %17, %0
  store i1 false, i1* %1
  br label %19

; <label>:19                                      ; preds = %18, %12
  %20 = load i1, i1* %1
  ret i1 %20
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_fstype(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %typename = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %typename)
  br i1 %7, label %8, label %19

; <label>:8                                       ; preds = %0
  %9 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %10 = call %struct.predicate* @insert_primary(%struct.parser_table* %9)
  store %struct.predicate* %10, %struct.predicate** %our_pred, align 8
  %11 = load i8*, i8** %typename, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to i8**
  store i8* %11, i8** %14, align 8
  %15 = load i8*, i8** %typename, align 8
  %16 = call float @estimate_fstype_success_rate(i8* %15)
  %17 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 9
  store float %16, float* %18, align 4
  store i1 true, i1* %1
  br label %20

; <label>:19                                      ; preds = %0
  store i1 false, i1* %1
  br label %20

; <label>:20                                      ; preds = %19, %8
  %21 = load i1, i1* %1
  ret i1 %21
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_gid(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %p = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %8 = call %struct.predicate* @insert_num(i8** %5, i32* %6, %struct.parser_table* %7)
  store %struct.predicate* %8, %struct.predicate** %p, align 8
  %9 = load %struct.predicate*, %struct.predicate** %p, align 8
  %10 = icmp ne %struct.predicate* %9, null
  br i1 %10, label %11, label %22

; <label>:11                                      ; preds = %0
  %12 = load %struct.predicate*, %struct.predicate** %p, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to %struct.long_val*
  %15 = getelementptr inbounds %struct.long_val, %struct.long_val* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 100
  %18 = select i1 %17, double 9.900000e-01, double 2.000000e-01
  %19 = fptrunc double %18 to float
  %20 = load %struct.predicate*, %struct.predicate** %p, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 9
  store float %19, float* %21, align 4
  store i1 true, i1* %1
  br label %23

; <label>:22                                      ; preds = %0
  store i1 false, i1* %1
  br label %23

; <label>:23                                      ; preds = %22, %11
  %24 = load i1, i1* %1
  ret i1 %24
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_group(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %groupname = alloca i8*, align 8
  %gid = alloca i32, align 4
  %our_pred = alloca %struct.predicate*, align 8
  %cur_gr = alloca %struct.group*, align 8
  %gid_len = alloca i32, align 4
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %groupname)
  br i1 %7, label %8, label %76

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %groupname, align 8
  %10 = call %struct.group* @getgrnam(i8* %9)
  store %struct.group* %10, %struct.group** %cur_gr, align 8
  call void @endgrent()
  %11 = load %struct.group*, %struct.group** %cur_gr, align 8
  %12 = icmp ne %struct.group* %11, null
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %8
  %14 = load %struct.group*, %struct.group** %cur_gr, align 8
  %15 = getelementptr inbounds %struct.group, %struct.group* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %gid, align 4
  br label %59

; <label>:17                                      ; preds = %8
  %18 = load i8*, i8** %groupname, align 8
  %19 = call i64 @strspn(i8* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str113, i32 0, i32 0)) #14
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %gid_len, align 4
  %21 = load i32, i32* %gid_len, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %46

; <label>:23                                      ; preds = %17
  %24 = load i32, i32* %gid_len, align 4
  %25 = sext i32 %24 to i64
  %26 = load i8*, i8** %groupname, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

; <label>:31                                      ; preds = %23
  %32 = load i8*, i8** %groupname, align 8
  %33 = call i32 @safe_atoi(i8* %32)
  store i32 %33, i32* %gid, align 4
  br label %45

; <label>:34                                      ; preds = %23
  %35 = call i8* @gettext(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str172, i32 0, i32 0))
  %36 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %37 = load i8*, i8** %groupname, align 8
  %38 = call i8* @quotearg_n_style(i32 0, i32 %36, i8* %37)
  %39 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %40 = load i8*, i8** %groupname, align 8
  %41 = load i32, i32* %gid_len, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = call i8* @quotearg_n_style(i32 1, i32 %39, i8* %43)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %35, i8* %38, i8* %44)
  store i1 false, i1* %1
  br label %77

; <label>:45                                      ; preds = %31
  br label %58

; <label>:46                                      ; preds = %17
  %47 = load i8*, i8** %groupname, align 8
  %48 = load i8, i8* %47, align 1
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %50, label %55

; <label>:50                                      ; preds = %46
  %51 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str173, i32 0, i32 0))
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %53 = load i8*, i8** %groupname, align 8
  %54 = call i8* @quotearg_n_style(i32 0, i32 %52, i8* %53)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %51, i8* %54)
  br label %57

; <label>:55                                      ; preds = %46
  %56 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str174, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %56)
  br label %57

; <label>:57                                      ; preds = %55, %50
  store i1 false, i1* %1
  br label %77

; <label>:58                                      ; preds = %45
  br label %59

; <label>:59                                      ; preds = %58, %13
  %60 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %61 = call %struct.predicate* @insert_primary(%struct.parser_table* %60)
  store %struct.predicate* %61, %struct.predicate** %our_pred, align 8
  %62 = load i32, i32* %gid, align 4
  %63 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %64 = getelementptr inbounds %struct.predicate, %struct.predicate* %63, i32 0, i32 13
  %65 = bitcast %union.anon* %64 to i32*
  store i32 %62, i32* %65, align 4
  %66 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %67 = getelementptr inbounds %struct.predicate, %struct.predicate* %66, i32 0, i32 13
  %68 = bitcast %union.anon* %67 to %struct.long_val*
  %69 = getelementptr inbounds %struct.long_val, %struct.long_val* %68, i32 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %70, 100
  %72 = select i1 %71, double 9.900000e-01, double 2.000000e-01
  %73 = fptrunc double %72 to float
  %74 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %75 = getelementptr inbounds %struct.predicate, %struct.predicate* %74, i32 0, i32 9
  store float %73, float* %75, align 4
  store i1 true, i1* %1
  br label %77

; <label>:76                                      ; preds = %0
  store i1 false, i1* %1
  br label %77

; <label>:77                                      ; preds = %76, %59, %57, %34
  %78 = load i1, i1* %1
  ret i1 %78
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_ignore_race(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 6), align 1
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_noop(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_ilname(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %name = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %name)
  br i1 %7, label %8, label %22

; <label>:8                                       ; preds = %0
  %9 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %10 = call %struct.predicate* @insert_primary(%struct.parser_table* %9)
  store %struct.predicate* %10, %struct.predicate** %our_pred, align 8
  %11 = load i8*, i8** %name, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to i8**
  store i8* %11, i8** %14, align 8
  %15 = load i8*, i8** %name, align 8
  %16 = call float @estimate_pattern_match_rate(i8* %15, i32 0)
  %17 = fpext float %16 to double
  %18 = fmul double 1.000000e-01, %17
  %19 = fptrunc double %18 to float
  %20 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 9
  store float %19, float* %21, align 4
  store i1 true, i1* %1
  br label %23

; <label>:22                                      ; preds = %0
  store i1 false, i1* %1
  br label %23

; <label>:23                                      ; preds = %22, %8
  %24 = load i1, i1* %1
  ret i1 %24
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_iname(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %name = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = call zeroext i1 @fnmatch_sanitycheck()
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call zeroext i1 @collect_arg(i8** %6, i32* %7, i8** %name)
  br i1 %8, label %9, label %28

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %name, align 8
  %11 = call zeroext i1 @check_name_arg(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str171, i32 0, i32 0), i8* %10)
  br i1 %11, label %12, label %27

; <label>:12                                      ; preds = %9
  %13 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %14 = call %struct.predicate* @insert_primary(%struct.parser_table* %13)
  store %struct.predicate* %14, %struct.predicate** %our_pred, align 8
  %15 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 7
  store i8 0, i8* %16, align 1
  %17 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 6
  store i8 0, i8* %18, align 1
  %19 = load i8*, i8** %name, align 8
  %20 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 13
  %22 = bitcast %union.anon* %21 to i8**
  store i8* %19, i8** %22, align 8
  %23 = load i8*, i8** %name, align 8
  %24 = call float @estimate_pattern_match_rate(i8* %23, i32 0)
  %25 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %26 = getelementptr inbounds %struct.predicate, %struct.predicate* %25, i32 0, i32 9
  store float %24, float* %26, align 4
  store i1 true, i1* %1
  br label %29

; <label>:27                                      ; preds = %9
  br label %28

; <label>:28                                      ; preds = %27, %0
  store i1 false, i1* %1
  br label %29

; <label>:29                                      ; preds = %28, %12
  %30 = load i1, i1* %1
  ret i1 %30
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_inum(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %p = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %8 = call %struct.predicate* @insert_num(i8** %5, i32* %6, %struct.parser_table* %7)
  store %struct.predicate* %8, %struct.predicate** %p, align 8
  %9 = load %struct.predicate*, %struct.predicate** %p, align 8
  %10 = icmp ne %struct.predicate* %9, null
  br i1 %10, label %11, label %14

; <label>:11                                      ; preds = %0
  %12 = load %struct.predicate*, %struct.predicate** %p, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 9
  store float 0x3EB0C6F7A0000000, float* %13, align 4
  store i1 true, i1* %1
  br label %15

; <label>:14                                      ; preds = %0
  store i1 false, i1* %1
  br label %15

; <label>:15                                      ; preds = %14, %11
  %16 = load i1, i1* %1
  ret i1 %16
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_ipath(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %name = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = call zeroext i1 @fnmatch_sanitycheck()
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call zeroext i1 @collect_arg(i8** %6, i32* %7, i8** %name)
  br i1 %8, label %9, label %24

; <label>:9                                       ; preds = %0
  %10 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %11 = call %struct.predicate* @insert_primary_withpred(%struct.parser_table* %10, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ipath to i1 (i8*, %struct.stat*, %struct.predicate*)*))
  store %struct.predicate* %11, %struct.predicate** %our_pred, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 6
  store i8 0, i8* %15, align 1
  %16 = load i8*, i8** %name, align 8
  %17 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 13
  %19 = bitcast %union.anon* %18 to i8**
  store i8* %16, i8** %19, align 8
  %20 = load i8*, i8** %name, align 8
  %21 = call float @estimate_pattern_match_rate(i8* %20, i32 0)
  %22 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %23 = getelementptr inbounds %struct.predicate, %struct.predicate* %22, i32 0, i32 9
  store float %21, float* %23, align 4
  store i1 true, i1* %1
  br label %25

; <label>:24                                      ; preds = %0
  store i1 false, i1* %1
  br label %25

; <label>:25                                      ; preds = %24, %9
  %26 = load i1, i1* %1
  ret i1 %26
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_iregex(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 18), align 4
  %8 = sext i32 %7 to i64
  %9 = or i64 4194304, %8
  %10 = trunc i64 %9 to i32
  %11 = call zeroext i1 @insert_regex(i8** %4, i32* %5, %struct.parser_table* %6, i32 %10)
  ret i1 %11
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_iwholename(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_ipath(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_links(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %p = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %8 = call %struct.predicate* @insert_num(i8** %5, i32* %6, %struct.parser_table* %7)
  store %struct.predicate* %8, %struct.predicate** %p, align 8
  %9 = load %struct.predicate*, %struct.predicate** %p, align 8
  %10 = icmp ne %struct.predicate* %9, null
  br i1 %10, label %11, label %36

; <label>:11                                      ; preds = %0
  %12 = load %struct.predicate*, %struct.predicate** %p, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to %struct.long_val*
  %15 = getelementptr inbounds %struct.long_val, %struct.long_val* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 1
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %11
  %19 = load %struct.predicate*, %struct.predicate** %p, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 9
  store float 0x3FEFAE1480000000, float* %20, align 4
  br label %35

; <label>:21                                      ; preds = %11
  %22 = load %struct.predicate*, %struct.predicate** %p, align 8
  %23 = getelementptr inbounds %struct.predicate, %struct.predicate* %22, i32 0, i32 13
  %24 = bitcast %union.anon* %23 to %struct.long_val*
  %25 = getelementptr inbounds %struct.long_val, %struct.long_val* %24, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 2
  br i1 %27, label %28, label %31

; <label>:28                                      ; preds = %21
  %29 = load %struct.predicate*, %struct.predicate** %p, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 9
  store float 0x3F847AE140000000, float* %30, align 4
  br label %34

; <label>:31                                      ; preds = %21
  %32 = load %struct.predicate*, %struct.predicate** %p, align 8
  %33 = getelementptr inbounds %struct.predicate, %struct.predicate* %32, i32 0, i32 9
  store float 0x3F50624DE0000000, float* %33, align 4
  br label %34

; <label>:34                                      ; preds = %31, %28
  br label %35

; <label>:35                                      ; preds = %34, %18
  store i1 true, i1* %1
  br label %37

; <label>:36                                      ; preds = %0
  store i1 false, i1* %1
  br label %37

; <label>:37                                      ; preds = %36, %35
  %38 = load i1, i1* %1
  ret i1 %38
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_lname(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %name = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = call zeroext i1 @fnmatch_sanitycheck()
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call zeroext i1 @collect_arg(i8** %6, i32* %7, i8** %name)
  br i1 %8, label %9, label %23

; <label>:9                                       ; preds = %0
  %10 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %11 = call %struct.predicate* @insert_primary(%struct.parser_table* %10)
  store %struct.predicate* %11, %struct.predicate** %our_pred, align 8
  %12 = load i8*, i8** %name, align 8
  %13 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 13
  %15 = bitcast %union.anon* %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = load i8*, i8** %name, align 8
  %17 = call float @estimate_pattern_match_rate(i8* %16, i32 0)
  %18 = fpext float %17 to double
  %19 = fmul double 1.000000e-01, %18
  %20 = fptrunc double %19 to float
  %21 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 9
  store float %20, float* %22, align 4
  store i1 true, i1* %1
  br label %24

; <label>:23                                      ; preds = %0
  store i1 false, i1* %1
  br label %24

; <label>:24                                      ; preds = %23, %9
  %25 = load i1, i1* %1
  ret i1 %25
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_ls(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call zeroext i1 @insert_fls(%struct.parser_table* %4, i8* null)
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_maxdepth(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @insert_depthspec(%struct.parser_table* %4, i8** %5, i32* %6, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 2))
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_mindepth(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @insert_depthspec(%struct.parser_table* %4, i8** %5, i32* %6, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 3))
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_mmin(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @do_parse_xmin(%struct.parser_table* %4, i8** %5, i32* %6, i32 3)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_xdev(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 5), align 1
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_noop(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_name(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %name = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %name)
  br i1 %7, label %8, label %28

; <label>:8                                       ; preds = %0
  %9 = call zeroext i1 @fnmatch_sanitycheck()
  %10 = load i8*, i8** %name, align 8
  %11 = call zeroext i1 @check_name_arg(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str164, i32 0, i32 0), i8* %10)
  br i1 %11, label %12, label %27

; <label>:12                                      ; preds = %8
  %13 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %14 = call %struct.predicate* @insert_primary(%struct.parser_table* %13)
  store %struct.predicate* %14, %struct.predicate** %our_pred, align 8
  %15 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 7
  store i8 0, i8* %16, align 1
  %17 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 6
  store i8 0, i8* %18, align 1
  %19 = load i8*, i8** %name, align 8
  %20 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 13
  %22 = bitcast %union.anon* %21 to i8**
  store i8* %19, i8** %22, align 8
  %23 = load i8*, i8** %name, align 8
  %24 = call float @estimate_pattern_match_rate(i8* %23, i32 0)
  %25 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %26 = getelementptr inbounds %struct.predicate, %struct.predicate* %25, i32 0, i32 9
  store float %24, float* %26, align 4
  store i1 true, i1* %1
  br label %29

; <label>:27                                      ; preds = %8
  br label %28

; <label>:28                                      ; preds = %27, %0
  store i1 false, i1* %1
  br label %29

; <label>:29                                      ; preds = %28, %12
  %30 = load i1, i1* %1
  ret i1 %30
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_newer(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %stat_newer = alloca %struct.stat, align 8
  %5 = alloca %struct.timespec, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  call void @set_stat_placeholders(%struct.stat* %stat_newer)
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call zeroext i1 @collect_arg_stat_info(i8** %6, i32* %7, %struct.stat* %stat_newer)
  br i1 %8, label %9, label %38

; <label>:9                                       ; preds = %0
  %10 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %11 = call %struct.predicate* @insert_primary(%struct.parser_table* %10)
  store %struct.predicate* %11, %struct.predicate** %our_pred, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to %struct.time_val*
  %15 = getelementptr inbounds %struct.time_val, %struct.time_val* %14, i32 0, i32 2
  %16 = call { i64, i64 } @get_stat_mtime417(%struct.stat* %stat_newer)
  %17 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %18 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  %19 = extractvalue { i64, i64 } %16, 0
  store i64 %19, i64* %18, align 1
  %20 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %21 = extractvalue { i64, i64 } %16, 1
  store i64 %21, i64* %20, align 1
  %22 = bitcast %struct.timespec* %15 to i8*
  %23 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %25 = getelementptr inbounds %struct.predicate, %struct.predicate* %24, i32 0, i32 13
  %26 = bitcast %union.anon* %25 to %struct.time_val*
  %27 = getelementptr inbounds %struct.time_val, %struct.time_val* %26, i32 0, i32 0
  store i32 3, i32* %27, align 4
  %28 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %29 = getelementptr inbounds %struct.predicate, %struct.predicate* %28, i32 0, i32 13
  %30 = bitcast %union.anon* %29 to %struct.time_val*
  %31 = getelementptr inbounds %struct.time_val, %struct.time_val* %30, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %stat_newer, i32 0, i32 12
  %33 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = call float @estimate_timestamp_success_rate(i64 %34)
  %36 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %37 = getelementptr inbounds %struct.predicate, %struct.predicate* %36, i32 0, i32 9
  store float %35, float* %37, align 4
  store i1 true, i1* %1
  br label %39

; <label>:38                                      ; preds = %0
  store i1 false, i1* %1
  br label %39

; <label>:39                                      ; preds = %38, %9
  %40 = load i1, i1* %1
  ret i1 %40
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_noleaf(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 4), align 1
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_noop(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_nogroup(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call %struct.predicate* @insert_primary(%struct.parser_table* %4)
  store %struct.predicate* %5, %struct.predicate** %our_pred, align 8
  %6 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %7 = getelementptr inbounds %struct.predicate, %struct.predicate* %6, i32 0, i32 9
  store float 0x3F1A36E2E0000000, float* %7, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_nouser(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 9
  store float 0x3F50624DE0000000, float* %9, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_noignore_race(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store i8 0, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 6), align 1
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_noop(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_nowarn(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store i8 0, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 8), align 1
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_noop(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_or(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @get_new_pred(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 0
  store i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_or to i1 (i8*, %struct.stat*, %struct.predicate*)*), i1 (i8*, %struct.stat*, %struct.predicate*)** %9, align 8
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 2
  store i32 3, i32* %11, align 4
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 3
  store i32 2, i32* %13, align 4
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 7
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 6
  store i8 0, i8* %17, align 1
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_ok(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call i32 @get_start_dirfd()
  %6 = load i8**, i8*** %2, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = call zeroext i1 @insert_exec_ok(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str163, i32 0, i32 0), %struct.parser_table* %4, i32 %5, i8** %6, i32* %7)
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_okdir(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @insert_exec_ok(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str154, i32 0, i32 0), %struct.parser_table* %4, i32 -1, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_path(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %name = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %name)
  br i1 %7, label %8, label %23

; <label>:8                                       ; preds = %0
  %9 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %10 = call %struct.predicate* @insert_primary_withpred(%struct.parser_table* %9, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_path to i1 (i8*, %struct.stat*, %struct.predicate*)*))
  store %struct.predicate* %10, %struct.predicate** %our_pred, align 8
  %11 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %12 = getelementptr inbounds %struct.predicate, %struct.predicate* %11, i32 0, i32 7
  store i8 0, i8* %12, align 1
  %13 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 6
  store i8 0, i8* %14, align 1
  %15 = load i8*, i8** %name, align 8
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 13
  %18 = bitcast %union.anon* %17 to i8**
  store i8* %15, i8** %18, align 8
  %19 = load i8*, i8** %name, align 8
  %20 = call float @estimate_pattern_match_rate(i8* %19, i32 0)
  %21 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 9
  store float %20, float* %22, align 4
  store i1 true, i1* %1
  br label %24

; <label>:23                                      ; preds = %0
  store i1 false, i1* %1
  br label %24

; <label>:24                                      ; preds = %23, %8
  %25 = load i1, i1* %1
  ret i1 %25
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_perm(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %perm_val = alloca [2 x i32], align 4
  %rate = alloca float, align 4
  %mode_start = alloca i32, align 4
  %havekind = alloca i8, align 1
  %kind = alloca i32, align 4
  %change = alloca %struct.mode_change*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %perm_expr = alloca i8*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  store i32 0, i32* %mode_start, align 4
  store i8 0, i8* %havekind, align 1
  store i32 2, i32* %kind, align 4
  store %struct.mode_change* null, %struct.mode_change** %change, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %perm_expr)
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  store i1 false, i1* %1
  br label %111

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %perm_expr, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  switch i32 %13, label %26 [
    i32 45, label %14
    i32 43, label %15
    i32 47, label %24
  ]

; <label>:14                                      ; preds = %9
  store i32 1, i32* %mode_start, align 4
  store i32 0, i32* %kind, align 4
  store i8 1, i8* %havekind, align 1
  store float 0x3FC99999A0000000, float* %rate, align 4
  br label %27

; <label>:15                                      ; preds = %9
  %16 = load i8*, i8** %perm_expr, align 8
  %17 = call %struct.mode_change* @mode_compile(i8* %16)
  store %struct.mode_change* %17, %struct.mode_change** %change, align 8
  %18 = load %struct.mode_change*, %struct.mode_change** %change, align 8
  %19 = icmp eq %struct.mode_change* null, %18
  br i1 %19, label %20, label %22

; <label>:20                                      ; preds = %15
  %21 = load i8*, i8** %perm_expr, align 8
  call void @non_posix_mode(i8* %21)
  store i32 1, i32* %mode_start, align 4
  store i32 1, i32* %kind, align 4
  store float 0x3FD3333340000000, float* %rate, align 4
  br label %23

; <label>:22                                      ; preds = %15
  store i32 0, i32* %mode_start, align 4
  store i32 2, i32* %kind, align 4
  store float 0x3FB99999A0000000, float* %rate, align 4
  br label %23

; <label>:23                                      ; preds = %22, %20
  store i8 1, i8* %havekind, align 1
  br label %27

; <label>:24                                      ; preds = %9
  %25 = load i8*, i8** %perm_expr, align 8
  call void @non_posix_mode(i8* %25)
  store i32 1, i32* %mode_start, align 4
  store i32 1, i32* %kind, align 4
  store i8 1, i8* %havekind, align 1
  store float 0x3FD3333340000000, float* %rate, align 4
  br label %27

; <label>:26                                      ; preds = %9
  store i32 0, i32* %mode_start, align 4
  store i32 2, i32* %kind, align 4
  store i8 1, i8* %havekind, align 1
  store float 0x3F847AE140000000, float* %rate, align 4
  br label %27

; <label>:27                                      ; preds = %26, %24, %23, %14
  %28 = load %struct.mode_change*, %struct.mode_change** %change, align 8
  %29 = icmp eq %struct.mode_change* null, %28
  br i1 %29, label %30, label %44

; <label>:30                                      ; preds = %27
  %31 = load i8*, i8** %perm_expr, align 8
  %32 = load i32, i32* %mode_start, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = call %struct.mode_change* @mode_compile(i8* %34)
  store %struct.mode_change* %35, %struct.mode_change** %change, align 8
  %36 = load %struct.mode_change*, %struct.mode_change** %change, align 8
  %37 = icmp eq %struct.mode_change* null, %36
  br i1 %37, label %38, label %43

; <label>:38                                      ; preds = %30
  %39 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str151, i32 0, i32 0))
  %40 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %41 = load i8*, i8** %perm_expr, align 8
  %42 = call i8* @quotearg_n_style(i32 0, i32 %40, i8* %41)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %39, i8* %42)
  br label %43

; <label>:43                                      ; preds = %38, %30
  br label %44

; <label>:44                                      ; preds = %43, %27
  %45 = load %struct.mode_change*, %struct.mode_change** %change, align 8
  %46 = call i32 @mode_adjust(i32 0, i1 zeroext false, i32 0, %struct.mode_change* %45, i32* null)
  %47 = getelementptr inbounds [2 x i32], [2 x i32]* %perm_val, i32 0, i64 0
  store i32 %46, i32* %47, align 4
  %48 = load %struct.mode_change*, %struct.mode_change** %change, align 8
  %49 = call i32 @mode_adjust(i32 0, i1 zeroext true, i32 0, %struct.mode_change* %48, i32* null)
  %50 = getelementptr inbounds [2 x i32], [2 x i32]* %perm_val, i32 0, i64 1
  store i32 %49, i32* %50, align 4
  %51 = load %struct.mode_change*, %struct.mode_change** %change, align 8
  %52 = bitcast %struct.mode_change* %51 to i8*
  call void @free(i8* %52) #9
  %53 = load i8*, i8** %perm_expr, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 47, %56
  br i1 %57, label %58, label %69

; <label>:58                                      ; preds = %44
  %59 = getelementptr inbounds [2 x i32], [2 x i32]* %perm_val, i32 0, i64 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 0, %60
  br i1 %61, label %62, label %69

; <label>:62                                      ; preds = %58
  %63 = getelementptr inbounds [2 x i32], [2 x i32]* %perm_val, i32 0, i64 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 0, %64
  br i1 %65, label %66, label %69

; <label>:66                                      ; preds = %62
  %67 = call i8* @gettext(i8* getelementptr inbounds ([226 x i8], [226 x i8]* @.str152, i32 0, i32 0))
  %68 = load i8*, i8** %perm_expr, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %67, i8* %68)
  store i32 0, i32* %kind, align 4
  store i8 1, i8* %havekind, align 1
  store float 0x3FEFF48800000000, float* %rate, align 4
  br label %69

; <label>:69                                      ; preds = %66, %62, %58, %44
  %70 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %71 = call %struct.predicate* @insert_primary(%struct.parser_table* %70)
  store %struct.predicate* %71, %struct.predicate** %our_pred, align 8
  %72 = load float, float* %rate, align 4
  %73 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %74 = getelementptr inbounds %struct.predicate, %struct.predicate* %73, i32 0, i32 9
  store float %72, float* %74, align 4
  %75 = load i8, i8* %havekind, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %83

; <label>:77                                      ; preds = %69
  %78 = load i32, i32* %kind, align 4
  %79 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %80 = getelementptr inbounds %struct.predicate, %struct.predicate* %79, i32 0, i32 13
  %81 = bitcast %union.anon* %80 to %struct.perm_val*
  %82 = getelementptr inbounds %struct.perm_val, %struct.perm_val* %81, i32 0, i32 0
  store i32 %78, i32* %82, align 4
  br label %104

; <label>:83                                      ; preds = %69
  %84 = load i8*, i8** %perm_expr, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 0
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  switch i32 %87, label %98 [
    i32 45, label %88
    i32 43, label %93
  ]

; <label>:88                                      ; preds = %83
  %89 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %90 = getelementptr inbounds %struct.predicate, %struct.predicate* %89, i32 0, i32 13
  %91 = bitcast %union.anon* %90 to %struct.perm_val*
  %92 = getelementptr inbounds %struct.perm_val, %struct.perm_val* %91, i32 0, i32 0
  store i32 0, i32* %92, align 4
  br label %103

; <label>:93                                      ; preds = %83
  %94 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %95 = getelementptr inbounds %struct.predicate, %struct.predicate* %94, i32 0, i32 13
  %96 = bitcast %union.anon* %95 to %struct.perm_val*
  %97 = getelementptr inbounds %struct.perm_val, %struct.perm_val* %96, i32 0, i32 0
  store i32 1, i32* %97, align 4
  br label %103

; <label>:98                                      ; preds = %83
  %99 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %100 = getelementptr inbounds %struct.predicate, %struct.predicate* %99, i32 0, i32 13
  %101 = bitcast %union.anon* %100 to %struct.perm_val*
  %102 = getelementptr inbounds %struct.perm_val, %struct.perm_val* %101, i32 0, i32 0
  store i32 2, i32* %102, align 4
  br label %103

; <label>:103                                     ; preds = %98, %93, %88
  br label %104

; <label>:104                                     ; preds = %103, %77
  %105 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %106 = getelementptr inbounds %struct.predicate, %struct.predicate* %105, i32 0, i32 13
  %107 = bitcast %union.anon* %106 to %struct.perm_val*
  %108 = getelementptr inbounds %struct.perm_val, %struct.perm_val* %107, i32 0, i32 1
  %109 = bitcast [2 x i32]* %108 to i8*
  %110 = bitcast [2 x i32]* %perm_val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 8, i32 4, i1 false)
  store i1 true, i1* %1
  br label %111

; <label>:111                                     ; preds = %104, %8
  %112 = load i1, i1* %1
  ret i1 %112
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_print0(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call zeroext i1 @insert_fprint(%struct.parser_table* %4, i8* null)
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_printf(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %format = alloca i8*, align 8
  %fmt = alloca %struct.format_val, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %format)
  br i1 %7, label %8, label %12

; <label>:8                                       ; preds = %0
  call void @open_stdout(%struct.format_val* %fmt)
  %9 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %10 = load i8*, i8** %format, align 8
  %11 = call zeroext i1 @insert_fprintf(%struct.format_val* %fmt, %struct.parser_table* %9, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_fprintf to i1 (i8*, %struct.stat*, %struct.predicate*)*), i8* %10)
  store i1 %11, i1* %1
  br label %13

; <label>:12                                      ; preds = %0
  store i1 false, i1* %1
  br label %13

; <label>:13                                      ; preds = %12, %8
  %14 = load i1, i1* %1
  ret i1 %14
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_prune(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 7
  store i8 0, i8* %9, align 1
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 4
  store i8 1, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 5
  store i8 0, i8* %15, align 1
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_quit(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call %struct.predicate* @insert_primary(%struct.parser_table* %4)
  store %struct.predicate* %5, %struct.predicate** %our_pred, align 8
  %6 = load i8**, i8*** %2, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 7
  store i8 0, i8* %9, align 1
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 4
  store i8 1, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 5
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 9
  store float 1.000000e+00, float* %17, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_regex(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 18), align 4
  %8 = call zeroext i1 @insert_regex(i8** %4, i32* %5, %struct.parser_table* %6, i32 %7)
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_regextype(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %type_name = alloca i8*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %type_name)
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %type_name, align 8
  %10 = call i32 @get_regex_type(i8* %9)
  store i32 %10, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 18), align 4
  %11 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %12 = load i8**, i8*** %3, align 8
  %13 = load i32*, i32** %4, align 8
  %14 = call zeroext i1 @parse_noop(%struct.parser_table* %11, i8** %12, i32* %13)
  store i1 %14, i1* %1
  br label %16

; <label>:15                                      ; preds = %0
  store i1 false, i1* %1
  br label %16

; <label>:16                                      ; preds = %15, %8
  %17 = load i1, i1* %1
  ret i1 %17
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_samefile(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %st = alloca %struct.stat, align 8
  %fst = alloca %struct.stat, align 8
  %fd = alloca i32, align 4
  %openflags = alloca i32, align 4
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  call void @set_stat_placeholders(%struct.stat* %st)
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg_stat_info(i8** %5, i32* %6, %struct.stat* %st)
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  store i1 false, i1* %1
  br label %140

; <label>:9                                       ; preds = %0
  call void @set_stat_placeholders(%struct.stat* %fst)
  store i32 -3, i32* %fd, align 4
  store i32 0, i32* %openflags, align 4
  %10 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 15), align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %27

; <label>:12                                      ; preds = %9
  %13 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 17), align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  %16 = load i32, i32* %openflags, align 4
  %17 = or i32 %16, 131072
  store i32 %17, i32* %openflags, align 4
  store i32 -1, i32* %fd, align 4
  br label %26

; <label>:18                                      ; preds = %12
  %19 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 61440
  %22 = icmp eq i32 %21, 40960
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %18
  store i32 -2, i32* %fd, align 4
  br label %25

; <label>:24                                      ; preds = %18
  store i32 -1, i32* %fd, align 4
  br label %25

; <label>:25                                      ; preds = %24, %23
  br label %26

; <label>:26                                      ; preds = %25, %15
  br label %28

; <label>:27                                      ; preds = %9
  store i32 -1, i32* %fd, align 4
  br label %28

; <label>:28                                      ; preds = %27, %26
  %29 = load i32, i32* %fd, align 4
  %30 = icmp ne i32 %29, -3
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %28
  br label %34

; <label>:32                                      ; preds = %28
  call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str138, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 2212, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__.parse_samefile, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %34

; <label>:34                                      ; preds = %33, %31
  %35 = load i32, i32* %fd, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %114

; <label>:37                                      ; preds = %34
  %38 = load i32*, i32** %4, align 8
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = load i8**, i8*** %3, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 %40
  %43 = load i8*, i8** %42, align 8
  %44 = load i32, i32* %openflags, align 4
  %45 = call i32 (i8*, i32, ...) @open(i8* %43, i32 %44)
  store i32 %45, i32* %fd, align 4
  %46 = load i32, i32* %fd, align 4
  %47 = icmp sge i32 %46, 0
  br i1 %47, label %48, label %113

; <label>:48                                      ; preds = %37
  %49 = load i32, i32* %fd, align 4
  %50 = call i32 @fstat(i32 %49, %struct.stat* %fst) #9
  %51 = icmp ne i32 0, %50
  br i1 %51, label %52, label %59

; <label>:52                                      ; preds = %48
  %53 = load i32*, i32** %4, align 8
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = load i8**, i8*** %3, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 %55
  %58 = load i8*, i8** %57, align 8
  call void @fatal_file_error(i8* %58) #15
  unreachable

; <label>:59                                      ; preds = %48
  %60 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  %61 = load i32*, i32** %4, align 8
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = load i8**, i8*** %3, align 8
  %65 = getelementptr inbounds i8*, i8** %64, i64 %63
  %66 = load i8*, i8** %65, align 8
  %67 = call i32 %60(i8* %66, %struct.stat* %st)
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %76

; <label>:69                                      ; preds = %59
  %70 = load i32*, i32** %4, align 8
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = load i8**, i8*** %3, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 %72
  %75 = load i8*, i8** %74, align 8
  call void @fatal_file_error(i8* %75) #15
  unreachable

; <label>:76                                      ; preds = %59
  %77 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 15), align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %108

; <label>:79                                      ; preds = %76
  %80 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 17), align 1
  %81 = trunc i8 %80 to i1
  br i1 %81, label %108, label %82

; <label>:82                                      ; preds = %79
  %83 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 61440
  %86 = icmp eq i32 %85, 40960
  br i1 %86, label %87, label %90

; <label>:87                                      ; preds = %82
  %88 = load i32, i32* %fd, align 4
  %89 = call i32 @close(i32 %88)
  store i32 -1, i32* %fd, align 4
  br label %107

; <label>:90                                      ; preds = %82
  %91 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %struct.stat, %struct.stat* %fst, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %92, %94
  br i1 %95, label %96, label %103

; <label>:96                                      ; preds = %90
  %97 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %struct.stat, %struct.stat* %fst, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %98, %100
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %96
  br label %106

; <label>:103                                     ; preds = %96, %90
  %104 = load i32, i32* %fd, align 4
  %105 = call i32 @close(i32 %104)
  store i32 -1, i32* %fd, align 4
  br label %106

; <label>:106                                     ; preds = %103, %102
  br label %107

; <label>:107                                     ; preds = %106, %87
  br label %111

; <label>:108                                     ; preds = %79, %76
  %109 = bitcast %struct.stat* %st to i8*
  %110 = bitcast %struct.stat* %fst to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 144, i32 8, i1 false)
  br label %111

; <label>:111                                     ; preds = %108, %107
  br label %112

; <label>:112                                     ; preds = %111
  br label %113

; <label>:113                                     ; preds = %112, %37
  br label %114

; <label>:114                                     ; preds = %113, %34
  %115 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %116 = call %struct.predicate* @insert_primary(%struct.parser_table* %115)
  store %struct.predicate* %116, %struct.predicate** %our_pred, align 8
  %117 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %120 = getelementptr inbounds %struct.predicate, %struct.predicate* %119, i32 0, i32 13
  %121 = bitcast %union.anon* %120 to %struct.samefile_file_id*
  %122 = getelementptr inbounds %struct.samefile_file_id, %struct.samefile_file_id* %121, i32 0, i32 0
  store i64 %118, i64* %122, align 8
  %123 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %126 = getelementptr inbounds %struct.predicate, %struct.predicate* %125, i32 0, i32 13
  %127 = bitcast %union.anon* %126 to %struct.samefile_file_id*
  %128 = getelementptr inbounds %struct.samefile_file_id, %struct.samefile_file_id* %127, i32 0, i32 1
  store i64 %124, i64* %128, align 8
  %129 = load i32, i32* %fd, align 4
  %130 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %131 = getelementptr inbounds %struct.predicate, %struct.predicate* %130, i32 0, i32 13
  %132 = bitcast %union.anon* %131 to %struct.samefile_file_id*
  %133 = getelementptr inbounds %struct.samefile_file_id, %struct.samefile_file_id* %132, i32 0, i32 2
  store i32 %129, i32* %133, align 4
  %134 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %135 = getelementptr inbounds %struct.predicate, %struct.predicate* %134, i32 0, i32 7
  store i8 0, i8* %135, align 1
  %136 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %137 = getelementptr inbounds %struct.predicate, %struct.predicate* %136, i32 0, i32 6
  store i8 1, i8* %137, align 1
  %138 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %139 = getelementptr inbounds %struct.predicate, %struct.predicate* %138, i32 0, i32 9
  store float 0x3F847AE140000000, float* %139, align 4
  store i1 true, i1* %1
  br label %140

; <label>:140                                     ; preds = %114, %8
  %141 = load i1, i1* %1
  ret i1 %141
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_size(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %num = alloca i64, align 8
  %suffix = alloca i8, align 1
  %c_type = alloca i32, align 4
  %blksize = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  store i32 512, i32* %blksize, align 4
  %5 = load i8**, i8*** %3, align 8
  %6 = icmp eq i8** %5, null
  br i1 %6, label %15, label %7

; <label>:7                                       ; preds = %0
  %8 = load i32*, i32** %4, align 8
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = load i8**, i8*** %3, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 %10
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %7, %0
  store i1 false, i1* %1
  br label %197

; <label>:16                                      ; preds = %7
  %17 = load i32*, i32** %4, align 8
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = load i8**, i8*** %3, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = call i64 @strlen(i8* %22) #14
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %len, align 4
  %25 = load i32, i32* %len, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

; <label>:27                                      ; preds = %16
  %28 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str135, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %28)
  br label %29

; <label>:29                                      ; preds = %27, %16
  %30 = load i32, i32* %len, align 4
  %31 = sub nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = load i32*, i32** %4, align 8
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = load i8**, i8*** %3, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 %35
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %32
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %suffix, align 1
  %41 = load i8, i8* %suffix, align 1
  %42 = sext i8 %41 to i32
  switch i32 %42, label %110 [
    i32 98, label %43
    i32 99, label %54
    i32 107, label %65
    i32 77, label %76
    i32 71, label %87
    i32 119, label %98
    i32 48, label %109
    i32 49, label %109
    i32 50, label %109
    i32 51, label %109
    i32 52, label %109
    i32 53, label %109
    i32 54, label %109
    i32 55, label %109
    i32 56, label %109
    i32 57, label %109
  ]

; <label>:43                                      ; preds = %29
  store i32 512, i32* %blksize, align 4
  %44 = load i32, i32* %len, align 4
  %45 = sub nsw i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = load i32*, i32** %4, align 8
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = load i8**, i8*** %3, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 %49
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %46
  store i8 0, i8* %53, align 1
  br label %124

; <label>:54                                      ; preds = %29
  store i32 1, i32* %blksize, align 4
  %55 = load i32, i32* %len, align 4
  %56 = sub nsw i32 %55, 1
  %57 = sext i32 %56 to i64
  %58 = load i32*, i32** %4, align 8
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = load i8**, i8*** %3, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 %60
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %57
  store i8 0, i8* %64, align 1
  br label %124

; <label>:65                                      ; preds = %29
  store i32 1024, i32* %blksize, align 4
  %66 = load i32, i32* %len, align 4
  %67 = sub nsw i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = load i32*, i32** %4, align 8
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = load i8**, i8*** %3, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 %71
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %68
  store i8 0, i8* %75, align 1
  br label %124

; <label>:76                                      ; preds = %29
  store i32 1048576, i32* %blksize, align 4
  %77 = load i32, i32* %len, align 4
  %78 = sub nsw i32 %77, 1
  %79 = sext i32 %78 to i64
  %80 = load i32*, i32** %4, align 8
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = load i8**, i8*** %3, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 %82
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 %79
  store i8 0, i8* %86, align 1
  br label %124

; <label>:87                                      ; preds = %29
  store i32 1073741824, i32* %blksize, align 4
  %88 = load i32, i32* %len, align 4
  %89 = sub nsw i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = load i32*, i32** %4, align 8
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = load i8**, i8*** %3, align 8
  %95 = getelementptr inbounds i8*, i8** %94, i64 %93
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %90
  store i8 0, i8* %97, align 1
  br label %124

; <label>:98                                      ; preds = %29
  store i32 2, i32* %blksize, align 4
  %99 = load i32, i32* %len, align 4
  %100 = sub nsw i32 %99, 1
  %101 = sext i32 %100 to i64
  %102 = load i32*, i32** %4, align 8
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = load i8**, i8*** %3, align 8
  %106 = getelementptr inbounds i8*, i8** %105, i64 %104
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 %101
  store i8 0, i8* %108, align 1
  br label %124

; <label>:109                                     ; preds = %29, %29, %29, %29, %29, %29, %29, %29, %29, %29
  br label %124

; <label>:110                                     ; preds = %29
  %111 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str136, i32 0, i32 0))
  %112 = load i32, i32* %len, align 4
  %113 = sub nsw i32 %112, 1
  %114 = sext i32 %113 to i64
  %115 = load i32*, i32** %4, align 8
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = load i8**, i8*** %3, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i64 %117
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 %114
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %111, i32 %123)
  br label %124

; <label>:124                                     ; preds = %110, %109, %98, %87, %76, %65, %54, %43
  %125 = load i32*, i32** %4, align 8
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = load i8**, i8*** %3, align 8
  %129 = getelementptr inbounds i8*, i8** %128, i64 %127
  %130 = load i8*, i8** %129, align 8
  %131 = call zeroext i1 @get_num(i8* %130, i64* %num, i32* %c_type)
  br i1 %131, label %142, label %132

; <label>:132                                     ; preds = %124
  %133 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str137, i32 0, i32 0))
  %134 = load i32*, i32** %4, align 8
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %135 to i64
  %137 = load i8**, i8*** %3, align 8
  %138 = getelementptr inbounds i8*, i8** %137, i64 %136
  %139 = load i8*, i8** %138, align 8
  %140 = load i8, i8* %suffix, align 1
  %141 = sext i8 %140 to i32
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %133, i8* %139, i32 %141)
  store i1 false, i1* %1
  br label %197

; <label>:142                                     ; preds = %124
  %143 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %144 = call %struct.predicate* @insert_primary(%struct.parser_table* %143)
  store %struct.predicate* %144, %struct.predicate** %our_pred, align 8
  %145 = load i32, i32* %c_type, align 4
  %146 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %147 = getelementptr inbounds %struct.predicate, %struct.predicate* %146, i32 0, i32 13
  %148 = bitcast %union.anon* %147 to %struct.size_val*
  %149 = getelementptr inbounds %struct.size_val, %struct.size_val* %148, i32 0, i32 0
  store i32 %145, i32* %149, align 4
  %150 = load i32, i32* %blksize, align 4
  %151 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %152 = getelementptr inbounds %struct.predicate, %struct.predicate* %151, i32 0, i32 13
  %153 = bitcast %union.anon* %152 to %struct.size_val*
  %154 = getelementptr inbounds %struct.size_val, %struct.size_val* %153, i32 0, i32 1
  store i32 %150, i32* %154, align 4
  %155 = load i64, i64* %num, align 8
  %156 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %157 = getelementptr inbounds %struct.predicate, %struct.predicate* %156, i32 0, i32 13
  %158 = bitcast %union.anon* %157 to %struct.size_val*
  %159 = getelementptr inbounds %struct.size_val, %struct.size_val* %158, i32 0, i32 2
  store i64 %155, i64* %159, align 8
  %160 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %161 = getelementptr inbounds %struct.predicate, %struct.predicate* %160, i32 0, i32 6
  store i8 1, i8* %161, align 1
  %162 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %163 = getelementptr inbounds %struct.predicate, %struct.predicate* %162, i32 0, i32 7
  store i8 0, i8* %163, align 1
  %164 = load i32, i32* %c_type, align 4
  %165 = icmp eq i32 0, %164
  br i1 %165, label %166, label %176

; <label>:166                                     ; preds = %142
  %167 = load i64, i64* %num, align 8
  %168 = load i32, i32* %blksize, align 4
  %169 = sext i32 %168 to i64
  %170 = mul i64 %167, %169
  %171 = icmp ugt i64 %170, 20480
  %172 = select i1 %171, double 1.000000e-01, double 9.000000e-01
  %173 = fptrunc double %172 to float
  %174 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %175 = getelementptr inbounds %struct.predicate, %struct.predicate* %174, i32 0, i32 9
  store float %173, float* %175, align 4
  br label %193

; <label>:176                                     ; preds = %142
  %177 = load i32, i32* %c_type, align 4
  %178 = icmp eq i32 1, %177
  br i1 %178, label %179, label %189

; <label>:179                                     ; preds = %176
  %180 = load i64, i64* %num, align 8
  %181 = load i32, i32* %blksize, align 4
  %182 = sext i32 %181 to i64
  %183 = mul i64 %180, %182
  %184 = icmp ugt i64 %183, 20480
  %185 = select i1 %184, double 9.000000e-01, double 1.000000e-01
  %186 = fptrunc double %185 to float
  %187 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %188 = getelementptr inbounds %struct.predicate, %struct.predicate* %187, i32 0, i32 9
  store float %186, float* %188, align 4
  br label %192

; <label>:189                                     ; preds = %176
  %190 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %191 = getelementptr inbounds %struct.predicate, %struct.predicate* %190, i32 0, i32 9
  store float 0x3F847AE140000000, float* %191, align 4
  br label %192

; <label>:192                                     ; preds = %189, %179
  br label %193

; <label>:193                                     ; preds = %192, %166
  %194 = load i32*, i32** %4, align 8
  %195 = load i32, i32* %194, align 4
  %196 = add nsw i32 %195, 1
  store i32 %196, i32* %194, align 4
  store i1 true, i1* %1
  br label %197

; <label>:197                                     ; preds = %193, %132, %15
  %198 = load i1, i1* %1
  ret i1 %198
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_type(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call zeroext i1 @insert_type(i8** %4, i32* %5, %struct.parser_table* %6, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_type to i1 (i8*, %struct.stat*, %struct.predicate*)*))
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_uid(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %p = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %8 = call %struct.predicate* @insert_num(i8** %5, i32* %6, %struct.parser_table* %7)
  store %struct.predicate* %8, %struct.predicate** %p, align 8
  %9 = load %struct.predicate*, %struct.predicate** %p, align 8
  %10 = icmp ne %struct.predicate* %9, null
  br i1 %10, label %11, label %22

; <label>:11                                      ; preds = %0
  %12 = load %struct.predicate*, %struct.predicate** %p, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 13
  %14 = bitcast %union.anon* %13 to %struct.long_val*
  %15 = getelementptr inbounds %struct.long_val, %struct.long_val* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 100
  %18 = select i1 %17, double 9.900000e-01, double 2.000000e-01
  %19 = fptrunc double %18 to float
  %20 = load %struct.predicate*, %struct.predicate** %p, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 9
  store float %19, float* %21, align 4
  store i1 true, i1* %1
  br label %23

; <label>:22                                      ; preds = %0
  store i1 false, i1* %1
  br label %23

; <label>:23                                      ; preds = %22, %11
  %24 = load i1, i1* %1
  ret i1 %24
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_used(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %tval = alloca %struct.time_val, align 8
  %offset_str = alloca i8*, align 8
  %errmsg = alloca i8*, align 8
  %zero = alloca %struct.timespec, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str119, i32 0, i32 0), i8** %errmsg, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %offset_str)
  br i1 %7, label %8, label %37

; <label>:8                                       ; preds = %0
  %9 = bitcast %struct.timespec* %zero to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 16, i32 8, i1 false)
  %10 = load i8*, i8** %offset_str, align 8
  %11 = load i8*, i8** %errmsg, align 8
  %12 = bitcast %struct.timespec* %zero to { i64, i64 }*
  %13 = getelementptr { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %14 = load i64, i64* %13, align 1
  %15 = getelementptr { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %16 = load i64, i64* %15, align 1
  %17 = call zeroext i1 @get_relative_timestamp(i8* %10, %struct.time_val* %tval, i64 %14, i64 %16, double 8.640000e+04, i8* %11)
  br i1 %17, label %18, label %34

; <label>:18                                      ; preds = %8
  %19 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %20 = call %struct.predicate* @insert_primary(%struct.parser_table* %19)
  store %struct.predicate* %20, %struct.predicate** %our_pred, align 8
  %21 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 13
  %23 = bitcast %union.anon* %22 to %struct.time_val*
  %24 = bitcast %struct.time_val* %23 to i8*
  %25 = bitcast %struct.time_val* %tval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 24, i32 8, i1 false)
  %26 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 2
  %27 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = sdiv i64 %28, 86400
  %30 = sitofp i64 %29 to float
  %31 = call float @estimate_file_age_success_rate(float %30)
  %32 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %33 = getelementptr inbounds %struct.predicate, %struct.predicate* %32, i32 0, i32 9
  store float %31, float* %33, align 4
  store i1 true, i1* %1
  br label %38

; <label>:34                                      ; preds = %8
  %35 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str120, i32 0, i32 0))
  %36 = load i8*, i8** %offset_str, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %35, i8* %36)
  store i1 false, i1* %1
  br label %38

; <label>:37                                      ; preds = %0
  store i1 false, i1* %1
  br label %38

; <label>:38                                      ; preds = %37, %34, %18
  %39 = load i1, i1* %1
  ret i1 %39
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_user(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %username = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %uid = alloca i32, align 4
  %cur_pwd = alloca %struct.passwd*, align 8
  %uid_len = alloca i64, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %username)
  br i1 %7, label %8, label %62

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %username, align 8
  %10 = call %struct.passwd* @getpwnam(i8* %9)
  store %struct.passwd* %10, %struct.passwd** %cur_pwd, align 8
  call void @endpwent()
  %11 = load %struct.passwd*, %struct.passwd** %cur_pwd, align 8
  %12 = icmp ne %struct.passwd* %11, null
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %8
  %14 = load %struct.passwd*, %struct.passwd** %cur_pwd, align 8
  %15 = getelementptr inbounds %struct.passwd, %struct.passwd* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %uid, align 4
  br label %46

; <label>:17                                      ; preds = %8
  %18 = load i8*, i8** %username, align 8
  %19 = call i64 @strspn(i8* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str113, i32 0, i32 0)) #14
  store i64 %19, i64* %uid_len, align 8
  %20 = load i64, i64* %uid_len, align 8
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %32

; <label>:22                                      ; preds = %17
  %23 = load i64, i64* %uid_len, align 8
  %24 = load i8*, i8** %username, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %32

; <label>:29                                      ; preds = %22
  %30 = load i8*, i8** %username, align 8
  %31 = call i32 @safe_atoi(i8* %30)
  store i32 %31, i32* %uid, align 4
  br label %45

; <label>:32                                      ; preds = %22, %17
  %33 = load i8*, i8** %username, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp ne i8 %35, 0
  br i1 %36, label %37, label %42

; <label>:37                                      ; preds = %32
  %38 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str114, i32 0, i32 0))
  %39 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %40 = load i8*, i8** %username, align 8
  %41 = call i8* @quotearg_n_style(i32 0, i32 %39, i8* %40)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %38, i8* %41)
  br label %44

; <label>:42                                      ; preds = %32
  %43 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str115, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %43)
  br label %44

; <label>:44                                      ; preds = %42, %37
  store i1 false, i1* %1
  br label %63

; <label>:45                                      ; preds = %29
  br label %46

; <label>:46                                      ; preds = %45, %13
  %47 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %48 = call %struct.predicate* @insert_primary(%struct.parser_table* %47)
  store %struct.predicate* %48, %struct.predicate** %our_pred, align 8
  %49 = load i32, i32* %uid, align 4
  %50 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %51 = getelementptr inbounds %struct.predicate, %struct.predicate* %50, i32 0, i32 13
  %52 = bitcast %union.anon* %51 to i32*
  store i32 %49, i32* %52, align 4
  %53 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 13
  %55 = bitcast %union.anon* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %56, 100
  %58 = select i1 %57, double 9.900000e-01, double 2.000000e-01
  %59 = fptrunc double %58 to float
  %60 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %61 = getelementptr inbounds %struct.predicate, %struct.predicate* %60, i32 0, i32 9
  store float %59, float* %61, align 4
  store i1 true, i1* %1
  br label %63

; <label>:62                                      ; preds = %0
  store i1 false, i1* %1
  br label %63

; <label>:63                                      ; preds = %62, %46, %44
  %64 = load i1, i1* %1
  ret i1 %64
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_warn(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store i8 1, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 8), align 1
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_noop(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_wholename(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @parse_path(%struct.parser_table* %4, i8** %5, i32* %6)
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_xtype(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call zeroext i1 @insert_type(i8** %4, i32* %5, %struct.parser_table* %6, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_xtype to i1 (i8*, %struct.stat*, %struct.predicate*)*))
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_false(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 7
  store i8 0, i8* %9, align 1
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 5
  store i8 0, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %17 = getelementptr inbounds %struct.predicate, %struct.predicate* %16, i32 0, i32 9
  store float 0.000000e+00, float* %17, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_true(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load i8**, i8*** %2, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %7 = call %struct.predicate* @insert_primary(%struct.parser_table* %6)
  store %struct.predicate* %7, %struct.predicate** %our_pred, align 8
  %8 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %9 = getelementptr inbounds %struct.predicate, %struct.predicate* %8, i32 0, i32 7
  store i8 0, i8* %9, align 1
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 9
  store float 1.000000e+00, float* %13, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_help(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  %5 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @usage(%struct._IO_FILE* %8, i32 0, i8* null)
  %9 = call i8* @gettext(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str104395, i32 0, i32 0))
  %10 = call i32 @puts(i8* %9)
  %11 = call i8* @gettext(i8* getelementptr inbounds ([207 x i8], [207 x i8]* @.str105396, i32 0, i32 0))
  %12 = call i32 @puts(i8* %11)
  %13 = call i8* @gettext(i8* getelementptr inbounds ([266 x i8], [266 x i8]* @.str106397, i32 0, i32 0))
  %14 = call i32 @puts(i8* %13)
  %15 = call i8* @gettext(i8* getelementptr inbounds ([298 x i8], [298 x i8]* @.str107398, i32 0, i32 0))
  %16 = call i32 @puts(i8* %15)
  %17 = call i8* @gettext(i8* getelementptr inbounds ([219 x i8], [219 x i8]* @.str108399, i32 0, i32 0))
  %18 = call i32 @puts(i8* %17)
  %19 = call i8* @gettext(i8* getelementptr inbounds ([249 x i8], [249 x i8]* @.str109, i32 0, i32 0))
  %20 = call i32 @puts(i8* %19)
  %21 = call i8* @gettext(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @.str110, i32 0, i32 0))
  %22 = call i32 @puts(i8* %21)
  call void @exit(i32 0) #12
  unreachable
                                                  ; No predecessors!
  %24 = load i1, i1* %1
  ret i1 %24
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_version(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %features = alloca i32, align 4
  %flags = alloca i32, align 4
  %nflags = alloca i32, align 4
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  store i32 0, i32* %features, align 4
  %5 = load i8**, i8*** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  call void @display_findutils_version(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str91382, i32 0, i32 0))
  %8 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str92383, i32 0, i32 0))
  %9 = call i32 (i8*, ...) @printf(i8* %8)
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str93384, i32 0, i32 0))
  %11 = load i32, i32* %features, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %features, align 4
  %13 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 17), align 1
  %14 = trunc i8 %13 to i1
  %15 = select i1 %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str95386, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str96387, i32 0, i32 0)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str94385, i32 0, i32 0), i8* %15)
  %17 = load i32, i32* %features, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %features, align 4
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str97388, i32 0, i32 0))
  %20 = load i32, i32* %features, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %features, align 4
  store i32 0, i32* %flags, align 4
  %22 = call zeroext i1 @is_fts_enabled(i32* %flags)
  br i1 %22, label %23, label %41

; <label>:23                                      ; preds = %0
  store i32 0, i32* %nflags, align 4
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str98389, i32 0, i32 0))
  %25 = load i32, i32* %features, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %features, align 4
  %27 = load i32, i32* %flags, align 4
  %28 = and i32 %27, 512
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %39

; <label>:30                                      ; preds = %23
  %31 = load i32, i32* %nflags, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %35

; <label>:33                                      ; preds = %30
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str12303, i32 0, i32 0))
  br label %35

; <label>:35                                      ; preds = %33, %30
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str99390, i32 0, i32 0))
  %37 = load i32, i32* %nflags, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %nflags, align 4
  br label %39

; <label>:39                                      ; preds = %35, %23
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str100391, i32 0, i32 0))
  br label %41

; <label>:41                                      ; preds = %39, %0
  %42 = load i16, i16* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 19), align 2
  %43 = zext i16 %42 to i32
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str101392, i32 0, i32 0), i32 %43)
  %45 = load i32, i32* %features, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %features, align 4
  %47 = load i32, i32* %features, align 4
  %48 = icmp eq i32 0, %47
  br i1 %48, label %49, label %51

; <label>:49                                      ; preds = %41
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str102393, i32 0, i32 0))
  br label %51

; <label>:51                                      ; preds = %49, %41
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str103394, i32 0, i32 0))
  call void @exit(i32 0) #12
  unreachable
                                                  ; No predecessors!
  %54 = load i1, i1* %1
  ret i1 %54
}

; Function Attrs: nounwind uwtable
define internal void @open_stdout(%struct.format_val* %p) #0 {
  %1 = alloca %struct.format_val*, align 8
  store %struct.format_val* %p, %struct.format_val** %1, align 8
  %2 = load %struct.format_val*, %struct.format_val** %1, align 8
  call void @open_output_file(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str3294, i32 0, i32 0), %struct.format_val* %2)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @open_output_file(i8* %path, %struct.format_val* %p) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.format_val*, align 8
  store i8* %path, i8** %1, align 8
  store %struct.format_val* %p, %struct.format_val** %2, align 8
  %3 = load %struct.format_val*, %struct.format_val** %2, align 8
  %4 = getelementptr inbounds %struct.format_val, %struct.format_val* %3, i32 0, i32 0
  store %struct.segment* null, %struct.segment** %4, align 8
  %5 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null)
  %6 = load %struct.format_val*, %struct.format_val** %2, align 8
  %7 = getelementptr inbounds %struct.format_val, %struct.format_val* %6, i32 0, i32 4
  store %struct.quoting_options* %5, %struct.quoting_options** %7, align 8
  %8 = load i8*, i8** %1, align 8
  %9 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str4295, i32 0, i32 0)) #14
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %18, label %11

; <label>:11                                      ; preds = %0
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = load %struct.format_val*, %struct.format_val** %2, align 8
  %14 = getelementptr inbounds %struct.format_val, %struct.format_val* %13, i32 0, i32 1
  store %struct._IO_FILE* %12, %struct._IO_FILE** %14, align 8
  %15 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str5296, i32 0, i32 0))
  %16 = load %struct.format_val*, %struct.format_val** %2, align 8
  %17 = getelementptr inbounds %struct.format_val, %struct.format_val* %16, i32 0, i32 2
  store i8* %15, i8** %17, align 8
  br label %45

; <label>:18                                      ; preds = %0
  %19 = load i8*, i8** %1, align 8
  %20 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str3294, i32 0, i32 0)) #14
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %29, label %22

; <label>:22                                      ; preds = %18
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %24 = load %struct.format_val*, %struct.format_val** %2, align 8
  %25 = getelementptr inbounds %struct.format_val, %struct.format_val* %24, i32 0, i32 1
  store %struct._IO_FILE* %23, %struct._IO_FILE** %25, align 8
  %26 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str6297, i32 0, i32 0))
  %27 = load %struct.format_val*, %struct.format_val** %2, align 8
  %28 = getelementptr inbounds %struct.format_val, %struct.format_val* %27, i32 0, i32 2
  store i8* %26, i8** %28, align 8
  br label %44

; <label>:29                                      ; preds = %18
  %30 = load i8*, i8** %1, align 8
  %31 = call %struct._IO_FILE* @fopen_safer(i8* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str7298, i32 0, i32 0))
  %32 = load %struct.format_val*, %struct.format_val** %2, align 8
  %33 = getelementptr inbounds %struct.format_val, %struct.format_val* %32, i32 0, i32 1
  store %struct._IO_FILE* %31, %struct._IO_FILE** %33, align 8
  %34 = load i8*, i8** %1, align 8
  %35 = load %struct.format_val*, %struct.format_val** %2, align 8
  %36 = getelementptr inbounds %struct.format_val, %struct.format_val* %35, i32 0, i32 2
  store i8* %34, i8** %36, align 8
  %37 = load %struct.format_val*, %struct.format_val** %2, align 8
  %38 = getelementptr inbounds %struct.format_val, %struct.format_val* %37, i32 0, i32 1
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %38, align 8
  %40 = icmp eq %struct._IO_FILE* %39, null
  br i1 %40, label %41, label %43

; <label>:41                                      ; preds = %29
  %42 = load i8*, i8** %1, align 8
  call void @fatal_file_error(i8* %42) #15
  unreachable

; <label>:43                                      ; preds = %29
  br label %44

; <label>:44                                      ; preds = %43, %22
  br label %45

; <label>:45                                      ; preds = %44, %11
  %46 = load %struct.format_val*, %struct.format_val** %2, align 8
  %47 = getelementptr inbounds %struct.format_val, %struct.format_val* %46, i32 0, i32 1
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %47, align 8
  %49 = call zeroext i1 @stream_is_tty(%struct._IO_FILE* %48)
  %50 = load %struct.format_val*, %struct.format_val** %2, align 8
  %51 = getelementptr inbounds %struct.format_val, %struct.format_val* %50, i32 0, i32 3
  %52 = zext i1 %49 to i8
  store i8 %52, i8* %51, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @stream_is_tty(%struct._IO_FILE* %fp) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct._IO_FILE*, align 8
  %fd = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = call i32 @fileno(%struct._IO_FILE* %3) #9
  store i32 %4, i32* %fd, align 4
  %5 = load i32, i32* %fd, align 4
  %6 = icmp eq i32 -1, %5
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i1 false, i1* %1
  br label %14

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %fd, align 4
  %10 = call i32 @isatty(i32 %9) #9
  %11 = icmp ne i32 %10, 0
  %12 = select i1 %11, i32 1, i32 0
  %13 = icmp ne i32 %12, 0
  store i1 %13, i1* %1
  br label %14

; <label>:14                                      ; preds = %8, %7
  %15 = load i1, i1* %1
  ret i1 %15
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insert_type(i8** %argv, i32* %arg_ptr, %struct.parser_table* %entry, i1 (i8*, %struct.stat*, %struct.predicate*)* %which_pred) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %struct.parser_table*, align 8
  %5 = alloca i1 (i8*, %struct.stat*, %struct.predicate*)*, align 8
  %type_cell = alloca i32, align 4
  %our_pred = alloca %struct.predicate*, align 8
  %rate = alloca float, align 4
  %typeletter = alloca i8*, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %4, align 8
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %which_pred, i1 (i8*, %struct.stat*, %struct.predicate*)** %5, align 8
  store float 5.000000e-01, float* %rate, align 4
  %6 = load i8**, i8*** %2, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = call zeroext i1 @collect_arg(i8** %6, i32* %7, i8** %typeletter)
  br i1 %8, label %9, label %56

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %typeletter, align 8
  %11 = call i64 @strlen(i8* %10) #14
  %12 = icmp ne i64 %11, 1
  br i1 %12, label %13, label %15

; <label>:13                                      ; preds = %9
  %14 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str111, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %14)
  store i1 false, i1* %1
  br label %57

; <label>:15                                      ; preds = %9
  %16 = load i8*, i8** %typeletter, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  switch i32 %19, label %27 [
    i32 98, label %20
    i32 99, label %21
    i32 100, label %22
    i32 102, label %23
    i32 108, label %24
    i32 112, label %25
    i32 115, label %26
  ]

; <label>:20                                      ; preds = %15
  store i32 24576, i32* %type_cell, align 4
  store float 0x3F847AE140000000, float* %rate, align 4
  br label %32

; <label>:21                                      ; preds = %15
  store i32 8192, i32* %type_cell, align 4
  store float 0x3F847AE140000000, float* %rate, align 4
  br label %32

; <label>:22                                      ; preds = %15
  store i32 16384, i32* %type_cell, align 4
  store float 0x3FD99999A0000000, float* %rate, align 4
  br label %32

; <label>:23                                      ; preds = %15
  store i32 32768, i32* %type_cell, align 4
  store float 0x3FEE666660000000, float* %rate, align 4
  br label %32

; <label>:24                                      ; preds = %15
  store i32 40960, i32* %type_cell, align 4
  store float 0x3FB99999A0000000, float* %rate, align 4
  br label %32

; <label>:25                                      ; preds = %15
  store i32 4096, i32* %type_cell, align 4
  store float 0x3F847AE140000000, float* %rate, align 4
  br label %32

; <label>:26                                      ; preds = %15
  store i32 49152, i32* %type_cell, align 4
  store float 0x3F847AE140000000, float* %rate, align 4
  br label %32

; <label>:27                                      ; preds = %15
  %28 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str112, i32 0, i32 0))
  %29 = load i8*, i8** %typeletter, align 8
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %28, i32 %31)
  store i1 false, i1* %1
  br label %57

; <label>:32                                      ; preds = %26, %25, %24, %23, %22, %21, %20
  %33 = load %struct.parser_table*, %struct.parser_table** %4, align 8
  %34 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %5, align 8
  %35 = call %struct.predicate* @insert_primary_withpred(%struct.parser_table* %33, i1 (i8*, %struct.stat*, %struct.predicate*)* %34)
  store %struct.predicate* %35, %struct.predicate** %our_pred, align 8
  %36 = load float, float* %rate, align 4
  %37 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %38 = getelementptr inbounds %struct.predicate, %struct.predicate* %37, i32 0, i32 9
  store float %36, float* %38, align 4
  %39 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %5, align 8
  %40 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %39, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_xtype to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %40, label %41, label %46

; <label>:41                                      ; preds = %32
  %42 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %43 = getelementptr inbounds %struct.predicate, %struct.predicate* %42, i32 0, i32 6
  store i8 1, i8* %43, align 1
  %44 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %45 = getelementptr inbounds %struct.predicate, %struct.predicate* %44, i32 0, i32 7
  store i8 0, i8* %45, align 1
  br label %51

; <label>:46                                      ; preds = %32
  %47 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %48 = getelementptr inbounds %struct.predicate, %struct.predicate* %47, i32 0, i32 6
  store i8 0, i8* %48, align 1
  %49 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %50 = getelementptr inbounds %struct.predicate, %struct.predicate* %49, i32 0, i32 7
  store i8 1, i8* %50, align 1
  br label %51

; <label>:51                                      ; preds = %46, %41
  %52 = load i32, i32* %type_cell, align 4
  %53 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 13
  %55 = bitcast %union.anon* %54 to i32*
  store i32 %52, i32* %55, align 4
  store i1 true, i1* %1
  br label %57

; <label>:56                                      ; preds = %0
  store i1 false, i1* %1
  br label %57

; <label>:57                                      ; preds = %56, %51, %27, %13
  %58 = load i1, i1* %1
  ret i1 %58
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @collect_arg(i8** %argv, i32* %arg_ptr, i8** %collected_arg) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i8**, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store i8** %collected_arg, i8*** %4, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = icmp eq i8** %5, null
  br i1 %6, label %15, label %7

; <label>:7                                       ; preds = %0
  %8 = load i32*, i32** %3, align 8
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = load i8**, i8*** %2, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 %10
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %7, %0
  %16 = load i8**, i8*** %4, align 8
  store i8* null, i8** %16, align 8
  store i1 false, i1* %1
  br label %28

; <label>:17                                      ; preds = %7
  %18 = load i32*, i32** %3, align 8
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = load i8**, i8*** %2, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 %20
  %23 = load i8*, i8** %22, align 8
  %24 = load i8**, i8*** %4, align 8
  store i8* %23, i8** %24, align 8
  %25 = load i32*, i32** %3, align 8
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 4
  store i1 true, i1* %1
  br label %28

; <label>:28                                      ; preds = %17, %15
  %29 = load i1, i1* %1
  ret i1 %29
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @parse_noop(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  %4 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %5 = call %struct.parser_table* @get_noop()
  %6 = load i8**, i8*** %2, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = call zeroext i1 @parse_true(%struct.parser_table* %5, i8** %6, i32* %7)
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define internal %struct.parser_table* @get_noop() #0 {
  %i = alloca i32, align 4
  %1 = load %struct.parser_table*, %struct.parser_table** @noop, align 8
  %2 = icmp eq %struct.parser_table* null, %1
  br i1 %2, label %3, label %27

; <label>:3                                       ; preds = %0
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %23, %3
  %5 = load i32, i32* %i, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [85 x %struct.parser_table], [85 x %struct.parser_table]* @parse_table, i32 0, i64 %6
  %8 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %7, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %26

; <label>:11                                      ; preds = %4
  %12 = load i32, i32* %i, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [85 x %struct.parser_table], [85 x %struct.parser_table]* @parse_table, i32 0, i64 %13
  %15 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 1, %16
  br i1 %17, label %18, label %22

; <label>:18                                      ; preds = %11
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [85 x %struct.parser_table], [85 x %struct.parser_table]* @parse_table, i32 0, i64 %20
  store %struct.parser_table* %21, %struct.parser_table** @noop, align 8
  br label %26

; <label>:22                                      ; preds = %11
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i32, i32* %i, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %i, align 4
  br label %4

; <label>:26                                      ; preds = %18, %4
  br label %27

; <label>:27                                      ; preds = %26, %0
  %28 = load %struct.parser_table*, %struct.parser_table** @noop, align 8
  ret %struct.parser_table* %28
}

; Function Attrs: nounwind uwtable
define internal i32 @safe_atoi(i8* %s) #0 {
  %1 = alloca i8*, align 8
  %lval = alloca i64, align 8
  %end = alloca i8*, align 8
  store i8* %s, i8** %1, align 8
  %2 = call i32* @__errno_location() #13
  store i32 0, i32* %2, align 4
  %3 = load i8*, i8** %1, align 8
  %4 = call i64 @strtol(i8* %3, i8** %end, i32 10) #9
  store i64 %4, i64* %lval, align 8
  %5 = load i64, i64* %lval, align 8
  %6 = icmp eq i64 9223372036854775807, %5
  br i1 %6, label %10, label %7

; <label>:7                                       ; preds = %0
  %8 = load i64, i64* %lval, align 8
  %9 = icmp eq i64 -9223372036854775808, %8
  br i1 %9, label %10, label %23

; <label>:10                                      ; preds = %7, %0
  %11 = call i32* @__errno_location() #13
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 34
  br i1 %13, label %14, label %18

; <label>:14                                      ; preds = %10
  %15 = call i32* @__errno_location() #13
  %16 = load i32, i32* %15, align 4
  %17 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str116, i32 0, i32 0), i8* %17)
  br label %22

; <label>:18                                      ; preds = %10
  %19 = call i32* @__errno_location() #13
  %20 = load i32, i32* %19, align 4
  %21 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str116, i32 0, i32 0), i8* %21)
  br label %22

; <label>:22                                      ; preds = %18, %14
  br label %23

; <label>:23                                      ; preds = %22, %7
  %24 = load i64, i64* %lval, align 8
  %25 = icmp sgt i64 %24, 2147483647
  br i1 %25, label %29, label %26

; <label>:26                                      ; preds = %23
  %27 = load i64, i64* %lval, align 8
  %28 = icmp slt i64 %27, -2147483648
  br i1 %28, label %29, label %34

; <label>:29                                      ; preds = %26, %23
  %30 = call i32* @__errno_location() #13
  store i32 34, i32* %30, align 4
  %31 = call i32* @__errno_location() #13
  %32 = load i32, i32* %31, align 4
  %33 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str116, i32 0, i32 0), i8* %33)
  br label %59

; <label>:34                                      ; preds = %26
  %35 = load i8*, i8** %end, align 8
  %36 = load i8, i8* %35, align 1
  %37 = icmp ne i8 %36, 0
  br i1 %37, label %38, label %47

; <label>:38                                      ; preds = %34
  %39 = call i32* @__errno_location() #13
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %42 = load i8*, i8** %end, align 8
  %43 = call i8* @quotearg_n_style(i32 0, i32 %41, i8* %42)
  %44 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %45 = load i8*, i8** %1, align 8
  %46 = call i8* @quotearg_n_style(i32 1, i32 %44, i8* %45)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %40, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str117, i32 0, i32 0), i8* %43, i8* %46)
  br label %58

; <label>:47                                      ; preds = %34
  %48 = load i8*, i8** %end, align 8
  %49 = load i8*, i8** %1, align 8
  %50 = icmp eq i8* %48, %49
  br i1 %50, label %51, label %57

; <label>:51                                      ; preds = %47
  %52 = call i32* @__errno_location() #13
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %55 = load i8*, i8** %1, align 8
  %56 = call i8* @quotearg_n_style(i32 0, i32 %54, i8* %55)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %53, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str118, i32 0, i32 0), i8* %56)
  br label %57

; <label>:57                                      ; preds = %51, %47
  br label %58

; <label>:58                                      ; preds = %57, %38
  br label %59

; <label>:59                                      ; preds = %58, %29
  %60 = load i64, i64* %lval, align 8
  %61 = trunc i64 %60 to i32
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define internal float @estimate_file_age_success_rate(float %num_days) #0 {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  store float %num_days, float* %2, align 4
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  %5 = fcmp olt double %4, 1.000000e-01
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  store float 0x3F847AE140000000, float* %1
  br label %16

; <label>:7                                       ; preds = %0
  %8 = load float, float* %2, align 4
  %9 = fcmp olt float %8, 1.000000e+00
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %7
  store float 0x3FD3333340000000, float* %1
  br label %16

; <label>:11                                      ; preds = %7
  %12 = load float, float* %2, align 4
  %13 = fcmp ogt float %12, 1.000000e+02
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %11
  store float 0x3FD3333340000000, float* %1
  br label %16

; <label>:15                                      ; preds = %11
  store float 0x3FD8F5C280000000, float* %1
  br label %16

; <label>:16                                      ; preds = %15, %14, %10, %6
  %17 = load float, float* %1
  ret float %17
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @get_relative_timestamp(i8* %str, %struct.time_val* %result, i64 %origin.coerce0, i64 %origin.coerce1, double %sec_per_unit, i8* %overflowmessage) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.time_val*, align 8
  %origin = alloca %struct.timespec, align 8
  %4 = alloca double, align 8
  %5 = alloca i8*, align 8
  %offset = alloca double, align 8
  %seconds = alloca double, align 8
  %nanosec = alloca double, align 8
  store i8* %str, i8** %2, align 8
  store %struct.time_val* %result, %struct.time_val** %3, align 8
  %6 = bitcast %struct.timespec* %origin to { i64, i64 }*
  %7 = getelementptr { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  store i64 %origin.coerce0, i64* %7
  %8 = getelementptr { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  store i64 %origin.coerce1, i64* %8
  store double %sec_per_unit, double* %4, align 8
  store i8* %overflowmessage, i8** %5, align 8
  %9 = load %struct.time_val*, %struct.time_val** %3, align 8
  %10 = getelementptr inbounds %struct.time_val, %struct.time_val* %9, i32 0, i32 1
  %11 = call zeroext i1 @get_comp_type(i8** %2, i32* %10)
  br i1 %11, label %12, label %91

; <label>:12                                      ; preds = %0
  %13 = load %struct.time_val*, %struct.time_val** %3, align 8
  %14 = getelementptr inbounds %struct.time_val, %struct.time_val* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %22 [
    i32 1, label %16
    i32 0, label %19
  ]

; <label>:16                                      ; preds = %12
  %17 = load %struct.time_val*, %struct.time_val** %3, align 8
  %18 = getelementptr inbounds %struct.time_val, %struct.time_val* %17, i32 0, i32 1
  store i32 0, i32* %18, align 4
  br label %23

; <label>:19                                      ; preds = %12
  %20 = load %struct.time_val*, %struct.time_val** %3, align 8
  %21 = getelementptr inbounds %struct.time_val, %struct.time_val* %20, i32 0, i32 1
  store i32 1, i32* %21, align 4
  br label %23

; <label>:22                                      ; preds = %12
  br label %23

; <label>:23                                      ; preds = %22, %19, %16
  %24 = load i8*, i8** %2, align 8
  %25 = call zeroext i1 @xstrtod(i8* %24, i8** null, double* %offset, double (i8*, i8**)* @strtod)
  br i1 %25, label %26, label %90

; <label>:26                                      ; preds = %23
  %27 = load double, double* %offset, align 8
  %28 = load double, double* %4, align 8
  %29 = fmul double %27, %28
  %30 = call double @modf(double %29, double* %seconds) #9
  store double %30, double* %nanosec, align 8
  %31 = load double, double* %nanosec, align 8
  %32 = fmul double %31, 1.000000e+09
  store double %32, double* %nanosec, align 8
  %33 = load double, double* %nanosec, align 8
  %34 = fcmp olt double %33, 1.000000e+09
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %26
  br label %38

; <label>:36                                      ; preds = %26
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 3284, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__.get_relative_timestamp, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %38

; <label>:38                                      ; preds = %37, %35
  %39 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = sitofp i64 %40 to double
  %42 = load double, double* %seconds, align 8
  %43 = fsub double %41, %42
  %44 = fptosi double %43 to i64
  %45 = load %struct.time_val*, %struct.time_val** %3, align 8
  %46 = getelementptr inbounds %struct.time_val, %struct.time_val* %45, i32 0, i32 2
  %47 = getelementptr inbounds %struct.timespec, %struct.timespec* %46, i32 0, i32 0
  store i64 %44, i64* %47, align 8
  %48 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = load %struct.time_val*, %struct.time_val** %3, align 8
  %51 = getelementptr inbounds %struct.time_val, %struct.time_val* %50, i32 0, i32 2
  %52 = getelementptr inbounds %struct.timespec, %struct.timespec* %51, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp slt i64 %49, %53
  %55 = zext i1 %54 to i32
  %56 = load double, double* %seconds, align 8
  %57 = fcmp olt double %56, 0.000000e+00
  %58 = zext i1 %57 to i32
  %59 = icmp ne i32 %55, %58
  br i1 %59, label %60, label %63

; <label>:60                                      ; preds = %38
  %61 = load i8*, i8** %5, align 8
  %62 = load i8*, i8** %2, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %61, i8* %62)
  br label %63

; <label>:63                                      ; preds = %60, %38
  %64 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = sitofp i64 %65 to double
  %67 = load double, double* %nanosec, align 8
  %68 = fsub double %66, %67
  %69 = fptosi double %68 to i64
  %70 = load %struct.time_val*, %struct.time_val** %3, align 8
  %71 = getelementptr inbounds %struct.time_val, %struct.time_val* %70, i32 0, i32 2
  %72 = getelementptr inbounds %struct.timespec, %struct.timespec* %71, i32 0, i32 1
  store i64 %69, i64* %72, align 8
  %73 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = sitofp i64 %74 to double
  %76 = load double, double* %nanosec, align 8
  %77 = fcmp olt double %75, %76
  br i1 %77, label %78, label %89

; <label>:78                                      ; preds = %63
  %79 = load %struct.time_val*, %struct.time_val** %3, align 8
  %80 = getelementptr inbounds %struct.time_val, %struct.time_val* %79, i32 0, i32 2
  %81 = getelementptr inbounds %struct.timespec, %struct.timespec* %80, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = add nsw i64 %82, 1000000000
  store i64 %83, i64* %81, align 8
  %84 = load %struct.time_val*, %struct.time_val** %3, align 8
  %85 = getelementptr inbounds %struct.time_val, %struct.time_val* %84, i32 0, i32 2
  %86 = getelementptr inbounds %struct.timespec, %struct.timespec* %85, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = sub nsw i64 %87, 1
  store i64 %88, i64* %86, align 8
  br label %89

; <label>:89                                      ; preds = %78, %63
  store i1 true, i1* %1
  br label %92

; <label>:90                                      ; preds = %23
  store i1 false, i1* %1
  br label %92

; <label>:91                                      ; preds = %0
  store i1 false, i1* %1
  br label %92

; <label>:92                                      ; preds = %91, %90, %89
  %93 = load i1, i1* %1
  ret i1 %93
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @get_comp_type(i8** %str, i32* %comp_type) #0 {
  %1 = alloca i8**, align 8
  %2 = alloca i32*, align 8
  store i8** %str, i8*** %1, align 8
  store i32* %comp_type, i32** %2, align 8
  %3 = load i8**, i8*** %1, align 8
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  switch i32 %6, label %17 [
    i32 43, label %7
    i32 45, label %12
  ]

; <label>:7                                       ; preds = %0
  %8 = load i32*, i32** %2, align 8
  store i32 0, i32* %8, align 4
  %9 = load i8**, i8*** %1, align 8
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %11, i8** %9, align 8
  br label %19

; <label>:12                                      ; preds = %0
  %13 = load i32*, i32** %2, align 8
  store i32 1, i32* %13, align 4
  %14 = load i8**, i8*** %1, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %16, i8** %14, align 8
  br label %19

; <label>:17                                      ; preds = %0
  %18 = load i32*, i32** %2, align 8
  store i32 2, i32* %18, align 4
  br label %19

; <label>:19                                      ; preds = %17, %12, %7
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal %struct.predicate* @insert_num(i8** %argv, i32* %arg_ptr, %struct.parser_table* %entry) #0 {
  %1 = alloca %struct.predicate*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %struct.parser_table*, align 8
  %numstr = alloca i8*, align 8
  %num = alloca i64, align 8
  %c_type = alloca i32, align 4
  %our_pred = alloca %struct.predicate*, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %4, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %numstr)
  br i1 %7, label %8, label %75

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %numstr, align 8
  %10 = call zeroext i1 @get_num(i8* %9, i64* %num, i32* %c_type)
  br i1 %10, label %11, label %74

; <label>:11                                      ; preds = %8
  %12 = load %struct.parser_table*, %struct.parser_table** %4, align 8
  %13 = call %struct.predicate* @insert_primary(%struct.parser_table* %12)
  store %struct.predicate* %13, %struct.predicate** %our_pred, align 8
  %14 = load i32, i32* %c_type, align 4
  %15 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %16 = getelementptr inbounds %struct.predicate, %struct.predicate* %15, i32 0, i32 13
  %17 = bitcast %union.anon* %16 to %struct.long_val*
  %18 = getelementptr inbounds %struct.long_val, %struct.long_val* %17, i32 0, i32 0
  store i32 %14, i32* %18, align 4
  %19 = load i64, i64* %num, align 8
  %20 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 13
  %22 = bitcast %union.anon* %21 to %struct.long_val*
  %23 = getelementptr inbounds %struct.long_val, %struct.long_val* %22, i32 0, i32 2
  store i64 %19, i64* %23, align 8
  %24 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 14), align 8
  %25 = and i64 %24, 1
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %72

; <label>:27                                      ; preds = %11
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str123, i32 0, i32 0), i8* %31)
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = load i32, i32* %c_type, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %27
  br label %47

; <label>:37                                      ; preds = %27
  %38 = load i32, i32* %c_type, align 4
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %37
  br label %45

; <label>:41                                      ; preds = %37
  %42 = load i32, i32* %c_type, align 4
  %43 = icmp eq i32 %42, 2
  %44 = select i1 %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str128, i32 0, i32 0)
  br label %45

; <label>:45                                      ; preds = %41, %40
  %46 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str126, i32 0, i32 0), %40 ], [ %44, %41 ]
  br label %47

; <label>:47                                      ; preds = %45, %36
  %48 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str125, i32 0, i32 0), %36 ], [ %46, %45 ]
  %49 = load i32, i32* %c_type, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

; <label>:51                                      ; preds = %47
  br label %62

; <label>:52                                      ; preds = %47
  %53 = load i32, i32* %c_type, align 4
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %56

; <label>:55                                      ; preds = %52
  br label %60

; <label>:56                                      ; preds = %52
  %57 = load i32, i32* %c_type, align 4
  %58 = icmp eq i32 %57, 2
  %59 = select i1 %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str131, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str132, i32 0, i32 0)
  br label %60

; <label>:60                                      ; preds = %56, %55
  %61 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str130, i32 0, i32 0), %55 ], [ %59, %56 ]
  br label %62

; <label>:62                                      ; preds = %60, %51
  %63 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str129, i32 0, i32 0), %51 ], [ %61, %60 ]
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str124, i32 0, i32 0), i8* %48, i8* %63)
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %66 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %67 = getelementptr inbounds %struct.predicate, %struct.predicate* %66, i32 0, i32 13
  %68 = bitcast %union.anon* %67 to %struct.long_val*
  %69 = getelementptr inbounds %struct.long_val, %struct.long_val* %68, i32 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str133, i32 0, i32 0), i64 %70)
  br label %72

; <label>:72                                      ; preds = %62, %11
  %73 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  store %struct.predicate* %73, %struct.predicate** %1
  br label %76

; <label>:74                                      ; preds = %8
  br label %75

; <label>:75                                      ; preds = %74, %0
  store %struct.predicate* null, %struct.predicate** %1
  br label %76

; <label>:76                                      ; preds = %75, %72
  %77 = load %struct.predicate*, %struct.predicate** %1
  ret %struct.predicate* %77
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @get_num(i8* %str, i64* %num, i32* %comp_type) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i32*, align 8
  %pend = alloca i8*, align 8
  store i8* %str, i8** %2, align 8
  store i64* %num, i64** %3, align 8
  store i32* %comp_type, i32** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i1 false, i1* %1
  br label %21

; <label>:8                                       ; preds = %0
  %9 = load i32*, i32** %4, align 8
  %10 = icmp ne i32* %9, null
  br i1 %10, label %11, label %16

; <label>:11                                      ; preds = %8
  %12 = load i32*, i32** %4, align 8
  %13 = call zeroext i1 @get_comp_type(i8** %2, i32* %12)
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %11
  store i1 false, i1* %1
  br label %21

; <label>:15                                      ; preds = %11
  br label %16

; <label>:16                                      ; preds = %15, %8
  %17 = load i8*, i8** %2, align 8
  %18 = load i64*, i64** %3, align 8
  %19 = call i32 @xstrtoumax(i8* %17, i8** %pend, i32 10, i64* %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str134, i32 0, i32 0))
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %1
  br label %21

; <label>:21                                      ; preds = %16, %14, %7
  %22 = load i1, i1* %1
  ret i1 %22
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @collect_arg_stat_info(i8** %argv, i32* %arg_ptr, %struct.stat* %p) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %struct.stat*, align 8
  %filename = alloca i8*, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store %struct.stat* %p, %struct.stat** %4, align 8
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call zeroext i1 @collect_arg(i8** %5, i32* %6, i8** %filename)
  br i1 %7, label %8, label %17

; <label>:8                                       ; preds = %0
  %9 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 16), align 8
  %10 = load i8*, i8** %filename, align 8
  %11 = load %struct.stat*, %struct.stat** %4, align 8
  %12 = call i32 %9(i8* %10, %struct.stat* %11)
  %13 = icmp eq i32 0, %12
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %8
  store i1 true, i1* %1
  br label %18

; <label>:15                                      ; preds = %8
  %16 = load i8*, i8** %filename, align 8
  call void @fatal_file_error(i8* %16) #15
  unreachable

; <label>:17                                      ; preds = %0
  store i1 false, i1* %1
  br label %18

; <label>:18                                      ; preds = %17, %14
  %19 = load i1, i1* %1
  ret i1 %19
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insert_regex(i8** %argv, i32* %arg_ptr, %struct.parser_table* %entry, i32 %regex_options) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8**, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %struct.parser_table*, align 8
  %5 = alloca i32, align 4
  %rx = alloca i8*, align 8
  %re = alloca %struct.re_pattern_buffer*, align 8
  %error_message = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store i8** %argv, i8*** %2, align 8
  store i32* %arg_ptr, i32** %3, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %4, align 8
  store i32 %regex_options, i32* %5, align 4
  %6 = load i8**, i8*** %2, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = call zeroext i1 @collect_arg(i8** %6, i32* %7, i8** %rx)
  br i1 %8, label %9, label %55

; <label>:9                                       ; preds = %0
  %10 = load %struct.parser_table*, %struct.parser_table** %4, align 8
  %11 = call %struct.predicate* @insert_primary_withpred(%struct.parser_table* %10, i1 (i8*, %struct.stat*, %struct.predicate*)* bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_regex to i1 (i8*, %struct.stat*, %struct.predicate*)*))
  store %struct.predicate* %11, %struct.predicate** %our_pred, align 8
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 6
  store i8 0, i8* %15, align 1
  %16 = call noalias i8* @xmalloc(i64 64)
  %17 = bitcast i8* %16 to %struct.re_pattern_buffer*
  store %struct.re_pattern_buffer* %17, %struct.re_pattern_buffer** %re, align 8
  %18 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %19 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 13
  %21 = bitcast %union.anon* %20 to %struct.re_pattern_buffer**
  store %struct.re_pattern_buffer* %18, %struct.re_pattern_buffer** %21, align 8
  %22 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %23 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %22, i32 0, i32 1
  store i64 100, i64* %23, align 8
  %24 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %25 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %24, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = call noalias i8* @xmalloc(i64 %26)
  %28 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %29 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %28, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %31 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %30, i32 0, i32 4
  store i8* null, i8** %31, align 8
  %32 = load i32, i32* %5, align 4
  %33 = sext i32 %32 to i64
  %34 = call i64 @rpl_re_set_syntax(i64 %33)
  %35 = load i32, i32* %5, align 4
  %36 = sext i32 %35 to i64
  %37 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %38 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %37, i32 0, i32 3
  store i64 %36, i64* %38, align 8
  %39 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %40 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %39, i32 0, i32 5
  store i8* null, i8** %40, align 8
  %41 = load i8*, i8** %rx, align 8
  %42 = load i8*, i8** %rx, align 8
  %43 = call i64 @strlen(i8* %42) #14
  %44 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %re, align 8
  %45 = call i8* @rpl_re_compile_pattern(i8* %41, i64 %43, %struct.re_pattern_buffer* %44)
  store i8* %45, i8** %error_message, align 8
  %46 = load i8*, i8** %error_message, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %50

; <label>:48                                      ; preds = %9
  %49 = load i8*, i8** %error_message, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str116, i32 0, i32 0), i8* %49)
  br label %50

; <label>:50                                      ; preds = %48, %9
  %51 = load i8*, i8** %rx, align 8
  %52 = call float @estimate_pattern_match_rate(i8* %51, i32 1)
  %53 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %54 = getelementptr inbounds %struct.predicate, %struct.predicate* %53, i32 0, i32 9
  store float %52, float* %54, align 4
  store i1 true, i1* %1
  br label %56

; <label>:55                                      ; preds = %0
  store i1 false, i1* %1
  br label %56

; <label>:56                                      ; preds = %55, %50
  %57 = load i1, i1* %1
  ret i1 %57
}

; Function Attrs: nounwind uwtable
define internal float @estimate_pattern_match_rate(i8* %pattern, i32 %is_regex) #0 {
  %1 = alloca float, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %pattern, i8** %2, align 8
  store i32 %is_regex, i32* %3, align 4
  %4 = load i8*, i8** %2, align 8
  %5 = call i8* @strpbrk(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str139, i32 0, i32 0)) #14
  %6 = icmp ne i8* %5, null
  br i1 %6, label %14, label %7

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %3, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %15

; <label>:10                                      ; preds = %7
  %11 = load i8*, i8** %2, align 8
  %12 = call i8* @strpbrk(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str140, i32 0, i32 0)) #14
  %13 = icmp ne i8* %12, null
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %10, %0
  store float 0x3FE99999A0000000, float* %1
  br label %16

; <label>:15                                      ; preds = %10, %7
  store float 0x3FB99999A0000000, float* %1
  br label %16

; <label>:16                                      ; preds = %15, %14
  %17 = load float, float* %1
  ret float %17
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insert_fprintf(%struct.format_val* %vec, %struct.parser_table* %entry, i1 (i8*, %struct.stat*, %struct.predicate*)* %func, i8* %format_const) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.format_val*, align 8
  %3 = alloca %struct.parser_table*, align 8
  %4 = alloca i1 (i8*, %struct.stat*, %struct.predicate*)*, align 8
  %5 = alloca i8*, align 8
  %format = alloca i8*, align 8
  %scan = alloca i8*, align 8
  %scan2 = alloca i8*, align 8
  %segmentp = alloca %struct.segment**, align 8
  %our_pred = alloca %struct.predicate*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.format_val* %vec, %struct.format_val** %2, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %3, align 8
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %func, i1 (i8*, %struct.stat*, %struct.predicate*)** %4, align 8
  store i8* %format_const, i8** %5, align 8
  %6 = load i8*, i8** %5, align 8
  store i8* %6, i8** %format, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %3, align 8
  %8 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %4, align 8
  %9 = call %struct.predicate* @insert_primary_withpred(%struct.parser_table* %7, i1 (i8*, %struct.stat*, %struct.predicate*)* %8)
  store %struct.predicate* %9, %struct.predicate** %our_pred, align 8
  %10 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %11 = getelementptr inbounds %struct.predicate, %struct.predicate* %10, i32 0, i32 5
  store i8 1, i8* %11, align 1
  %12 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %13 = getelementptr inbounds %struct.predicate, %struct.predicate* %12, i32 0, i32 4
  store i8 1, i8* %13, align 1
  %14 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %15 = getelementptr inbounds %struct.predicate, %struct.predicate* %14, i32 0, i32 13
  %16 = bitcast %union.anon* %15 to %struct.format_val*
  %17 = load %struct.format_val*, %struct.format_val** %2, align 8
  %18 = bitcast %struct.format_val* %16 to i8*
  %19 = bitcast %struct.format_val* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 40, i32 8, i1 false)
  %20 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %21 = getelementptr inbounds %struct.predicate, %struct.predicate* %20, i32 0, i32 7
  store i8 0, i8* %21, align 1
  %22 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %23 = getelementptr inbounds %struct.predicate, %struct.predicate* %22, i32 0, i32 6
  store i8 0, i8* %23, align 1
  %24 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %25 = getelementptr inbounds %struct.predicate, %struct.predicate* %24, i32 0, i32 8
  store i32 0, i32* %25, align 4
  %26 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %27 = getelementptr inbounds %struct.predicate, %struct.predicate* %26, i32 0, i32 13
  %28 = bitcast %union.anon* %27 to %struct.format_val*
  %29 = getelementptr inbounds %struct.format_val, %struct.format_val* %28, i32 0, i32 0
  store %struct.segment** %29, %struct.segment*** %segmentp, align 8
  %30 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  store %struct.segment* null, %struct.segment** %30, align 8
  %31 = load i8*, i8** %format, align 8
  store i8* %31, i8** %scan, align 8
  br label %32

; <label>:32                                      ; preds = %320, %0
  %33 = load i8*, i8** %scan, align 8
  %34 = load i8, i8* %33, align 1
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %36, label %323

; <label>:36                                      ; preds = %32
  %37 = load i8*, i8** %scan, align 8
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp eq i32 %39, 92
  br i1 %40, label %41, label %152

; <label>:41                                      ; preds = %36
  %42 = load i8*, i8** %scan, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  store i8* %43, i8** %scan2, align 8
  %44 = load i8*, i8** %scan2, align 8
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp sge i32 %46, 48
  br i1 %47, label %48, label %86

; <label>:48                                      ; preds = %41
  %49 = load i8*, i8** %scan2, align 8
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp sle i32 %51, 55
  br i1 %52, label %53, label %86

; <label>:53                                      ; preds = %48
  store i32 0, i32* %n, align 4
  store i32 0, i32* %i, align 4
  br label %54

; <label>:54                                      ; preds = %75, %53
  %55 = load i32, i32* %i, align 4
  %56 = icmp slt i32 %55, 3
  br i1 %56, label %57, label %80

; <label>:57                                      ; preds = %54
  %58 = load i8*, i8** %scan2, align 8
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = icmp sge i32 %60, 48
  br i1 %61, label %62, label %80

; <label>:62                                      ; preds = %57
  %63 = load i8*, i8** %scan2, align 8
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp sle i32 %65, 55
  br i1 %66, label %67, label %80

; <label>:67                                      ; preds = %62
  %68 = load i32, i32* %n, align 4
  %69 = mul nsw i32 8, %68
  %70 = load i8*, i8** %scan2, align 8
  %71 = load i8, i8* %70, align 1
  %72 = sext i8 %71 to i32
  %73 = add nsw i32 %69, %72
  %74 = sub nsw i32 %73, 48
  store i32 %74, i32* %n, align 4
  br label %75

; <label>:75                                      ; preds = %67
  %76 = load i32, i32* %i, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %i, align 4
  %78 = load i8*, i8** %scan2, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %scan2, align 8
  br label %54

; <label>:80                                      ; preds = %62, %57, %54
  %81 = load i8*, i8** %scan2, align 8
  %82 = getelementptr inbounds i8, i8* %81, i32 -1
  store i8* %82, i8** %scan2, align 8
  %83 = load i32, i32* %n, align 4
  %84 = trunc i32 %83 to i8
  %85 = load i8*, i8** %scan, align 8
  store i8 %84, i8* %85, align 1
  br label %137

; <label>:86                                      ; preds = %48, %41
  %87 = load i8*, i8** %scan2, align 8
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  switch i32 %89, label %129 [
    i32 97, label %90
    i32 98, label %92
    i32 99, label %94
    i32 102, label %118
    i32 110, label %120
    i32 114, label %122
    i32 116, label %124
    i32 118, label %126
    i32 92, label %128
  ]

; <label>:90                                      ; preds = %86
  %91 = load i8*, i8** %scan, align 8
  store i8 7, i8* %91, align 1
  br label %136

; <label>:92                                      ; preds = %86
  %93 = load i8*, i8** %scan, align 8
  store i8 8, i8* %93, align 1
  br label %136

; <label>:94                                      ; preds = %86
  %95 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  %96 = load i8*, i8** %format, align 8
  %97 = load i8*, i8** %scan, align 8
  %98 = load i8*, i8** %format, align 8
  %99 = ptrtoint i8* %97 to i64
  %100 = ptrtoint i8* %98 to i64
  %101 = sub i64 %99, %100
  %102 = trunc i64 %101 to i32
  %103 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %104 = call %struct.segment** @make_segment(%struct.segment** %95, i8* %96, i32 %102, i32 1, i8 signext 0, i8 signext 0, %struct.predicate* %103)
  %105 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %106 = getelementptr inbounds %struct.predicate, %struct.predicate* %105, i32 0, i32 6
  %107 = load i8, i8* %106, align 1
  %108 = trunc i8 %107 to i1
  br i1 %108, label %109, label %117

; <label>:109                                     ; preds = %94
  %110 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %111 = getelementptr inbounds %struct.predicate, %struct.predicate* %110, i32 0, i32 8
  %112 = load i32, i32* %111, align 4
  %113 = icmp ult i32 %112, 2
  br i1 %113, label %114, label %117

; <label>:114                                     ; preds = %109
  %115 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %116 = getelementptr inbounds %struct.predicate, %struct.predicate* %115, i32 0, i32 8
  store i32 2, i32* %116, align 4
  br label %117

; <label>:117                                     ; preds = %114, %109, %94
  store i1 true, i1* %1
  br label %339

; <label>:118                                     ; preds = %86
  %119 = load i8*, i8** %scan, align 8
  store i8 12, i8* %119, align 1
  br label %136

; <label>:120                                     ; preds = %86
  %121 = load i8*, i8** %scan, align 8
  store i8 10, i8* %121, align 1
  br label %136

; <label>:122                                     ; preds = %86
  %123 = load i8*, i8** %scan, align 8
  store i8 13, i8* %123, align 1
  br label %136

; <label>:124                                     ; preds = %86
  %125 = load i8*, i8** %scan, align 8
  store i8 9, i8* %125, align 1
  br label %136

; <label>:126                                     ; preds = %86
  %127 = load i8*, i8** %scan, align 8
  store i8 11, i8* %127, align 1
  br label %136

; <label>:128                                     ; preds = %86
  br label %136

; <label>:129                                     ; preds = %86
  %130 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str141, i32 0, i32 0))
  %131 = load i8*, i8** %scan2, align 8
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %130, i32 %133)
  %134 = load i8*, i8** %scan, align 8
  %135 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %135, i8** %scan, align 8
  br label %320

; <label>:136                                     ; preds = %128, %126, %124, %122, %120, %118, %92, %90
  br label %137

; <label>:137                                     ; preds = %136, %80
  %138 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  %139 = load i8*, i8** %format, align 8
  %140 = load i8*, i8** %scan, align 8
  %141 = load i8*, i8** %format, align 8
  %142 = ptrtoint i8* %140 to i64
  %143 = ptrtoint i8* %141 to i64
  %144 = sub i64 %142, %143
  %145 = add nsw i64 %144, 1
  %146 = trunc i64 %145 to i32
  %147 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %148 = call %struct.segment** @make_segment(%struct.segment** %138, i8* %139, i32 %146, i32 0, i8 signext 0, i8 signext 0, %struct.predicate* %147)
  store %struct.segment** %148, %struct.segment*** %segmentp, align 8
  %149 = load i8*, i8** %scan2, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 1
  store i8* %150, i8** %format, align 8
  %151 = load i8*, i8** %scan2, align 8
  store i8* %151, i8** %scan, align 8
  br label %319

; <label>:152                                     ; preds = %36
  %153 = load i8*, i8** %scan, align 8
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %155, 37
  br i1 %156, label %157, label %318

; <label>:157                                     ; preds = %152
  %158 = load i8*, i8** %scan, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 %160 to i32
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %166

; <label>:163                                     ; preds = %157
  %164 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str142, i32 0, i32 0))
  %165 = load i8*, i8** %scan, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %164, i8* %165)
  br label %189

; <label>:166                                     ; preds = %157
  %167 = load i8*, i8** %scan, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i32
  %171 = icmp eq i32 %170, 37
  br i1 %171, label %172, label %188

; <label>:172                                     ; preds = %166
  %173 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  %174 = load i8*, i8** %format, align 8
  %175 = load i8*, i8** %scan, align 8
  %176 = load i8*, i8** %format, align 8
  %177 = ptrtoint i8* %175 to i64
  %178 = ptrtoint i8* %176 to i64
  %179 = sub i64 %177, %178
  %180 = add nsw i64 %179, 1
  %181 = trunc i64 %180 to i32
  %182 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %183 = call %struct.segment** @make_segment(%struct.segment** %173, i8* %174, i32 %181, i32 0, i8 signext 0, i8 signext 0, %struct.predicate* %182)
  store %struct.segment** %183, %struct.segment*** %segmentp, align 8
  %184 = load i8*, i8** %scan, align 8
  %185 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %185, i8** %scan, align 8
  %186 = load i8*, i8** %scan, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 1
  store i8* %187, i8** %format, align 8
  br label %320

; <label>:188                                     ; preds = %166
  br label %189

; <label>:189                                     ; preds = %188, %163
  %190 = load i8*, i8** %scan, align 8
  store i8* %190, i8** %scan2, align 8
  br label %191

; <label>:191                                     ; preds = %203, %189
  %192 = load i8*, i8** %scan2, align 8
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %scan2, align 8
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %204

; <label>:197                                     ; preds = %191
  %198 = load i8*, i8** %scan2, align 8
  %199 = load i8, i8* %198, align 1
  %200 = sext i8 %199 to i32
  %201 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str143, i32 0, i32 0), i32 %200) #14
  %202 = icmp ne i8* %201, null
  br i1 %202, label %203, label %204

; <label>:203                                     ; preds = %197
  br label %191

; <label>:204                                     ; preds = %197, %191
  br label %205

; <label>:205                                     ; preds = %217, %204
  %206 = load i8*, i8** %scan2, align 8
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = sext i32 %208 to i64
  %210 = call i16** @__ctype_b_loc() #13
  %211 = load i16*, i16** %210, align 8
  %212 = getelementptr inbounds i16, i16* %211, i64 %209
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = and i32 %214, 2048
  %216 = icmp ne i32 %215, 0
  br i1 %216, label %217, label %220

; <label>:217                                     ; preds = %205
  %218 = load i8*, i8** %scan2, align 8
  %219 = getelementptr inbounds i8, i8* %218, i32 1
  store i8* %219, i8** %scan2, align 8
  br label %205

; <label>:220                                     ; preds = %205
  %221 = load i8*, i8** %scan2, align 8
  %222 = load i8, i8* %221, align 1
  %223 = sext i8 %222 to i32
  %224 = icmp eq i32 %223, 46
  br i1 %224, label %225, label %245

; <label>:225                                     ; preds = %220
  %226 = load i8*, i8** %scan2, align 8
  %227 = getelementptr inbounds i8, i8* %226, i32 1
  store i8* %227, i8** %scan2, align 8
  br label %228

; <label>:228                                     ; preds = %241, %225
  %229 = load i8*, i8** %scan2, align 8
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = sext i32 %231 to i64
  %233 = call i16** @__ctype_b_loc() #13
  %234 = load i16*, i16** %233, align 8
  %235 = getelementptr inbounds i16, i16* %234, i64 %232
  %236 = load i16, i16* %235, align 2
  %237 = zext i16 %236 to i32
  %238 = and i32 %237, 2048
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %240, label %244

; <label>:240                                     ; preds = %228
  br label %241

; <label>:241                                     ; preds = %240
  %242 = load i8*, i8** %scan2, align 8
  %243 = getelementptr inbounds i8, i8* %242, i32 1
  store i8* %243, i8** %scan2, align 8
  br label %228

; <label>:244                                     ; preds = %228
  br label %245

; <label>:245                                     ; preds = %244, %220
  %246 = load i8*, i8** %scan2, align 8
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = call i8* @strchr(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str144, i32 0, i32 0), i32 %248) #14
  %250 = icmp ne i8* %249, null
  br i1 %250, label %251, label %267

; <label>:251                                     ; preds = %245
  %252 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  %253 = load i8*, i8** %format, align 8
  %254 = load i8*, i8** %scan2, align 8
  %255 = load i8*, i8** %format, align 8
  %256 = ptrtoint i8* %254 to i64
  %257 = ptrtoint i8* %255 to i64
  %258 = sub i64 %256, %257
  %259 = trunc i64 %258 to i32
  %260 = load i8*, i8** %scan2, align 8
  %261 = load i8, i8* %260, align 1
  %262 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %263 = call %struct.segment** @make_segment(%struct.segment** %252, i8* %253, i32 %259, i32 2, i8 signext %261, i8 signext 0, %struct.predicate* %262)
  store %struct.segment** %263, %struct.segment*** %segmentp, align 8
  %264 = load i8*, i8** %scan2, align 8
  store i8* %264, i8** %scan, align 8
  %265 = load i8*, i8** %scan, align 8
  %266 = getelementptr inbounds i8, i8* %265, i64 1
  store i8* %266, i8** %format, align 8
  br label %317

; <label>:267                                     ; preds = %245
  %268 = load i8*, i8** %scan2, align 8
  %269 = load i8, i8* %268, align 1
  %270 = sext i8 %269 to i32
  %271 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str145, i32 0, i32 0), i32 %270) #14
  %272 = icmp ne i8* %271, null
  br i1 %272, label %273, label %300

; <label>:273                                     ; preds = %267
  %274 = load i8*, i8** %scan2, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 1
  %276 = load i8, i8* %275, align 1
  %277 = sext i8 %276 to i32
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %279, label %300

; <label>:279                                     ; preds = %273
  %280 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  %281 = load i8*, i8** %format, align 8
  %282 = load i8*, i8** %scan2, align 8
  %283 = load i8*, i8** %format, align 8
  %284 = ptrtoint i8* %282 to i64
  %285 = ptrtoint i8* %283 to i64
  %286 = sub i64 %284, %285
  %287 = trunc i64 %286 to i32
  %288 = load i8*, i8** %scan2, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 0
  %290 = load i8, i8* %289, align 1
  %291 = load i8*, i8** %scan2, align 8
  %292 = getelementptr inbounds i8, i8* %291, i64 1
  %293 = load i8, i8* %292, align 1
  %294 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %295 = call %struct.segment** @make_segment(%struct.segment** %280, i8* %281, i32 %287, i32 2, i8 signext %290, i8 signext %293, %struct.predicate* %294)
  store %struct.segment** %295, %struct.segment*** %segmentp, align 8
  %296 = load i8*, i8** %scan2, align 8
  %297 = getelementptr inbounds i8, i8* %296, i64 1
  store i8* %297, i8** %scan, align 8
  %298 = load i8*, i8** %scan, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 1
  store i8* %299, i8** %format, align 8
  br label %320

; <label>:300                                     ; preds = %273, %267
  %301 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str146, i32 0, i32 0))
  %302 = load i8*, i8** %scan2, align 8
  %303 = load i8, i8* %302, align 1
  %304 = sext i8 %303 to i32
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %301, i32 %304)
  %305 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  %306 = load i8*, i8** %format, align 8
  %307 = load i8*, i8** %scan, align 8
  %308 = load i8*, i8** %format, align 8
  %309 = ptrtoint i8* %307 to i64
  %310 = ptrtoint i8* %308 to i64
  %311 = sub i64 %309, %310
  %312 = trunc i64 %311 to i32
  %313 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %314 = call %struct.segment** @make_segment(%struct.segment** %305, i8* %306, i32 %312, i32 0, i8 signext 0, i8 signext 0, %struct.predicate* %313)
  store %struct.segment** %314, %struct.segment*** %segmentp, align 8
  %315 = load i8*, i8** %scan, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 1
  store i8* %316, i8** %format, align 8
  br label %320

; <label>:317                                     ; preds = %251
  br label %318

; <label>:318                                     ; preds = %317, %152
  br label %319

; <label>:319                                     ; preds = %318, %137
  br label %320

; <label>:320                                     ; preds = %319, %300, %279, %172, %129
  %321 = load i8*, i8** %scan, align 8
  %322 = getelementptr inbounds i8, i8* %321, i32 1
  store i8* %322, i8** %scan, align 8
  br label %32

; <label>:323                                     ; preds = %32
  %324 = load i8*, i8** %scan, align 8
  %325 = load i8*, i8** %format, align 8
  %326 = icmp ugt i8* %324, %325
  br i1 %326, label %327, label %338

; <label>:327                                     ; preds = %323
  %328 = load %struct.segment**, %struct.segment*** %segmentp, align 8
  %329 = load i8*, i8** %format, align 8
  %330 = load i8*, i8** %scan, align 8
  %331 = load i8*, i8** %format, align 8
  %332 = ptrtoint i8* %330 to i64
  %333 = ptrtoint i8* %331 to i64
  %334 = sub i64 %332, %333
  %335 = trunc i64 %334 to i32
  %336 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %337 = call %struct.segment** @make_segment(%struct.segment** %328, i8* %329, i32 %335, i32 0, i8 signext 0, i8 signext 0, %struct.predicate* %336)
  br label %338

; <label>:338                                     ; preds = %327, %323
  store i1 true, i1* %1
  br label %339

; <label>:339                                     ; preds = %338, %117
  %340 = load i1, i1* %1
  ret i1 %340
}

; Function Attrs: nounwind uwtable
define internal %struct.segment** @make_segment(%struct.segment** %segment, i8* %format, i32 %len, i32 %kind, i8 signext %format_char, i8 signext %aux_format_char, %struct.predicate* %pred) #0 {
  %1 = alloca %struct.segment**, align 8
  %2 = alloca %struct.segment**, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca %struct.predicate*, align 8
  %mycost = alloca i32, align 4
  %fmt = alloca i8*, align 8
  store %struct.segment** %segment, %struct.segment*** %2, align 8
  store i8* %format, i8** %3, align 8
  store i32 %len, i32* %4, align 4
  store i32 %kind, i32* %5, align 4
  store i8 %format_char, i8* %6, align 1
  store i8 %aux_format_char, i8* %7, align 1
  store %struct.predicate* %pred, %struct.predicate** %8, align 8
  store i32 0, i32* %mycost, align 4
  %9 = call noalias i8* @xmalloc(i64 32)
  %10 = bitcast i8* %9 to %struct.segment*
  %11 = load %struct.segment**, %struct.segment*** %2, align 8
  store %struct.segment* %10, %struct.segment** %11, align 8
  %12 = load i32, i32* %5, align 4
  %13 = load %struct.segment**, %struct.segment*** %2, align 8
  %14 = load %struct.segment*, %struct.segment** %13, align 8
  %15 = getelementptr inbounds %struct.segment, %struct.segment* %14, i32 0, i32 0
  store i32 %12, i32* %15, align 4
  %16 = load i8, i8* %6, align 1
  %17 = load %struct.segment**, %struct.segment*** %2, align 8
  %18 = load %struct.segment*, %struct.segment** %17, align 8
  %19 = getelementptr inbounds %struct.segment, %struct.segment* %18, i32 0, i32 1
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* %19, i32 0, i64 0
  store i8 %16, i8* %20, align 1
  %21 = load i8, i8* %7, align 1
  %22 = load %struct.segment**, %struct.segment*** %2, align 8
  %23 = load %struct.segment*, %struct.segment** %22, align 8
  %24 = getelementptr inbounds %struct.segment, %struct.segment* %23, i32 0, i32 1
  %25 = getelementptr inbounds [2 x i8], [2 x i8]* %24, i32 0, i64 1
  store i8 %21, i8* %25, align 1
  %26 = load %struct.segment**, %struct.segment*** %2, align 8
  %27 = load %struct.segment*, %struct.segment** %26, align 8
  %28 = getelementptr inbounds %struct.segment, %struct.segment* %27, i32 0, i32 4
  store %struct.segment* null, %struct.segment** %28, align 8
  %29 = load i32, i32* %4, align 4
  %30 = load %struct.segment**, %struct.segment*** %2, align 8
  %31 = load %struct.segment*, %struct.segment** %30, align 8
  %32 = getelementptr inbounds %struct.segment, %struct.segment* %31, i32 0, i32 3
  store i32 %29, i32* %32, align 4
  %33 = load i32, i32* %4, align 4
  %34 = sext i32 %33 to i64
  %35 = add i64 %34, 2
  %36 = call noalias i8* @xmalloc(i64 %35)
  %37 = load %struct.segment**, %struct.segment*** %2, align 8
  %38 = load %struct.segment*, %struct.segment** %37, align 8
  %39 = getelementptr inbounds %struct.segment, %struct.segment* %38, i32 0, i32 2
  store i8* %36, i8** %39, align 8
  store i8* %36, i8** %fmt, align 8
  %40 = load i8*, i8** %fmt, align 8
  %41 = load i8*, i8** %3, align 8
  %42 = load i32, i32* %4, align 4
  %43 = sext i32 %42 to i64
  %44 = call i8* @strncpy(i8* %40, i8* %41, i64 %43) #9
  %45 = load i32, i32* %4, align 4
  %46 = load i8*, i8** %fmt, align 8
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  store i8* %48, i8** %fmt, align 8
  %49 = load i32, i32* %5, align 4
  switch i32 %49, label %78 [
    i32 0, label %50
    i32 1, label %50
  ]

; <label>:50                                      ; preds = %0, %0
  %51 = load i8, i8* %6, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 0, %52
  br i1 %53, label %54, label %55

; <label>:54                                      ; preds = %50
  br label %57

; <label>:55                                      ; preds = %50
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 2874, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__.make_segment, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %57

; <label>:57                                      ; preds = %56, %54
  %58 = load i8, i8* %7, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 0, %59
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %57
  br label %64

; <label>:62                                      ; preds = %57
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 2875, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__.make_segment, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %64

; <label>:64                                      ; preds = %63, %61
  %65 = load i8*, i8** %fmt, align 8
  store i8 0, i8* %65, align 1
  %66 = load i32, i32* %mycost, align 4
  %67 = load %struct.predicate*, %struct.predicate** %8, align 8
  %68 = getelementptr inbounds %struct.predicate, %struct.predicate* %67, i32 0, i32 8
  %69 = load i32, i32* %68, align 4
  %70 = icmp ugt i32 %66, %69
  br i1 %70, label %71, label %74

; <label>:71                                      ; preds = %64
  %72 = load %struct.predicate*, %struct.predicate** %8, align 8
  %73 = getelementptr inbounds %struct.predicate, %struct.predicate* %72, i32 0, i32 8
  store i32 0, i32* %73, align 4
  br label %74

; <label>:74                                      ; preds = %71, %64
  %75 = load %struct.segment**, %struct.segment*** %2, align 8
  %76 = load %struct.segment*, %struct.segment** %75, align 8
  %77 = getelementptr inbounds %struct.segment, %struct.segment* %76, i32 0, i32 4
  store %struct.segment** %77, %struct.segment*** %1
  br label %149

; <label>:78                                      ; preds = %0
  %79 = load i32, i32* %5, align 4
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %81, label %82

; <label>:81                                      ; preds = %78
  br label %84

; <label>:82                                      ; preds = %78
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 2883, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__.make_segment, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %84

; <label>:84                                      ; preds = %83, %81
  %85 = load i8, i8* %6, align 1
  %86 = sext i8 %85 to i32
  switch i32 %86, label %134 [
    i32 108, label %87
    i32 121, label %92
    i32 97, label %97
    i32 65, label %97
    i32 66, label %97
    i32 99, label %97
    i32 67, label %97
    i32 70, label %97
    i32 103, label %97
    i32 105, label %97
    i32 77, label %97
    i32 115, label %97
    i32 116, label %97
    i32 84, label %97
    i32 117, label %97
    i32 83, label %102
    i32 89, label %107
    i32 102, label %112
    i32 104, label %112
    i32 112, label %112
    i32 80, label %112
    i32 72, label %115
    i32 71, label %118
    i32 85, label %118
    i32 98, label %118
    i32 68, label %118
    i32 107, label %118
    i32 110, label %118
    i32 100, label %123
    i32 109, label %126
    i32 123, label %131
    i32 91, label %131
    i32 40, label %131
  ]

; <label>:87                                      ; preds = %84
  %88 = load %struct.predicate*, %struct.predicate** %8, align 8
  %89 = getelementptr inbounds %struct.predicate, %struct.predicate* %88, i32 0, i32 6
  store i8 1, i8* %89, align 1
  store i32 3, i32* %mycost, align 4
  %90 = load i8*, i8** %fmt, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %91, i8** %fmt, align 8
  store i8 115, i8* %90, align 1
  br label %134

; <label>:92                                      ; preds = %84
  %93 = load %struct.predicate*, %struct.predicate** %8, align 8
  %94 = getelementptr inbounds %struct.predicate, %struct.predicate* %93, i32 0, i32 7
  store i8 1, i8* %94, align 1
  store i32 1, i32* %mycost, align 4
  %95 = load i8*, i8** %fmt, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %fmt, align 8
  store i8 115, i8* %95, align 1
  br label %134

; <label>:97                                      ; preds = %84, %84, %84, %84, %84, %84, %84, %84, %84, %84, %84, %84, %84
  %98 = load %struct.predicate*, %struct.predicate** %8, align 8
  %99 = getelementptr inbounds %struct.predicate, %struct.predicate* %98, i32 0, i32 6
  store i8 1, i8* %99, align 1
  store i32 2, i32* %mycost, align 4
  %100 = load i8*, i8** %fmt, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %fmt, align 8
  store i8 115, i8* %100, align 1
  br label %134

; <label>:102                                     ; preds = %84
  %103 = load %struct.predicate*, %struct.predicate** %8, align 8
  %104 = getelementptr inbounds %struct.predicate, %struct.predicate* %103, i32 0, i32 6
  store i8 1, i8* %104, align 1
  store i32 2, i32* %mycost, align 4
  %105 = load i8*, i8** %fmt, align 8
  %106 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %106, i8** %fmt, align 8
  store i8 103, i8* %105, align 1
  br label %134

; <label>:107                                     ; preds = %84
  %108 = load %struct.predicate*, %struct.predicate** %8, align 8
  %109 = getelementptr inbounds %struct.predicate, %struct.predicate* %108, i32 0, i32 6
  store i8 1, i8* %109, align 1
  store i32 1, i32* %mycost, align 4
  %110 = load i8*, i8** %fmt, align 8
  %111 = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %111, i8** %fmt, align 8
  store i8 115, i8* %110, align 1
  br label %134

; <label>:112                                     ; preds = %84, %84, %84, %84
  %113 = load i8*, i8** %fmt, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %114, i8** %fmt, align 8
  store i8 115, i8* %113, align 1
  br label %134

; <label>:115                                     ; preds = %84
  %116 = load i8*, i8** %fmt, align 8
  %117 = getelementptr inbounds i8, i8* %116, i32 1
  store i8* %117, i8** %fmt, align 8
  store i8 115, i8* %116, align 1
  br label %134

; <label>:118                                     ; preds = %84, %84, %84, %84, %84, %84
  %119 = load %struct.predicate*, %struct.predicate** %8, align 8
  %120 = getelementptr inbounds %struct.predicate, %struct.predicate* %119, i32 0, i32 6
  store i8 1, i8* %120, align 1
  store i32 2, i32* %mycost, align 4
  %121 = load i8*, i8** %fmt, align 8
  %122 = getelementptr inbounds i8, i8* %121, i32 1
  store i8* %122, i8** %fmt, align 8
  store i8 115, i8* %121, align 1
  br label %134

; <label>:123                                     ; preds = %84
  %124 = load i8*, i8** %fmt, align 8
  %125 = getelementptr inbounds i8, i8* %124, i32 1
  store i8* %125, i8** %fmt, align 8
  store i8 100, i8* %124, align 1
  br label %134

; <label>:126                                     ; preds = %84
  %127 = load i8*, i8** %fmt, align 8
  %128 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %128, i8** %fmt, align 8
  store i8 111, i8* %127, align 1
  %129 = load %struct.predicate*, %struct.predicate** %8, align 8
  %130 = getelementptr inbounds %struct.predicate, %struct.predicate* %129, i32 0, i32 6
  store i8 1, i8* %130, align 1
  store i32 2, i32* %mycost, align 4
  br label %134

; <label>:131                                     ; preds = %84, %84, %84
  %132 = call i8* @gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str150, i32 0, i32 0))
  %133 = load i32, i32* %5, align 4
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %132, i32 %133)
  br label %134

; <label>:134                                     ; preds = %131, %126, %123, %118, %115, %112, %107, %102, %97, %92, %87, %84
  %135 = load i8*, i8** %fmt, align 8
  store i8 0, i8* %135, align 1
  %136 = load i32, i32* %mycost, align 4
  %137 = load %struct.predicate*, %struct.predicate** %8, align 8
  %138 = getelementptr inbounds %struct.predicate, %struct.predicate* %137, i32 0, i32 8
  %139 = load i32, i32* %138, align 4
  %140 = icmp ugt i32 %136, %139
  br i1 %140, label %141, label %145

; <label>:141                                     ; preds = %134
  %142 = load i32, i32* %mycost, align 4
  %143 = load %struct.predicate*, %struct.predicate** %8, align 8
  %144 = getelementptr inbounds %struct.predicate, %struct.predicate* %143, i32 0, i32 8
  store i32 %142, i32* %144, align 4
  br label %145

; <label>:145                                     ; preds = %141, %134
  %146 = load %struct.segment**, %struct.segment*** %2, align 8
  %147 = load %struct.segment*, %struct.segment** %146, align 8
  %148 = getelementptr inbounds %struct.segment, %struct.segment* %147, i32 0, i32 4
  store %struct.segment** %148, %struct.segment*** %1
  br label %149

; <label>:149                                     ; preds = %145, %74
  %150 = load %struct.segment**, %struct.segment*** %1
  ret %struct.segment** %150
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insert_fprint(%struct.parser_table* %entry, i8* %filename) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8* %filename, i8** %2, align 8
  %3 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %4 = call %struct.predicate* @insert_primary(%struct.parser_table* %3)
  store %struct.predicate* %4, %struct.predicate** %our_pred, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %12

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %2, align 8
  %9 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %10 = getelementptr inbounds %struct.predicate, %struct.predicate* %9, i32 0, i32 13
  %11 = bitcast %union.anon* %10 to %struct.format_val*
  call void @open_output_file(i8* %8, %struct.format_val* %11)
  br label %16

; <label>:12                                      ; preds = %0
  %13 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 13
  %15 = bitcast %union.anon* %14 to %struct.format_val*
  call void @open_stdout(%struct.format_val* %15)
  br label %16

; <label>:16                                      ; preds = %12, %7
  %17 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 5
  store i8 1, i8* %18, align 1
  %19 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 4
  store i8 1, i8* %20, align 1
  %21 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 7
  store i8 0, i8* %22, align 1
  %23 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %24 = getelementptr inbounds %struct.predicate, %struct.predicate* %23, i32 0, i32 6
  store i8 0, i8* %24, align 1
  %25 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %26 = getelementptr inbounds %struct.predicate, %struct.predicate* %25, i32 0, i32 9
  store float 1.000000e+00, float* %26, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal void @non_posix_mode(i8* %mode) #0 {
  %1 = alloca i8*, align 8
  store i8* %mode, i8** %1, align 8
  %2 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 9), align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %4, label %9

; <label>:4                                       ; preds = %0
  %5 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str153400, i32 0, i32 0))
  %6 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %7 = load i8*, i8** %1, align 8
  %8 = call i8* @quotearg_n_style(i32 0, i32 %6, i8* %7)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %5, i8* %8)
  br label %9

; <label>:9                                       ; preds = %4, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insert_exec_ok(i8* %action, %struct.parser_table* %entry, i32 %dir_fd, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32*, align 8
  store i8* %action, i8** %1, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i32 %dir_fd, i32* %3, align 4
  store i8** %argv, i8*** %4, align 8
  store i32* %arg_ptr, i32** %5, align 8
  %6 = load i8*, i8** %1, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %8 = load i32, i32* %3, align 4
  %9 = load i8**, i8*** %4, align 8
  %10 = load i32*, i32** %5, align 8
  %11 = call zeroext i1 @new_insert_exec_ok(i8* %6, %struct.parser_table* %7, i32 %8, i8** %9, i32* %10)
  ret i1 %11
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @new_insert_exec_ok(i8* %action, %struct.parser_table* %entry, i32 %dir_fd, i8** %argv, i32* %arg_ptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca i8*, align 8
  %3 = alloca %struct.parser_table*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %i = alloca i32, align 4
  %saw_braces = alloca i32, align 4
  %allow_plus = alloca i8, align 1
  %brace_count = alloca i32, align 4
  %func = alloca i1 (i8*, %struct.stat*, %struct.predicate*)*, align 8
  %bcstatus = alloca i32, align 4
  %our_pred = alloca %struct.predicate*, align 8
  %execp = alloca %struct.exec_val*, align 8
  %suffix = alloca i8*, align 8
  store i8* %action, i8** %2, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %3, align 8
  store i32 %dir_fd, i32* %4, align 4
  store i8** %argv, i8*** %5, align 8
  store i32* %arg_ptr, i32** %6, align 8
  %7 = load %struct.parser_table*, %struct.parser_table** %3, align 8
  %8 = getelementptr inbounds %struct.parser_table, %struct.parser_table* %7, i32 0, i32 3
  %9 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %8, align 8
  store i1 (i8*, %struct.stat*, %struct.predicate*)* %9, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %10 = load i8**, i8*** %5, align 8
  %11 = icmp eq i8** %10, null
  br i1 %11, label %20, label %12

; <label>:12                                      ; preds = %0
  %13 = load i32*, i32** %6, align 8
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 %15
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %12, %0
  store i1 false, i1* %1
  br label %339

; <label>:21                                      ; preds = %12
  %22 = load %struct.parser_table*, %struct.parser_table** %3, align 8
  %23 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %24 = call %struct.predicate* @insert_primary_withpred(%struct.parser_table* %22, i1 (i8*, %struct.stat*, %struct.predicate*)* %23)
  store %struct.predicate* %24, %struct.predicate** %our_pred, align 8
  %25 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %26 = getelementptr inbounds %struct.predicate, %struct.predicate* %25, i32 0, i32 5
  store i8 1, i8* %26, align 1
  %27 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %28 = getelementptr inbounds %struct.predicate, %struct.predicate* %27, i32 0, i32 4
  store i8 1, i8* %28, align 1
  %29 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %30 = getelementptr inbounds %struct.predicate, %struct.predicate* %29, i32 0, i32 6
  store i8 0, i8* %30, align 1
  %31 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %32 = getelementptr inbounds %struct.predicate, %struct.predicate* %31, i32 0, i32 7
  store i8 0, i8* %32, align 1
  %33 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %34 = getelementptr inbounds %struct.predicate, %struct.predicate* %33, i32 0, i32 13
  %35 = bitcast %union.anon* %34 to %struct.exec_val*
  store %struct.exec_val* %35, %struct.exec_val** %execp, align 8
  %36 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %37 = icmp ne i1 (i8*, %struct.stat*, %struct.predicate*)* %36, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_okdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %37, label %38, label %44

; <label>:38                                      ; preds = %21
  %39 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %40 = icmp ne i1 (i8*, %struct.stat*, %struct.predicate*)* %39, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_ok to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %38
  store i8 1, i8* %allow_plus, align 1
  %42 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %43 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %42, i32 0, i32 6
  store i8 0, i8* %43, align 1
  br label %47

; <label>:44                                      ; preds = %38, %21
  store i8 0, i8* %allow_plus, align 1
  %45 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %46 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %45, i32 0, i32 6
  store i8 1, i8* %46, align 1
  br label %47

; <label>:47                                      ; preds = %44, %41
  %48 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %49 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %48, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %49, label %53, label %50

; <label>:50                                      ; preds = %47
  %51 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %52 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %51, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_okdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %52, label %53, label %58

; <label>:53                                      ; preds = %50, %47
  store i8 0, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 6), align 1
  %54 = load i8*, i8** %2, align 8
  %55 = load i8**, i8*** %5, align 8
  call void @check_path_safety(i8* %54, i8** %55)
  %56 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %57 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %56, i32 0, i32 5
  store i8 1, i8* %57, align 1
  br label %61

; <label>:58                                      ; preds = %50
  %59 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %60 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %59, i32 0, i32 5
  store i8 0, i8* %60, align 1
  br label %61

; <label>:61                                      ; preds = %58, %53
  %62 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %63 = getelementptr inbounds %struct.predicate, %struct.predicate* %62, i32 0, i32 13
  %64 = bitcast %union.anon* %63 to %struct.exec_val*
  %65 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %64, i32 0, i32 0
  store i8 0, i8* %65, align 1
  %66 = load i32*, i32** %6, align 8
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %start, align 4
  %68 = load i32, i32* %start, align 4
  store i32 %68, i32* %end, align 4
  store i32 0, i32* %saw_braces, align 4
  store i32 0, i32* %brace_count, align 4
  br label %69

; <label>:69                                      ; preds = %150, %61
  %70 = load i32, i32* %end, align 4
  %71 = sext i32 %70 to i64
  %72 = load i8**, i8*** %5, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 %71
  %74 = load i8*, i8** %73, align 8
  %75 = icmp ne i8* %74, null
  br i1 %75, label %76, label %153

; <label>:76                                      ; preds = %69
  %77 = load i32, i32* %end, align 4
  %78 = sext i32 %77 to i64
  %79 = load i8**, i8*** %5, align 8
  %80 = getelementptr inbounds i8*, i8** %79, i64 %78
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = icmp ne i32 %84, 59
  br i1 %85, label %96, label %86

; <label>:86                                      ; preds = %76
  %87 = load i32, i32* %end, align 4
  %88 = sext i32 %87 to i64
  %89 = load i8**, i8*** %5, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 %88
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %153

; <label>:96                                      ; preds = %86, %76
  %97 = load i8, i8* %allow_plus, align 1
  %98 = trunc i8 %97 to i1
  br i1 %98, label %99, label %127

; <label>:99                                      ; preds = %96
  %100 = load i32, i32* %end, align 4
  %101 = sext i32 %100 to i64
  %102 = load i8**, i8*** %5, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i64 %101
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 0
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %107, 43
  br i1 %108, label %109, label %127

; <label>:109                                     ; preds = %99
  %110 = load i32, i32* %end, align 4
  %111 = sext i32 %110 to i64
  %112 = load i8**, i8*** %5, align 8
  %113 = getelementptr inbounds i8*, i8** %112, i64 %111
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %127

; <label>:119                                     ; preds = %109
  %120 = load i32, i32* %saw_braces, align 4
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %127

; <label>:122                                     ; preds = %119
  %123 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %124 = getelementptr inbounds %struct.predicate, %struct.predicate* %123, i32 0, i32 13
  %125 = bitcast %union.anon* %124 to %struct.exec_val*
  %126 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %125, i32 0, i32 0
  store i8 1, i8* %126, align 1
  br label %153

; <label>:127                                     ; preds = %119, %109, %99, %96
  store i32 0, i32* %saw_braces, align 4
  %128 = load i32, i32* %end, align 4
  %129 = sext i32 %128 to i64
  %130 = load i8**, i8*** %5, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 %129
  %132 = load i8*, i8** %131, align 8
  %133 = call i8* @mbsstr(i8* %132, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str155, i32 0, i32 0))
  %134 = icmp ne i8* %133, null
  br i1 %134, label %135, label %149

; <label>:135                                     ; preds = %127
  store i32 1, i32* %saw_braces, align 4
  %136 = load i32, i32* %brace_count, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %brace_count, align 4
  %138 = load i32, i32* %end, align 4
  %139 = icmp eq i32 0, %138
  br i1 %139, label %140, label %148

; <label>:140                                     ; preds = %135
  %141 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %142 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %141, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %142, label %146, label %143

; <label>:143                                     ; preds = %140
  %144 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %145 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %144, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_okdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %145, label %146, label %148

; <label>:146                                     ; preds = %143, %140
  %147 = call i8* @gettext(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str156, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %147)
  br label %148

; <label>:148                                     ; preds = %146, %143, %135
  br label %149

; <label>:149                                     ; preds = %148, %127
  br label %150

; <label>:150                                     ; preds = %149
  %151 = load i32, i32* %end, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %end, align 4
  br label %69

; <label>:153                                     ; preds = %122, %86, %69
  %154 = load i32, i32* %end, align 4
  %155 = load i32, i32* %start, align 4
  %156 = icmp eq i32 %154, %155
  br i1 %156, label %164, label %157

; <label>:157                                     ; preds = %153
  %158 = load i32, i32* %end, align 4
  %159 = sext i32 %158 to i64
  %160 = load i8**, i8*** %5, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 %159
  %162 = load i8*, i8** %161, align 8
  %163 = icmp eq i8* %162, null
  br i1 %163, label %164, label %169

; <label>:164                                     ; preds = %157, %153
  %165 = load i32, i32* %end, align 4
  %166 = load i32*, i32** %6, align 8
  store i32 %165, i32* %166, align 4
  %167 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %168 = bitcast %struct.predicate* %167 to i8*
  call void @free(i8* %168) #9
  store i1 false, i1* %1
  br label %339

; <label>:169                                     ; preds = %157
  %170 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %171 = getelementptr inbounds %struct.predicate, %struct.predicate* %170, i32 0, i32 13
  %172 = bitcast %union.anon* %171 to %struct.exec_val*
  %173 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %172, i32 0, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = trunc i8 %174 to i1
  br i1 %175, label %176, label %187

; <label>:176                                     ; preds = %169
  %177 = load i32, i32* %brace_count, align 4
  %178 = icmp sgt i32 %177, 1
  br i1 %178, label %179, label %187

; <label>:179                                     ; preds = %176
  %180 = load i1 (i8*, %struct.stat*, %struct.predicate*)*, i1 (i8*, %struct.stat*, %struct.predicate*)** %func, align 8
  %181 = icmp eq i1 (i8*, %struct.stat*, %struct.predicate*)* %180, bitcast (i1 (i8*, %struct.stat*, %struct.predicate.16*)* @pred_execdir to i1 (i8*, %struct.stat*, %struct.predicate*)*)
  br i1 %181, label %182, label %183

; <label>:182                                     ; preds = %179
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str157, i32 0, i32 0), i8** %suffix, align 8
  br label %184

; <label>:183                                     ; preds = %179
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str134, i32 0, i32 0), i8** %suffix, align 8
  br label %184

; <label>:184                                     ; preds = %183, %182
  %185 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str158, i32 0, i32 0))
  %186 = load i8*, i8** %suffix, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %185, i8* %186)
  br label %187

; <label>:187                                     ; preds = %184, %176, %169
  %188 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %189 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %188, i32 0, i32 1
  %190 = call i32 @bc_init_controlinfo(%struct.buildcmd_control* %189, i64 2048)
  store i32 %190, i32* %bcstatus, align 4
  %191 = load i32, i32* %bcstatus, align 4
  switch i32 %191, label %195 [
    i32 1, label %192
    i32 2, label %192
    i32 0, label %194
  ]

; <label>:192                                     ; preds = %187, %187
  %193 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str159, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %193)
  br label %195

; <label>:194                                     ; preds = %187
  br label %195

; <label>:195                                     ; preds = %194, %192, %187
  %196 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %197 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %196, i32 0, i32 1
  call void @bc_use_sensible_arg_max(%struct.buildcmd_control* %197)
  %198 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %199 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %198, i32 0, i32 1
  %200 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %199, i32 0, i32 8
  store i32 (%struct.buildcmd_control*, %struct.buildcmd_state*)* @launch, i32 (%struct.buildcmd_control*, %struct.buildcmd_state*)** %200, align 8
  %201 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %202 = getelementptr inbounds %struct.predicate, %struct.predicate* %201, i32 0, i32 13
  %203 = bitcast %union.anon* %202 to %struct.exec_val*
  %204 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %203, i32 0, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = trunc i8 %205 to i1
  br i1 %206, label %207, label %262

; <label>:207                                     ; preds = %195
  %208 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %209 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %208, i32 0, i32 3
  store i8** null, i8*** %209, align 8
  %210 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %211 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %210, i32 0, i32 1
  %212 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %211, i32 0, i32 6
  store i8* null, i8** %212, align 8
  %213 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %214 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %213, i32 0, i32 1
  %215 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %214, i32 0, i32 5
  store i64 0, i64* %215, align 8
  %216 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %217 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %216, i32 0, i32 1
  %218 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %217, i32 0, i32 9
  store i64 0, i64* %218, align 8
  %219 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %220 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %219, i32 0, i32 1
  %221 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %220, i32 0, i32 10
  store i64 0, i64* %221, align 8
  %222 = load i32, i32* %end, align 4
  %223 = load i32, i32* %start, align 4
  %224 = sub nsw i32 %222, %223
  %225 = sub nsw i32 %224, 1
  %226 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %227 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %226, i32 0, i32 1
  %228 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %227, i32 0, i32 7
  store i32 %225, i32* %228, align 4
  %229 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %230 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %229, i32 0, i32 1
  %231 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %232 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %231, i32 0, i32 2
  %233 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %234 = bitcast %struct.exec_val* %233 to i8*
  call void @bc_init_state(%struct.buildcmd_control* %230, %struct.buildcmd_state* %232, i8* %234)
  %235 = load i32, i32* %start, align 4
  store i32 %235, i32* %i, align 4
  br label %236

; <label>:236                                     ; preds = %258, %207
  %237 = load i32, i32* %i, align 4
  %238 = load i32, i32* %end, align 4
  %239 = sub nsw i32 %238, 1
  %240 = icmp slt i32 %237, %239
  br i1 %240, label %241, label %261

; <label>:241                                     ; preds = %236
  %242 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %243 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %242, i32 0, i32 1
  %244 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %245 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %244, i32 0, i32 2
  %246 = load i32, i32* %i, align 4
  %247 = sext i32 %246 to i64
  %248 = load i8**, i8*** %5, align 8
  %249 = getelementptr inbounds i8*, i8** %248, i64 %247
  %250 = load i8*, i8** %249, align 8
  %251 = load i32, i32* %i, align 4
  %252 = sext i32 %251 to i64
  %253 = load i8**, i8*** %5, align 8
  %254 = getelementptr inbounds i8*, i8** %253, i64 %252
  %255 = load i8*, i8** %254, align 8
  %256 = call i64 @strlen(i8* %255) #14
  %257 = add i64 %256, 1
  call void @bc_push_arg(%struct.buildcmd_control* %243, %struct.buildcmd_state* %245, i8* %250, i64 %257, i8* null, i64 0, i32 1)
  br label %258

; <label>:258                                     ; preds = %241
  %259 = load i32, i32* %i, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %i, align 4
  br label %236

; <label>:261                                     ; preds = %236
  br label %324

; <label>:262                                     ; preds = %195
  %263 = load i32, i32* %end, align 4
  %264 = load i32, i32* %start, align 4
  %265 = sub nsw i32 %263, %264
  %266 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %267 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %266, i32 0, i32 4
  store i32 %265, i32* %267, align 4
  %268 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %269 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %268, i32 0, i32 1
  %270 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %269, i32 0, i32 6
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str155, i32 0, i32 0), i8** %270, align 8
  %271 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %272 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %271, i32 0, i32 1
  %273 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %272, i32 0, i32 6
  %274 = load i8*, i8** %273, align 8
  %275 = call i64 @strlen(i8* %274) #14
  %276 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %277 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %276, i32 0, i32 1
  %278 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %277, i32 0, i32 5
  store i64 %275, i64* %278, align 8
  %279 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %280 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %279, i32 0, i32 1
  %281 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %280, i32 0, i32 9
  store i64 0, i64* %281, align 8
  %282 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %283 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %282, i32 0, i32 1
  %284 = getelementptr inbounds %struct.buildcmd_control, %struct.buildcmd_control* %283, i32 0, i32 10
  store i64 0, i64* %284, align 8
  %285 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %286 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %285, i32 0, i32 4
  %287 = load i32, i32* %286, align 4
  %288 = sext i32 %287 to i64
  %289 = mul i64 8, %288
  %290 = call noalias i8* @xmalloc(i64 %289)
  %291 = bitcast i8* %290 to i8**
  %292 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %293 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %292, i32 0, i32 3
  store i8** %291, i8*** %293, align 8
  %294 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %295 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %294, i32 0, i32 1
  %296 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %297 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %296, i32 0, i32 2
  %298 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %299 = bitcast %struct.exec_val* %298 to i8*
  call void @bc_init_state(%struct.buildcmd_control* %295, %struct.buildcmd_state* %297, i8* %299)
  store i32 0, i32* %i, align 4
  br label %300

; <label>:300                                     ; preds = %320, %262
  %301 = load i32, i32* %i, align 4
  %302 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %303 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %302, i32 0, i32 4
  %304 = load i32, i32* %303, align 4
  %305 = icmp slt i32 %301, %304
  br i1 %305, label %306, label %323

; <label>:306                                     ; preds = %300
  %307 = load i32, i32* %i, align 4
  %308 = load i32, i32* %start, align 4
  %309 = add nsw i32 %307, %308
  %310 = sext i32 %309 to i64
  %311 = load i8**, i8*** %5, align 8
  %312 = getelementptr inbounds i8*, i8** %311, i64 %310
  %313 = load i8*, i8** %312, align 8
  %314 = load i32, i32* %i, align 4
  %315 = sext i32 %314 to i64
  %316 = load %struct.exec_val*, %struct.exec_val** %execp, align 8
  %317 = getelementptr inbounds %struct.exec_val, %struct.exec_val* %316, i32 0, i32 3
  %318 = load i8**, i8*** %317, align 8
  %319 = getelementptr inbounds i8*, i8** %318, i64 %315
  store i8* %313, i8** %319, align 8
  br label %320

; <label>:320                                     ; preds = %306
  %321 = load i32, i32* %i, align 4
  %322 = add nsw i32 %321, 1
  store i32 %322, i32* %i, align 4
  br label %300

; <label>:323                                     ; preds = %300
  br label %324

; <label>:324                                     ; preds = %323, %261
  %325 = load i32, i32* %end, align 4
  %326 = sext i32 %325 to i64
  %327 = load i8**, i8*** %5, align 8
  %328 = getelementptr inbounds i8*, i8** %327, i64 %326
  %329 = load i8*, i8** %328, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %331, label %334

; <label>:331                                     ; preds = %324
  %332 = load i32, i32* %end, align 4
  %333 = load i32*, i32** %6, align 8
  store i32 %332, i32* %333, align 4
  br label %338

; <label>:334                                     ; preds = %324
  %335 = load i32, i32* %end, align 4
  %336 = add nsw i32 %335, 1
  %337 = load i32*, i32** %6, align 8
  store i32 %336, i32* %337, align 4
  br label %338

; <label>:338                                     ; preds = %334, %331
  store i1 true, i1* %1
  br label %339

; <label>:339                                     ; preds = %338, %164, %20
  %340 = load i1, i1* %1
  ret i1 %340
}

; Function Attrs: nounwind uwtable
define internal void @check_path_safety(i8* %action, i8** %argv) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8**, align 8
  %s = alloca i8*, align 8
  %path = alloca i8*, align 8
  store i8* %action, i8** %1, align 8
  store i8** %argv, i8*** %2, align 8
  %3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str160, i32 0, i32 0)) #9
  store i8* %3, i8** %path, align 8
  %4 = load i8*, i8** %path, align 8
  %5 = icmp eq i8* null, %4
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %34

; <label>:7                                       ; preds = %0
  %8 = load i8**, i8*** %2, align 8
  %9 = load i8*, i8** %path, align 8
  %10 = call i8* @next_element(i8* %9, i32 1)
  store i8* %10, i8** %s, align 8
  br label %11

; <label>:11                                      ; preds = %33, %7
  %12 = call i8* @next_element(i8* null, i32 1)
  store i8* %12, i8** %s, align 8
  %13 = icmp ne i8* %12, null
  br i1 %13, label %14, label %34

; <label>:14                                      ; preds = %11
  %15 = load i8*, i8** %s, align 8
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str140, i32 0, i32 0)) #14
  %17 = icmp eq i32 0, %16
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %14
  %19 = call i8* @gettext(i8* getelementptr inbounds ([234 x i8], [234 x i8]* @.str161, i32 0, i32 0))
  %20 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %19, i8* %20)
  br label %33

; <label>:21                                      ; preds = %14
  %22 = load i8*, i8** %s, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp ne i32 47, %25
  br i1 %26, label %27, label %32

; <label>:27                                      ; preds = %21
  %28 = call i8* @gettext(i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str162, i32 0, i32 0))
  %29 = load i8*, i8** %s, align 8
  %30 = call i8* @safely_quote_err_filename(i32 0, i8* %29)
  %31 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %28, i8* %30, i8* %31)
  br label %32

; <label>:32                                      ; preds = %27, %21
  br label %33

; <label>:33                                      ; preds = %32, %18
  br label %11

; <label>:34                                      ; preds = %11, %6
  ret void
}

; Function Attrs: nounwind uwtable
define internal float @estimate_timestamp_success_rate(i64 %when) #0 {
  %1 = alloca i64, align 8
  %num_days = alloca i32, align 4
  store i64 %when, i64* %1, align 8
  %2 = load i64, i64* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11, i32 0), align 8
  %3 = load i64, i64* %1, align 8
  %4 = sub nsw i64 %2, %3
  %5 = sdiv i64 %4, 86400
  %6 = trunc i64 %5 to i32
  store i32 %6, i32* %num_days, align 4
  %7 = load i32, i32* %num_days, align 4
  %8 = sitofp i32 %7 to float
  %9 = call float @estimate_file_age_success_rate(float %8)
  ret float %9
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_mtime417(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 12
  %5 = bitcast %struct.timespec* %1 to i8*
  %6 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false)
  %7 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %8 = load { i64, i64 }, { i64, i64 }* %7, align 1
  ret { i64, i64 } %8
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @check_name_arg(i8* %pred, i8* %arg) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %pred, i8** %1, align 8
  store i8* %arg, i8** %2, align 8
  %3 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 8), align 1
  %4 = trunc i8 %3 to i1
  br i1 %4, label %5, label %16

; <label>:5                                       ; preds = %0
  %6 = load i8*, i8** %2, align 8
  %7 = call i8* @strchr(i8* %6, i32 47) #14
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %16

; <label>:9                                       ; preds = %5
  %10 = call i8* @gettext(i8* getelementptr inbounds ([330 x i8], [330 x i8]* @.str165, i32 0, i32 0))
  %11 = load i8*, i8** %1, align 8
  %12 = load i8*, i8** %2, align 8
  %13 = call i8* @safely_quote_err_filename(i32 0, i8* %12)
  %14 = load i8*, i8** %2, align 8
  %15 = call i8* @safely_quote_err_filename(i32 1, i8* %14)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %10, i8* %11, i8* %13, i8* %15)
  br label %16

; <label>:16                                      ; preds = %9, %5, %0
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @fnmatch_sanitycheck() #0 {
  %1 = alloca i1, align 1
  %2 = load i8, i8* @fnmatch_sanitycheck.checked, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %16, label %4

; <label>:4                                       ; preds = %0
  %5 = call i32 @fnmatch(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str166, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str166, i32 0, i32 0), i32 0)
  %6 = icmp ne i32 0, %5
  br i1 %6, label %13, label %7

; <label>:7                                       ; preds = %4
  %8 = call i32 @fnmatch(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str167, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str166, i32 0, i32 0), i32 0)
  %9 = icmp eq i32 0, %8
  br i1 %9, label %13, label %10

; <label>:10                                      ; preds = %7
  %11 = call i32 @fnmatch(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str167, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str166, i32 0, i32 0), i32 16)
  %12 = icmp ne i32 0, %11
  br i1 %12, label %13, label %15

; <label>:13                                      ; preds = %10, %7, %4
  %14 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str168, i32 0, i32 0))
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %14)
  store i1 false, i1* %1
  br label %19

; <label>:15                                      ; preds = %10
  store i8 1, i8* @fnmatch_sanitycheck.checked, align 1
  br label %16

; <label>:16                                      ; preds = %15, %0
  %17 = load i8, i8* @fnmatch_sanitycheck.checked, align 1
  %18 = trunc i8 %17 to i1
  store i1 %18, i1* %1
  br label %19

; <label>:19                                      ; preds = %16, %13
  %20 = load i1, i1* %1
  ret i1 %20
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @do_parse_xmin(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr, i32 %xv) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %minutes = alloca i8*, align 8
  %tval = alloca %struct.time_val, align 8
  %origin = alloca %struct.timespec, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  store i32 %xv, i32* %5, align 4
  %6 = load i8**, i8*** %3, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call zeroext i1 @collect_arg(i8** %6, i32* %7, i8** %minutes)
  br i1 %8, label %9, label %38

; <label>:9                                       ; preds = %0
  %10 = bitcast %struct.timespec* %origin to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* bitcast (%struct.timespec* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 11) to i8*), i64 16, i32 8, i1 false)
  %11 = load i32, i32* %5, align 4
  %12 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 0
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %origin, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 86400
  store i64 %15, i64* %13, align 8
  %16 = load i8*, i8** %minutes, align 8
  %17 = bitcast %struct.timespec* %origin to { i64, i64 }*
  %18 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  %19 = load i64, i64* %18, align 1
  %20 = getelementptr { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %21 = load i64, i64* %20, align 1
  %22 = call zeroext i1 @get_relative_timestamp(i8* %16, %struct.time_val* %tval, i64 %19, i64 %21, double 6.000000e+01, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str169, i32 0, i32 0))
  br i1 %22, label %23, label %37

; <label>:23                                      ; preds = %9
  %24 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %25 = call %struct.predicate* @insert_primary(%struct.parser_table* %24)
  store %struct.predicate* %25, %struct.predicate** %our_pred, align 8
  %26 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %27 = getelementptr inbounds %struct.predicate, %struct.predicate* %26, i32 0, i32 13
  %28 = bitcast %union.anon* %27 to %struct.time_val*
  %29 = bitcast %struct.time_val* %28 to i8*
  %30 = bitcast %struct.time_val* %tval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 24, i32 8, i1 false)
  %31 = getelementptr inbounds %struct.time_val, %struct.time_val* %tval, i32 0, i32 2
  %32 = getelementptr inbounds %struct.timespec, %struct.timespec* %31, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = call float @estimate_timestamp_success_rate(i64 %33)
  %35 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %36 = getelementptr inbounds %struct.predicate, %struct.predicate* %35, i32 0, i32 9
  store float %34, float* %36, align 4
  store i1 true, i1* %1
  br label %39

; <label>:37                                      ; preds = %9
  br label %38

; <label>:38                                      ; preds = %37, %0
  store i1 false, i1* %1
  br label %39

; <label>:39                                      ; preds = %38, %23
  %40 = load i1, i1* %1
  ret i1 %40
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insert_depthspec(%struct.parser_table* %entry, i8** %argv, i32* %arg_ptr, i32* %limitptr) #0 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.parser_table*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %depthstr = alloca i8*, align 8
  %depth_len = alloca i32, align 4
  %predicate = alloca i8*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %2, align 8
  store i8** %argv, i8*** %3, align 8
  store i32* %arg_ptr, i32** %4, align 8
  store i32* %limitptr, i32** %5, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %7, 1
  %9 = sext i32 %8 to i64
  %10 = load i8**, i8*** %3, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 %9
  %12 = load i8*, i8** %11, align 8
  store i8* %12, i8** %predicate, align 8
  %13 = load i8**, i8*** %3, align 8
  %14 = load i32*, i32** %4, align 8
  %15 = call zeroext i1 @collect_arg(i8** %13, i32* %14, i8** %depthstr)
  br i1 %15, label %16, label %49

; <label>:16                                      ; preds = %0
  %17 = load i8*, i8** %depthstr, align 8
  %18 = call i64 @strspn(i8* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str113, i32 0, i32 0)) #14
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %depth_len, align 4
  %20 = load i32, i32* %depth_len, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %43

; <label>:22                                      ; preds = %16
  %23 = load i32, i32* %depth_len, align 4
  %24 = sext i32 %23 to i64
  %25 = load i8*, i8** %depthstr, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %43

; <label>:30                                      ; preds = %22
  %31 = load i8*, i8** %depthstr, align 8
  %32 = call i32 @safe_atoi(i8* %31)
  %33 = load i32*, i32** %5, align 8
  store i32 %32, i32* %33, align 4
  %34 = load i32*, i32** %5, align 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp sge i32 %35, 0
  br i1 %36, label %37, label %42

; <label>:37                                      ; preds = %30
  %38 = load %struct.parser_table*, %struct.parser_table** %2, align 8
  %39 = load i8**, i8*** %3, align 8
  %40 = load i32*, i32** %4, align 8
  %41 = call zeroext i1 @parse_noop(%struct.parser_table* %38, i8** %39, i32* %40)
  store i1 %41, i1* %1
  br label %50

; <label>:42                                      ; preds = %30
  br label %43

; <label>:43                                      ; preds = %42, %22, %16
  %44 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str170, i32 0, i32 0))
  %45 = load i8*, i8** %predicate, align 8
  %46 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @options, i32 0, i32 20), align 4
  %47 = load i8*, i8** %depthstr, align 8
  %48 = call i8* @quotearg_n_style(i32 0, i32 %46, i8* %47)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %44, i8* %45, i8* %48)
  store i1 false, i1* %1
  br label %50

; <label>:49                                      ; preds = %0
  store i1 false, i1* %1
  br label %50

; <label>:50                                      ; preds = %49, %43, %37
  %51 = load i1, i1* %1
  ret i1 %51
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insert_fls(%struct.parser_table* %entry, i8* %filename) #0 {
  %1 = alloca %struct.parser_table*, align 8
  %2 = alloca i8*, align 8
  %our_pred = alloca %struct.predicate*, align 8
  store %struct.parser_table* %entry, %struct.parser_table** %1, align 8
  store i8* %filename, i8** %2, align 8
  %3 = load %struct.parser_table*, %struct.parser_table** %1, align 8
  %4 = call %struct.predicate* @insert_primary(%struct.parser_table* %3)
  store %struct.predicate* %4, %struct.predicate** %our_pred, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %12

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %2, align 8
  %9 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %10 = getelementptr inbounds %struct.predicate, %struct.predicate* %9, i32 0, i32 13
  %11 = bitcast %union.anon* %10 to %struct.format_val*
  call void @open_output_file(i8* %8, %struct.format_val* %11)
  br label %16

; <label>:12                                      ; preds = %0
  %13 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %14 = getelementptr inbounds %struct.predicate, %struct.predicate* %13, i32 0, i32 13
  %15 = bitcast %union.anon* %14 to %struct.format_val*
  call void @open_stdout(%struct.format_val* %15)
  br label %16

; <label>:16                                      ; preds = %12, %7
  %17 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %18 = getelementptr inbounds %struct.predicate, %struct.predicate* %17, i32 0, i32 5
  store i8 1, i8* %18, align 1
  %19 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %20 = getelementptr inbounds %struct.predicate, %struct.predicate* %19, i32 0, i32 4
  store i8 1, i8* %20, align 1
  %21 = load %struct.predicate*, %struct.predicate** %our_pred, align 8
  %22 = getelementptr inbounds %struct.predicate, %struct.predicate* %21, i32 0, i32 9
  store float 1.000000e+00, float* %22, align 4
  ret i1 true
}

; Function Attrs: nounwind uwtable
define internal float @estimate_fstype_success_rate(i8* %fsname) #0 {
  %1 = alloca float, align 4
  %2 = alloca i8*, align 8
  %dir_stat = alloca %struct.stat, align 8
  %dir = alloca i8*, align 8
  %fstype = alloca i8*, align 8
  store i8* %fsname, i8** %2, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str175, i32 0, i32 0), i8** %dir, align 8
  %3 = load i8*, i8** %dir, align 8
  %4 = call i32 @stat(i8* %3, %struct.stat* %dir_stat) #9
  %5 = icmp eq i32 0, %4
  br i1 %5, label %6, label %15

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %dir, align 8
  %8 = call i8* @filesystem_type(%struct.stat* %dir_stat, i8* %7)
  store i8* %8, i8** %fstype, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = load i8*, i8** %fstype, align 8
  %11 = call i32 @strcmp(i8* %9, i8* %10) #14
  %12 = icmp eq i32 0, %11
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %6
  store float 0x3FE6666660000000, float* %1
  br label %16

; <label>:14                                      ; preds = %6
  store float 0x3FD3333340000000, float* %1
  br label %16

; <label>:15                                      ; preds = %0
  store float 1.000000e+00, float* %1
  br label %16

; <label>:16                                      ; preds = %15, %14, %13
  %17 = load float, float* %1
  ret float %17
}

; Function Attrs: nounwind uwtable
define internal i32 @get_stat_Ytime(%struct.stat* %p, i8 signext %what, %struct.timespec* %ret) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.stat*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %struct.timespec*, align 8
  %5 = alloca %struct.timespec, align 8
  %6 = alloca %struct.timespec, align 8
  %7 = alloca %struct.timespec, align 8
  %8 = alloca %struct.timespec, align 8
  store %struct.stat* %p, %struct.stat** %2, align 8
  store i8 %what, i8* %3, align 1
  store %struct.timespec* %ret, %struct.timespec** %4, align 8
  %9 = load i8, i8* %3, align 1
  %10 = sext i8 %9 to i32
  switch i32 %10, label %60 [
    i32 97, label %11
    i32 66, label %22
    i32 99, label %38
    i32 109, label %49
  ]

; <label>:11                                      ; preds = %0
  %12 = load %struct.timespec*, %struct.timespec** %4, align 8
  %13 = load %struct.stat*, %struct.stat** %2, align 8
  %14 = call { i64, i64 } @get_stat_atime420(%struct.stat* %13)
  %15 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %16 = getelementptr { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0
  %17 = extractvalue { i64, i64 } %14, 0
  store i64 %17, i64* %16, align 1
  %18 = getelementptr { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1
  %19 = extractvalue { i64, i64 } %14, 1
  store i64 %19, i64* %18, align 1
  %20 = bitcast %struct.timespec* %12 to i8*
  %21 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false)
  store i32 1, i32* %1
  br label %61

; <label>:22                                      ; preds = %0
  %23 = load %struct.timespec*, %struct.timespec** %4, align 8
  %24 = load %struct.stat*, %struct.stat** %2, align 8
  %25 = call { i64, i64 } @get_stat_birthtime419(%struct.stat* %24)
  %26 = bitcast %struct.timespec* %6 to { i64, i64 }*
  %27 = getelementptr { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %28 = extractvalue { i64, i64 } %25, 0
  store i64 %28, i64* %27, align 1
  %29 = getelementptr { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %30 = extractvalue { i64, i64 } %25, 1
  store i64 %30, i64* %29, align 1
  %31 = bitcast %struct.timespec* %23 to i8*
  %32 = bitcast %struct.timespec* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 16, i32 8, i1 false)
  %33 = load %struct.timespec*, %struct.timespec** %4, align 8
  %34 = getelementptr inbounds %struct.timespec, %struct.timespec* %33, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp sge i64 %35, 0
  %37 = zext i1 %36 to i32
  store i32 %37, i32* %1
  br label %61

; <label>:38                                      ; preds = %0
  %39 = load %struct.timespec*, %struct.timespec** %4, align 8
  %40 = load %struct.stat*, %struct.stat** %2, align 8
  %41 = call { i64, i64 } @get_stat_ctime418(%struct.stat* %40)
  %42 = bitcast %struct.timespec* %7 to { i64, i64 }*
  %43 = getelementptr { i64, i64 }, { i64, i64 }* %42, i32 0, i32 0
  %44 = extractvalue { i64, i64 } %41, 0
  store i64 %44, i64* %43, align 1
  %45 = getelementptr { i64, i64 }, { i64, i64 }* %42, i32 0, i32 1
  %46 = extractvalue { i64, i64 } %41, 1
  store i64 %46, i64* %45, align 1
  %47 = bitcast %struct.timespec* %39 to i8*
  %48 = bitcast %struct.timespec* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  store i32 1, i32* %1
  br label %61

; <label>:49                                      ; preds = %0
  %50 = load %struct.timespec*, %struct.timespec** %4, align 8
  %51 = load %struct.stat*, %struct.stat** %2, align 8
  %52 = call { i64, i64 } @get_stat_mtime417(%struct.stat* %51)
  %53 = bitcast %struct.timespec* %8 to { i64, i64 }*
  %54 = getelementptr { i64, i64 }, { i64, i64 }* %53, i32 0, i32 0
  %55 = extractvalue { i64, i64 } %52, 0
  store i64 %55, i64* %54, align 1
  %56 = getelementptr { i64, i64 }, { i64, i64 }* %53, i32 0, i32 1
  %57 = extractvalue { i64, i64 } %52, 1
  store i64 %57, i64* %56, align 1
  %58 = bitcast %struct.timespec* %50 to i8*
  %59 = bitcast %struct.timespec* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 16, i32 8, i1 false)
  store i32 1, i32* %1
  br label %61

; <label>:60                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str122, i32 0, i32 0), i32 432, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.get_stat_Ytime, i32 0, i32 0)) #12
  unreachable

; <label>:61                                      ; preds = %49, %38, %22, %11
  %62 = load i32, i32* %1
  ret i32 %62
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_ctime418(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 13
  %5 = bitcast %struct.timespec* %1 to i8*
  %6 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false)
  %7 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %8 = load { i64, i64 }, { i64, i64 }* %7, align 1
  ret { i64, i64 } %8
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_birthtime419(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  %t = alloca %struct.timespec, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = getelementptr inbounds %struct.timespec, %struct.timespec* %t, i32 0, i32 0
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %struct.timespec, %struct.timespec* %t, i32 0, i32 1
  store i64 -1, i64* %4, align 8
  %5 = load %struct.stat*, %struct.stat** %2, align 8
  %6 = bitcast %struct.timespec* %1 to i8*
  %7 = bitcast %struct.timespec* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 16, i32 8, i1 false)
  %8 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 1
  ret { i64, i64 } %9
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @get_stat_atime420(%struct.stat* %st) #10 {
  %1 = alloca %struct.timespec, align 8
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 11
  %5 = bitcast %struct.timespec* %1 to i8*
  %6 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false)
  %7 = bitcast %struct.timespec* %1 to { i64, i64 }*
  %8 = load { i64, i64 }, { i64, i64 }* %7, align 1
  ret { i64, i64 } %8
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { inlinehint nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2, !2, !2, !2, !2, !2, !2}

!0 = !{i32 2, !"Dwarf Version", i32 4}
!1 = !{i32 1, !"Debug Info Version", i32 1}
!2 = !{!"Ubuntu clang version 3.4-1ubuntu3 (tags/RELEASE_34/final) (based on LLVM 3.4)"}
